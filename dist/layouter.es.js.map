{"version":3,"file":"layouter.es.js","sources":["../src/helpers/breakpointsNums.ts","../src/helpers/createScopeStyles.ts","../src/helpers/scopesStylesBuilder.ts","../src/helpers/breakpointsOrdered.ts","../src/config/main.ts","../src/helpers/prepareParam.ts","../src/helpers/regError.ts","../src/helpers/calPercentage.ts","../src/helpers/getScopeByclassName.ts","../src/methods/insertRules.ts","../src/config/flex.ts","../src/helpers/percentageConverter.ts","../src/helpers/createStyles.ts","../src/helpers/nameCleaner.ts","../src/helpers/buildCss.ts","../src/methods/buildCols.ts","../src/methods/buildFlex.ts","../src/helpers/processedNumber.ts","../src/helpers/buildAttr.ts","../src/methods/buildPad.ts","../src/methods/buildPadTop.ts","../src/methods/buildPadRight.ts","../src/methods/buildPadBottom.ts","../src/methods/buildPadLeft.ts","../src/methods/buildMar.ts","../src/methods/buildMarTop.ts","../src/methods/buildMarRight.ts","../src/methods/buildMarBottom.ts","../src/methods/buildMarLeft.ts","../src/methods/buildMaxWidth.ts","../src/methods/buildMaxHeight.ts","../src/methods/buildMinWidth.ts","../src/methods/buildMinHeight.ts","../src/methods/buildHeight.ts","../src/methods/buildWidth.ts","../src/config/position.ts","../src/methods/buildPosition.ts","../src/methods/buildTop.ts","../src/methods/buildRight.ts","../src/methods/buildBottom.ts","../src/methods/buildLeft.ts","../src/config/display.ts","../src/methods/buildDisplay.ts","../src/helpers/buildXY.ts","../src/methods/buildPadX.ts","../src/methods/buildPadY.ts","../src/methods/buildMarX.ts","../src/methods/buildMarY.ts","../src/config/processors.ts","../src/methods/getParameters.ts","../src/methods/build.ts","../src/utils/addClasses.ts","../src/utils/removeAttr.ts","../src/helpers/eventReady.ts","../src/methods/set.ts","../src/helpers/directiveValues.ts","../src/methods/setFlex.ts","../src/methods/SetCols.ts","../src/helpers/setAttr.ts","../src/methods/setHeight.ts","../src/methods/setMarBottom.ts","../src/methods/setMarLeft.ts","../src/methods/setMarRight.ts","../src/methods/setMar.ts","../src/methods/setMarTop.ts","../src/methods/setMaxWidth.ts","../src/methods/setMinHeight.ts","../src/methods/setMinWidth.ts","../src/methods/setPadBottom.ts","../src/methods/setPadLeft.ts","../src/methods/setPadRight.ts","../src/methods/setPad.ts","../src/methods/setPadTop.ts","../src/methods/setWidth.ts","../src/methods/setMaxHeight.ts","../src/methods/setPosition.ts","../src/methods/setTop.ts","../src/methods/setRight.ts","../src/methods/setBottom.ts","../src/methods/setLeft.ts","../src/helpers/setterXY.ts","../src/methods/setPadX.ts","../src/methods/setPadY.ts","../src/methods/setMarX.ts","../src/methods/setMarY.ts","../src/methods/reset.ts","../src/helpers/searchAndProcess.ts","../src/helpers/mainObserver.ts","../src/layouter.ts"],"sourcesContent":["export type TNumProp = 'width' | 'cols';\r\n\r\nexport interface IBreakpoint {\r\n  alias: string;\r\n  width: number;\r\n}\r\n\r\nexport interface IBreakpoints {\r\n  [alias: string]: {\r\n    width: number;\r\n    cols: number;\r\n  };\r\n}\r\n\r\nexport interface IBreakpointObj {\r\n  [alias: string]: number;\r\n}\r\n\r\nconst breakpointsNums = (\r\n  objBps: IBreakpoints,\r\n  propName: TNumProp\r\n): IBreakpointObj => {\r\n  const sizes: IBreakpointObj = {};\r\n\r\n  if (propName === 'width') {\r\n    Object.keys(objBps)\r\n      .map((bp: string) => {\r\n        return {\r\n          alias: bp,\r\n          width: objBps[bp].width,\r\n        };\r\n      })\r\n      .sort((a: IBreakpoint, b: IBreakpoint) =>\r\n        a.width > b.width ? 1 : b.width > a.width ? -1 : 0\r\n      )\r\n      .forEach((bp: IBreakpoint, index: number) => {\r\n        sizes[bp.alias] = !index ? 0 : objBps[bp.alias][propName];\r\n      });\r\n  } else {\r\n    Object.keys(objBps).forEach((bp) => {\r\n      sizes[bp] = objBps[bp][propName];\r\n    });\r\n  }\r\n\r\n  return sizes;\r\n};\r\n\r\nexport default breakpointsNums;\r\n","export type TInsertion = 'before' | 'after' | 'append';\r\n\r\nexport interface ICreateScopeStyles {\r\n  bridge?: boolean;\r\n  bp: string;\r\n  insertionType: TInsertion;\r\n  node: HTMLElement;\r\n  context: Window & typeof globalThis;\r\n}\r\n\r\nexport interface IRCreateScopeStyles {\r\n  method:\r\n    | CSSStyleSheet\r\n    | {\r\n        insertRule: (ruleCss: string) => void;\r\n        rules: string[];\r\n      };\r\n  node: HTMLElement;\r\n}\r\n\r\nconst createScopeStyles = ({\r\n  bridge: withBridge,\r\n  bp,\r\n  insertionType,\r\n  node,\r\n  context,\r\n}: ICreateScopeStyles): IRCreateScopeStyles => {\r\n  let stylesScope = context.document.getElementById('layouter-' + bp);\r\n  if (!stylesScope) {\r\n    stylesScope = context.document.createElement('style');\r\n    stylesScope.appendChild(context.document.createTextNode('')); // WebKit hack :(\r\n    const nodeParent = node.parentNode as HTMLDivElement;\r\n    switch (insertionType) {\r\n      case 'before':\r\n        nodeParent.insertBefore(stylesScope, node);\r\n        break;\r\n      case 'after':\r\n        if (node.nextSibling) {\r\n          nodeParent.insertBefore(stylesScope, node.nextSibling);\r\n        } else {\r\n          nodeParent.appendChild(stylesScope);\r\n        }\r\n        break;\r\n      case 'append':\r\n        node.appendChild(stylesScope);\r\n        break;\r\n    }\r\n    stylesScope.id = 'layouter-' + bp;\r\n  }\r\n\r\n  let bridge: IRCreateScopeStyles;\r\n  if (withBridge) {\r\n    bridge = {\r\n      method: (stylesScope as HTMLStyleElement).sheet as CSSStyleSheet,\r\n      node: stylesScope,\r\n    };\r\n  } else {\r\n    bridge = {\r\n      method: {\r\n        insertRule: (ruleCss: string) => {\r\n          (stylesScope as HTMLDivElement).appendChild(\r\n            context.document.createTextNode(ruleCss)\r\n          );\r\n        },\r\n        rules: [],\r\n      },\r\n      node: stylesScope,\r\n    };\r\n  }\r\n  return bridge;\r\n};\r\n\r\nexport default createScopeStyles;\r\n","import { IBreakpoints } from './breakpointsNums';\r\nimport createScopeStyles, { IRCreateScopeStyles } from './createScopeStyles';\r\n\r\nexport interface IScopes {\r\n  [name: string]: IRCreateScopeStyles;\r\n}\r\n\r\nexport interface IScopesStylesBuilder {\r\n  breakpoints: IBreakpoints;\r\n  bridge: boolean;\r\n  scope?: IScopes;\r\n  context: Window & typeof globalThis;\r\n}\r\n\r\nexport const scopesStylesBuilder = ({\r\n  breakpoints,\r\n  bridge,\r\n  scope,\r\n  context,\r\n}: IScopesStylesBuilder): IScopes => {\r\n  const scopes: IScopes = scope || {};\r\n  Object.keys(breakpoints).forEach((bp: string) => {\r\n    if (!scopes[bp]) {\r\n      scopes[bp] = createScopeStyles({\r\n        bridge: bridge,\r\n        bp,\r\n        insertionType: 'append',\r\n        node: context.document.body,\r\n        context,\r\n      });\r\n    }\r\n  });\r\n  return scopes;\r\n};\r\n","import { ICols } from '../config/main';\r\nimport { IBreakpoints } from './breakpointsNums';\r\n\r\nconst breakpointsOrdered = (bps: IBreakpoints, sizes: ICols) => {\r\n  const bpsOrdered: IBreakpoints = {};\r\n  Object.keys(sizes).forEach((bpName) => (bpsOrdered[bpName] = bps[bpName]));\r\n  return bpsOrdered;\r\n};\r\n\r\nexport default breakpointsOrdered;\r\n","import { ILayouter } from './../layouter';\r\nimport breakpointsNums, { IBreakpoints } from '../helpers/breakpointsNums';\r\nimport { IScopes, scopesStylesBuilder } from '../helpers/scopesStylesBuilder';\r\nimport breakpointsOrdered from '../helpers/breakpointsOrdered';\r\n\r\nexport interface ICols {\r\n  [colAlias: string]: number;\r\n}\r\n\r\nexport interface IConfigUser {\r\n  prefix: string;\r\n  breakpoints: IBreakpoints;\r\n  bridge: boolean;\r\n  debug?: boolean;\r\n  ready?: (instance: ILayouter) => void;\r\n  searchOnInit: boolean;\r\n  observer: boolean;\r\n}\r\n\r\ninterface IConfigNumsIn {\r\n  bps: IBreakpoints;\r\n  bridge: boolean;\r\n  scope?: IScopes;\r\n  context: Window & typeof globalThis;\r\n}\r\n\r\ninterface IConfigNumsOut {\r\n  scope: IScopes;\r\n  cols: ICols;\r\n  sizes: ICols;\r\n  breakpoints: IBreakpoints;\r\n}\r\n\r\nexport interface IConfig\r\n  extends Omit<IConfigUser, 'breakpoints'>,\r\n    IConfigNumsOut {\r\n  context: Window & typeof globalThis;\r\n  styles: {\r\n    [className: string]: string;\r\n  };\r\n  version: string;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    layouterConfig: Partial<IConfigUser>;\r\n  }\r\n}\r\n\r\nconst breakpointsInit: IBreakpoints = {\r\n  xs: {\r\n    width: 360,\r\n    cols: 15,\r\n  },\r\n  sm: {\r\n    width: 600,\r\n    cols: 25,\r\n  },\r\n  md: {\r\n    width: 900,\r\n    cols: 31,\r\n  },\r\n  lg: {\r\n    width: 1200,\r\n    cols: 41,\r\n  },\r\n  xlg: {\r\n    width: 1536,\r\n    cols: 51,\r\n  },\r\n};\r\n\r\nexport let baseConfig: IConfigUser = {\r\n  prefix: '',\r\n  breakpoints: breakpointsInit,\r\n  bridge: true,\r\n  debug: true,\r\n  searchOnInit: true,\r\n  observer: true,\r\n};\r\n\r\nlet config: IConfig;\r\n\r\nconst configNums = ({\r\n  bps,\r\n  bridge,\r\n  scope,\r\n  context,\r\n}: IConfigNumsIn): IConfigNumsOut => {\r\n  const sizes = breakpointsNums(bps, 'width');\r\n  const finalBps = breakpointsOrdered(bps, sizes);\r\n  return {\r\n    sizes,\r\n    cols: breakpointsNums(bps, 'cols'),\r\n    scope: scopesStylesBuilder({\r\n      breakpoints: finalBps,\r\n      bridge,\r\n      scope: scope,\r\n      context,\r\n    }),\r\n    breakpoints: finalBps,\r\n  };\r\n};\r\n\r\nexport const setConfig = (\r\n  context: Window & typeof globalThis,\r\n  customCfg: Partial<IConfigUser> = {}\r\n): IConfig => {\r\n  const contextConfig = context.layouterConfig || {};\r\n\r\n  baseConfig = {\r\n    ...baseConfig,\r\n    ...customCfg,\r\n    ...contextConfig,\r\n  };\r\n\r\n  config = {\r\n    context,\r\n    ...baseConfig,\r\n    ...configNums({\r\n      bps: baseConfig.breakpoints,\r\n      bridge: baseConfig.bridge,\r\n      context,\r\n    }),\r\n    styles: {},\r\n    version: '1.9.1',\r\n  };\r\n\r\n  return config;\r\n};\r\n\r\nconst getConfig = (): IConfig => {\r\n  return config;\r\n};\r\n\r\nexport const setStyles = (className: string, value: string) => {\r\n  config.styles[className] = value;\r\n};\r\n\r\nexport const updateConfig = (userConfig: Partial<IConfigUser>): IConfig => {\r\n  config = {\r\n    ...config,\r\n    ...userConfig,\r\n  };\r\n\r\n  if (userConfig.breakpoints) {\r\n    config = {\r\n      ...config,\r\n      ...configNums({\r\n        bps: config.breakpoints,\r\n        bridge: config.bridge,\r\n        scope: config.scope,\r\n        context: config.context,\r\n      }),\r\n    };\r\n  }\r\n\r\n  return config;\r\n};\r\n\r\nexport default getConfig;\r\n","import getConfig from '../config/main';\r\n\r\nexport interface IPrepareParamObj {\r\n  widthBp: boolean;\r\n  numbers: string;\r\n  breakPoints: string;\r\n  important: boolean;\r\n}\r\n\r\nconst prepareParam = (param: string): IPrepareParamObj => {\r\n  let bp: string;\r\n  let argParam = param;\r\n  let important = false;\r\n  const haveBp = argParam.includes('@');\r\n  if (haveBp) {\r\n    const bpSplited = argParam.split('@');\r\n    argParam = bpSplited[0];\r\n    bp = bpSplited[1];\r\n  } else {\r\n    const config = getConfig();\r\n    bp = Object.keys(config.breakpoints)[0];\r\n  }\r\n\r\n  if (param.includes('!')) {\r\n    important = true;\r\n    bp = bp.replace(/!/g, '');\r\n    argParam = argParam.replace(/!/g, '');\r\n  }\r\n\r\n  return {\r\n    widthBp: haveBp,\r\n    numbers: argParam,\r\n    breakPoints: bp,\r\n    important,\r\n  };\r\n};\r\n\r\nexport default prepareParam;\r\n","import config from '../config/main';\r\n\r\nconst regError = (\r\n  name: string,\r\n  message: string,\r\n  Node?: Element | HTMLElement\r\n): Error => {\r\n  const err = new Error();\r\n  err.name = name;\r\n  err.message = message;\r\n  const intConfig = config();\r\n  if (intConfig.debug) {\r\n    console.error(err);\r\n    if (Node) console.log(Node);\r\n  }\r\n  return err;\r\n};\r\n\r\nexport default regError;\r\n","const calPercentage = (n1: number, n2: number): string => {\r\n  const cal = (n1 * 100) / n2;\r\n  const haveDecimal = cal - Math.floor(cal) !== 0;\r\n  const result = haveDecimal ? cal.toFixed(3) : cal;\r\n  return result + '%';\r\n};\r\n\r\nexport default calPercentage;\r\n","import config from '../config/main';\r\nimport createScopeStyles, { IRCreateScopeStyles } from './createScopeStyles';\r\n\r\nconst getScopeByclassName = (className: string): IRCreateScopeStyles => {\r\n  const nameClass = className.replace(/!/g, '');\r\n  const atIndex = nameClass.indexOf('@');\r\n  const intConfig = config();\r\n  const scope = intConfig.scope;\r\n  const bridge = intConfig.bridge;\r\n  const context = intConfig.context;\r\n\r\n  // Haven´t a BP designed\r\n  if (atIndex === -1) {\r\n    const firstBp = Object.keys(intConfig.breakpoints)[0];\r\n    return scope[firstBp as string];\r\n  }\r\n\r\n  // Have a BP designed, a normal BP.\r\n  const bp = nameClass.substring(atIndex + 1);\r\n  if (!bp.includes('-')) return scope[bp]; // A simple BP (13/15@lg), not compound (like this: 13/15@sm-md).\r\n\r\n  // A BP until. Example 13/15@-md\r\n  if (bp.substring(0, 1) === '-') {\r\n    if (scope[bp]) return scope[bp]; // exists the Scope.\r\n    const bpUntil = bp.substring(1);\r\n    scope[bp] = createScopeStyles({\r\n      bridge: bridge,\r\n      bp,\r\n      insertionType: 'before',\r\n      node: scope[bpUntil].node,\r\n      context,\r\n    });\r\n    return scope[bp]; // returning a new scope created\r\n  }\r\n\r\n  // A BP from and until (a BP compound). Example: Example 13/15@sm-md\r\n  if (scope[bp]) {\r\n    return scope[bp]; // exists the Scope.\r\n  }\r\n\r\n  const fromBp = bp.split('-')[0];\r\n  scope[bp] = createScopeStyles({\r\n    bridge: bridge,\r\n    bp,\r\n    insertionType: 'after',\r\n    node: scope[fromBp].node,\r\n    context,\r\n  });\r\n\r\n  return scope[bp]; // returning a new scope compounded created\r\n};\r\n\r\nexport default getScopeByclassName;\r\n","import config, { setStyles } from '../config/main';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport getScopeByclassName from '../helpers/getScopeByclassName';\r\n\r\nconst insertRules = (objStyles: IStyles) => {\r\n  const intConfig = config();\r\n\r\n  for (const className in objStyles) {\r\n    if (!intConfig.styles[className]) {\r\n      const nodeScope = getScopeByclassName(className);\r\n      const valClass = objStyles[className];\r\n      const rules = nodeScope.method.rules;\r\n      nodeScope.method.insertRule(valClass, rules ? rules.length : 0);\r\n      setStyles(className, valClass); // saving in styles vault\r\n    }\r\n  }\r\n};\r\n\r\nexport default insertRules;\r\n","const flexProsAndValsBase = {\r\n  jc: {\r\n    ruleCss: 'justify-content',\r\n    classPrefix: 'jc',\r\n  },\r\n  ai: {\r\n    ruleCss: 'align-items',\r\n    classPrefix: 'ai',\r\n  },\r\n  ce: {\r\n    ruleCss: 'center',\r\n    classPrefix: 'ce',\r\n  },\r\n  fs: {\r\n    ruleCss: 'flex-start',\r\n    classPrefix: 'fs',\r\n  },\r\n  fe: {\r\n    ruleCss: 'flex-end',\r\n    classPrefix: 'fe',\r\n  },\r\n  sb: {\r\n    ruleCss: 'space-between',\r\n    classPrefix: 'sb',\r\n  },\r\n  sa: {\r\n    ruleCss: 'space-around',\r\n    classPrefix: 'sa',\r\n  },\r\n  fw: {\r\n    ruleCss: 'flex-wrap',\r\n    classPrefix: 'fw',\r\n  },\r\n  nw: {\r\n    ruleCss: 'nowrap',\r\n    classPrefix: 'nw',\r\n  },\r\n  w: {\r\n    ruleCss: 'wrap',\r\n    classPrefix: 'w',\r\n  },\r\n  wr: {\r\n    ruleCss: 'wrap-reverse',\r\n    classPrefix: 'wr',\r\n  },\r\n  fd: {\r\n    ruleCss: 'flex-direction',\r\n    classPrefix: 'fd',\r\n  },\r\n  r: {\r\n    ruleCss: 'row',\r\n    classPrefix: 'r',\r\n  },\r\n  rr: {\r\n    ruleCss: 'row-reverse',\r\n    classPrefix: 'rr',\r\n  },\r\n  co: {\r\n    ruleCss: 'column',\r\n    classPrefix: 'co',\r\n  },\r\n  cor: {\r\n    ruleCss: 'column-reverse',\r\n    classPrefix: 'co',\r\n  },\r\n  au: {\r\n    ruleCss: 'auto',\r\n    classPrefix: 'au',\r\n  },\r\n  st: {\r\n    ruleCss: 'stretch',\r\n    classPrefix: 'st',\r\n  },\r\n  bl: {\r\n    ruleCss: 'baseline',\r\n    classPrefix: 'bl',\r\n  },\r\n  in: {\r\n    ruleCss: 'initial',\r\n    classPrefix: 'in',\r\n  },\r\n  ih: {\r\n    ruleCss: 'inherit',\r\n    classPrefix: 'ih',\r\n  },\r\n};\r\n\r\nconst flexPropsAndValsSelfBase = {\r\n  fg: {\r\n    ruleCss: 'flex-grow',\r\n    classPrefix: 'fg',\r\n  },\r\n  fh: {\r\n    ruleCss: 'flex-shrink',\r\n    classPrefix: 'fh',\r\n  },\r\n  as: {\r\n    ruleCss: 'align-self',\r\n    classPrefix: 'as',\r\n  },\r\n  or: {\r\n    ruleCss: 'order',\r\n    classPrefix: 'or',\r\n  },\r\n};\r\n\r\nconst flexPropsAndValsSelf = {\r\n  ...flexPropsAndValsSelfBase,\r\n  'flex-grow': flexPropsAndValsSelfBase.fg,\r\n  'flex-shrink': flexPropsAndValsSelfBase.fh,\r\n  'align-self': flexPropsAndValsSelfBase.as,\r\n  order: flexPropsAndValsSelfBase.or,\r\n};\r\n\r\nexport const flexProsAndVals = {\r\n  ...flexProsAndValsBase,\r\n  ...flexPropsAndValsSelf,\r\n  'justify-content': flexProsAndValsBase.jc,\r\n  'align-items': flexProsAndValsBase.ai,\r\n  center: flexProsAndValsBase.ce,\r\n  'flex-start': flexProsAndValsBase.fs,\r\n  'flex-end': flexProsAndValsBase.fe,\r\n  'space-between': flexProsAndValsBase.sb,\r\n  'space-around': flexProsAndValsBase.fs,\r\n  'flex-wrap': flexProsAndValsBase.fw,\r\n  nowrap: flexProsAndValsBase.nw,\r\n  w: flexProsAndValsBase.w,\r\n  'wrap-reverse': flexProsAndValsBase.wr,\r\n  'flex-direction': flexProsAndValsBase.fd,\r\n  row: flexProsAndValsBase.r,\r\n  'row-reverse': flexProsAndValsBase.rr,\r\n  column: flexProsAndValsBase.co,\r\n  'column-reverse': flexProsAndValsBase.cor,\r\n  auto: flexProsAndValsBase.au,\r\n  stretch: flexProsAndValsBase.st,\r\n  baseline: flexProsAndValsBase.bl,\r\n  initial: flexProsAndValsBase.in,\r\n  inherit: flexProsAndValsBase.ih,\r\n};\r\n\r\nexport const flexAttrsSelf = Object.keys(flexPropsAndValsSelf);\r\n","const percentageConverter = (percentage: string) => {\r\n  return '0¯' + percentage.replace('%', '');\r\n};\r\n\r\nexport default percentageConverter;\r\n","import { flexAttrsSelf } from '../config/flex';\r\nimport config from '../config/main';\r\nimport { processors, TDirectiveName } from '../config/processors';\r\nimport { IBpCals } from './buildCss';\r\nimport percentageConverter from './percentageConverter';\r\n\r\nexport interface IStyles {\r\n  [name: string]: string;\r\n}\r\n\r\nconst createStyles = (directive: TDirectiveName, bps: IBpCals): IStyles => {\r\n  const intConfig = config();\r\n  const sizes = intConfig.sizes;\r\n  const prefix = intConfig.prefix;\r\n  const prop = processors[directive].ruleCss;\r\n  const styles: IStyles = {};\r\n\r\n  Object.keys(bps).forEach((bp) => {\r\n    // preparing the className\r\n    const shortNameClass = bps[bp].name;\r\n\r\n    // just if have a percentage\r\n    let nameClass = shortNameClass;\r\n    if (shortNameClass.includes('%')) {\r\n      nameClass = shortNameClass.replace(\r\n        shortNameClass,\r\n        percentageConverter(shortNameClass)\r\n      );\r\n    }\r\n\r\n    const finalPrefix = prefix ? prefix + '-' : '';\r\n    nameClass =\r\n      finalPrefix +\r\n      processors[directive].classPrefix +\r\n      '-' +\r\n      nameClass\r\n        .replace(/\\//g, '\\\\/')\r\n        .replace(/:/g, '\\\\:')\r\n        .replace('@', '\\\\@')\r\n        .split('.')\r\n        .join('_');\r\n\r\n    if (!intConfig.styles[nameClass]) {\r\n      // Property and value\r\n      let propAndVal;\r\n      if (directive === 'flex') {\r\n        propAndVal = bps[bp].value;\r\n        const flexImportant = shortNameClass.includes('!')\r\n          ? ';display:flex !important;'\r\n          : ';display:flex;';\r\n\r\n        // Searching a flex self inside. ['as' for 'align-self']\r\n        const attrsFlexSelfs = flexAttrsSelf.filter((nameAttrFlex) =>\r\n          shortNameClass.includes(nameAttrFlex + ':')\r\n        );\r\n        if (attrsFlexSelfs.length) {\r\n          // if the items number of flex selft (+1) is diferrent so exists other flex attribute. Example: as:ce jc:ce\r\n          if (attrsFlexSelfs.length + 1 !== shortNameClass.split(':').length) {\r\n            propAndVal += flexImportant;\r\n          }\r\n        } else {\r\n          propAndVal += flexImportant;\r\n        }\r\n      } else {\r\n        propAndVal = prop + ':' + bps[bp].value;\r\n      }\r\n\r\n      let rule = '@media screen and ';\r\n      let direct = false;\r\n      if (!bp.includes('-')) {\r\n        // no tiene until\r\n        if (sizes[bp]) {\r\n          rule += '(min-width: ' + sizes[bp] + 'px)';\r\n        } else {\r\n          rule = '.' + nameClass.replace(/!/g, '\\\\!') + '{' + propAndVal + '}';\r\n          direct = true;\r\n        }\r\n      } else {\r\n        const bpSplited = bp.split('-');\r\n        const bp1 = bpSplited[0];\r\n        if (bp1) rule += '(min-width: ' + sizes[bp1] + 'px) and ';\r\n        const bp2 = bpSplited[1];\r\n        rule += '(max-width: ' + (sizes[bp2] - 1) + 'px)';\r\n      }\r\n\r\n      if (!direct) {\r\n        rule += '{.' + nameClass.replace(/!/g, '\\\\!') + '{' + propAndVal + '}}';\r\n      }\r\n\r\n      styles[nameClass] = rule;\r\n    } else {\r\n      styles[nameClass] = intConfig.styles[nameClass];\r\n    }\r\n  });\r\n  return styles;\r\n};\r\n\r\nexport default createStyles;\r\n","import { IStyles } from './createStyles';\r\n\r\nconst replaceList = [\r\n  ['/', ''],\r\n  ['\\\\', '/'],\r\n  ['/:', ':'],\r\n  ['\\\\:', ':'],\r\n  ['\\\\@', '@'],\r\n  ['/@', '@'],\r\n];\r\n\r\nconst nameCleaner = (objStyles: IStyles): IStyles => {\r\n  const obj: IStyles = {};\r\n  for (const name in objStyles) {\r\n    let newName = name;\r\n    replaceList.forEach((reItem) => {\r\n      newName = newName.split(reItem[0]).join(reItem[1]);\r\n    });\r\n    obj[newName] = objStyles[name];\r\n  }\r\n  return obj;\r\n};\r\n\r\nexport default nameCleaner;\r\n","import { TDirectiveName } from '../config/processors';\r\nimport insertRules from '../methods/insertRules';\r\nimport createStyles, { IStyles } from './createStyles';\r\nimport nameCleaner from './nameCleaner';\r\n\r\nexport interface IRBuildStyles {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport interface IBpCals {\r\n  [bpName: string]: IRBuildStyles;\r\n}\r\n\r\nexport interface IBuildCss {\r\n  type: TDirectiveName;\r\n  bps: IBpCals;\r\n  deep: boolean;\r\n}\r\n\r\nconst buildCss = (data: IBuildCss): IStyles => {\r\n  // creating the styles\r\n  const objStyles = createStyles(data.type, data.bps);\r\n\r\n  // Inserting CSS rules\r\n  if (data.deep) {\r\n    insertRules(objStyles);\r\n  }\r\n\r\n  // name classes cleaner\r\n  return nameCleaner(objStyles);\r\n};\r\n\r\nexport default buildCss;\r\n","import prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\nimport calPercentage from '../helpers/calPercentage';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport getConfig from '../config/main';\r\nimport { IStyles } from '../helpers/createStyles';\r\n\r\nconst buildCols = (values: string, insertStyles = false): IStyles | Error => {\r\n  let cols: number[];\r\n  let bp;\r\n  const bpCals: IBpCals = {};\r\n  const config = getConfig();\r\n\r\n  // Getting numbers\r\n  let selectorName, propValue, paramPrepared;\r\n  const directBp = Object.keys(config.breakpoints)[0];\r\n\r\n  let err: boolean | Error = false;\r\n\r\n  for (const item of values.split(' ')) {\r\n    let param = item;\r\n    selectorName = param;\r\n    paramPrepared = prepareParam(param);\r\n    bp = paramPrepared.breakPoints;\r\n    param = paramPrepared.numbers;\r\n\r\n    if (param.includes('/')) {\r\n      const paramSplited = param.split('/');\r\n      cols = [Number(paramSplited[0]), Number(paramSplited[1])];\r\n    } else {\r\n      if (paramPrepared.widthBp) {\r\n        if (bp.includes('-')) {\r\n          err = regError(\r\n            'SyntaxError',\r\n            \"You can't determine a 'until breakpoint' when use the explicit columns max: \" +\r\n              values\r\n          );\r\n          break;\r\n        } else {\r\n          cols = [Number(param), config.cols[bp] as number];\r\n        }\r\n      } else {\r\n        cols = [Number(param), config.cols[directBp] as number];\r\n      }\r\n    }\r\n\r\n    propValue = calPercentage(cols[0], cols[1]);\r\n    if (paramPrepared.important) propValue += ' !important';\r\n\r\n    bpCals[bp] = {\r\n      name: selectorName,\r\n      value: propValue,\r\n    };\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'cols',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildCols;\r\n","import { flexAttrsSelf, flexProsAndVals } from '../config/flex';\r\nimport getConfig from '../config/main';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\n\r\nconst buildFlex = (valFlex: string, insertStyles = false): IStyles | Error => {\r\n  const bpCals: IBpCals = {};\r\n\r\n  // Getting numbers\r\n  let err: boolean | Error = false;\r\n  const config = getConfig();\r\n  const firstBp = Object.keys(config.breakpoints)[0];\r\n\r\n  for (const param of valFlex.split(' ')) {\r\n    let propVal;\r\n    const paramPrepared = prepareParam(param);\r\n    const bpNames = paramPrepared.breakPoints;\r\n    const flexSplited = paramPrepared.numbers.split(':');\r\n    const nameProp = flexSplited[0] as keyof typeof flexProsAndVals; // 'fc' o 'or'\r\n    const valProp = flexSplited[1] as keyof typeof flexProsAndVals; // 'ce' o '1'\r\n    let valAlias: string;\r\n\r\n    if (!flexAttrsSelf.includes(nameProp)) {\r\n      if (!flexProsAndVals[nameProp]) {\r\n        err = regError(\r\n          'Non-existent Alias',\r\n          \"Don't exists the alias '\" + nameProp + \"' in Flex vault.\"\r\n        );\r\n        break;\r\n      }\r\n      if (!flexProsAndVals[valProp]) {\r\n        err = regError(\r\n          'Non-existent Alias',\r\n          \"Don't exists the alias '\" + valProp + \"' in Flex vault.\"\r\n        );\r\n        break;\r\n      }\r\n      propVal =\r\n        flexProsAndVals[nameProp].ruleCss +\r\n        ':' +\r\n        flexProsAndVals[valProp].ruleCss;\r\n      valAlias = flexProsAndVals[valProp].classPrefix;\r\n    } else {\r\n      propVal = flexProsAndVals[nameProp].ruleCss + ':' + valProp;\r\n      valAlias = valProp;\r\n    }\r\n\r\n    let sufixBp = bpNames === firstBp ? '' : '@' + bpNames;\r\n    if (paramPrepared.important) {\r\n      propVal += ' !important';\r\n      sufixBp += '!';\r\n    }\r\n\r\n    let selectorName =\r\n      flexProsAndVals[nameProp].classPrefix + ':' + valAlias + sufixBp;\r\n\r\n    if (!bpCals[bpNames]) {\r\n      bpCals[bpNames] = {\r\n        name: selectorName,\r\n        value: propVal,\r\n      };\r\n    } else {\r\n      if (selectorName.includes('@')) selectorName = selectorName.split('@')[0]; // just here because will be contact with the other className\r\n      let prevName = bpCals[bpNames].name.split('@')[0];\r\n      if (bpCals[bpNames].name.includes('!') && !prevName.includes('!'))\r\n        prevName += '!';\r\n\r\n      bpCals[bpNames].name = prevName + '-' + selectorName + sufixBp;\r\n      bpCals[bpNames].value += ';' + propVal;\r\n    }\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'flex',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildFlex;\r\n","import calPercentage from './calPercentage';\r\n\r\nconst relativeMeasures = ['%', 'rem', 'em', 'ex', 'vw', 'vh', 'pt', 'cm', 'pc'];\r\n\r\nconst processedNumber = (n: string) => {\r\n  let nProcessed;\r\n  if (n.includes('/')) {\r\n    nProcessed = n.split('/');\r\n    nProcessed = calPercentage(\r\n      parseFloat(nProcessed[0]),\r\n      parseFloat(nProcessed[1])\r\n    );\r\n  } else if (n === 'auto') {\r\n    nProcessed = 'auto';\r\n  } else {\r\n    const relativeUnits = relativeMeasures.filter((unit) => {\r\n      return n.includes(unit);\r\n    });\r\n    if (relativeUnits.length) {\r\n      nProcessed = n;\r\n    } else {\r\n      nProcessed = n === '0' ? n : n + 'px';\r\n    }\r\n  }\r\n  return nProcessed;\r\n};\r\n\r\nexport default processedNumber;\r\n","import { TDirectiveName } from '../config/processors';\r\nimport buildCss, { IBpCals } from './buildCss';\r\nimport { IStyles } from './createStyles';\r\nimport prepareParam from './prepareParam';\r\nimport processedNumber from './processedNumber';\r\n\r\nconst buildAttr = (\r\n  values: string,\r\n  directive: TDirectiveName,\r\n  insertStyles = false\r\n): IStyles => {\r\n  const bpCals: IBpCals = {};\r\n\r\n  values.split(' ').forEach((param) => {\r\n    const paramProcessed = prepareParam(param);\r\n    const bpNames = paramProcessed.breakPoints;\r\n\r\n    // processing number values\r\n    let propValue = paramProcessed.numbers\r\n      .split('-')\r\n      .map((n) => processedNumber(n))\r\n      .join(' ');\r\n    if (paramProcessed.important) propValue += ' !important';\r\n    bpCals[bpNames] = {\r\n      name: param,\r\n      value: propValue,\r\n    };\r\n  });\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: directive,\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildAttr;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPad = (valPads: string, insertStyles = false) => {\r\n  return buildAttr(valPads, 'pad', insertStyles);\r\n};\r\n\r\nexport default buildPad;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadTop = (valPadTop: string, insertStyles = false) => {\r\n  return buildAttr(valPadTop, 'padt', insertStyles);\r\n};\r\n\r\nexport default buildPadTop;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadRight = (valPadRight: string, insertStyles = false) => {\r\n  return buildAttr(valPadRight, 'padr', insertStyles);\r\n};\r\n\r\nexport default buildPadRight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadBottom = (valPadBottom: string, insertStyles = false) => {\r\n  return buildAttr(valPadBottom, 'padb', insertStyles);\r\n};\r\n\r\nexport default buildPadBottom;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadLeft = (valPadLeft: string, insertStyles = false) => {\r\n  return buildAttr(valPadLeft, 'padl', insertStyles);\r\n};\r\n\r\nexport default buildPadLeft;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMar = (valMars: string, insertStyles = false) => {\r\n  return buildAttr(valMars, 'mar', insertStyles);\r\n};\r\n\r\nexport default buildMar;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarTop = (valMarTop: string, insertStyles = false) => {\r\n  return buildAttr(valMarTop, 'mart', insertStyles);\r\n};\r\n\r\nexport default buildMarTop;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarRight = (valMarRight: string, insertStyles = false) => {\r\n  return buildAttr(valMarRight, 'marr', insertStyles);\r\n};\r\n\r\nexport default buildMarRight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarBottom = (valMarBottom: string, insertStyles = false) => {\r\n  return buildAttr(valMarBottom, 'marb', insertStyles);\r\n};\r\n\r\nexport default buildMarBottom;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarLeft = (valMarLeft: string, insertStyles = false) => {\r\n  return buildAttr(valMarLeft, 'marl', insertStyles);\r\n};\r\n\r\nexport default buildMarLeft;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMaxWidth = (valMaxWidth: string, insertStyles = false) => {\r\n  return buildAttr(valMaxWidth, 'mxw', insertStyles);\r\n};\r\n\r\nexport default buildMaxWidth;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMaxHeight = (valMaxHeight: string, insertStyles = false) => {\r\n  return buildAttr(valMaxHeight, 'mxh', insertStyles);\r\n};\r\n\r\nexport default buildMaxHeight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMinWidth = (valMinWidth: string, insertStyles = false) => {\r\n  return buildAttr(valMinWidth, 'miw', insertStyles);\r\n};\r\n\r\nexport default buildMinWidth;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMinHeight = (valMinHeight: string, insertStyles = false) => {\r\n  return buildAttr(valMinHeight, 'mih', insertStyles);\r\n};\r\n\r\nexport default buildMinHeight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildHeight = (valHeight: string, insertStyles = false) => {\r\n  return buildAttr(valHeight, 'hgt', insertStyles);\r\n};\r\n\r\nexport default buildHeight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildWidth = (valWidth: string, insertStyles = false) => {\r\n  return buildAttr(valWidth, 'wdh', insertStyles);\r\n};\r\n\r\nexport default buildWidth;\r\n","const positionProsAndValsBase = {\r\n  st: {\r\n    ruleCss: 'static',\r\n    classPrefix: 'st',\r\n  },\r\n  ab: {\r\n    ruleCss: 'absolute',\r\n    classPrefix: 'ab',\r\n  },\r\n  fi: {\r\n    ruleCss: 'fixed',\r\n    classPrefix: 'fi',\r\n  },\r\n  re: {\r\n    ruleCss: 'relative',\r\n    classPrefix: 're',\r\n  },\r\n  si: {\r\n    ruleCss: 'sticky',\r\n    classPrefix: 'si',\r\n  },\r\n  in: {\r\n    ruleCss: 'initial',\r\n    classPrefix: 'in',\r\n  },\r\n  ih: {\r\n    ruleCss: 'inherit',\r\n    classPrefix: 'ih',\r\n  },\r\n};\r\n\r\nexport const positionProsAndVals = {\r\n  ...positionProsAndValsBase,\r\n  static: positionProsAndValsBase.st,\r\n  absolute: positionProsAndValsBase.ab,\r\n  fixed: positionProsAndValsBase.fi,\r\n  relative: positionProsAndValsBase.re,\r\n  sticky: positionProsAndValsBase.si,\r\n  initial: positionProsAndValsBase.in,\r\n  inherit: positionProsAndValsBase.ih,\r\n};\r\n","import getConfig from '../config/main';\r\nimport { positionProsAndVals } from '../config/position';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\n\r\nconst buildPosition = (\r\n  valPos: string,\r\n  insertStyles = false\r\n): IStyles | Error => {\r\n  const bpCals: IBpCals = {};\r\n\r\n  // Getting numbers\r\n  let err: boolean | Error = false;\r\n  const config = getConfig();\r\n  const firstBp = Object.keys(config.breakpoints)[0];\r\n\r\n  for (const param of valPos.split(' ')) {\r\n    let propVal;\r\n    const paramPrepared = prepareParam(param);\r\n    const bpNames = paramPrepared.breakPoints;\r\n    const nameProp = paramPrepared.numbers as keyof typeof positionProsAndVals;\r\n\r\n    if (!positionProsAndVals[nameProp]) {\r\n      err = regError(\r\n        'Non-existent Alias',\r\n        \"Don't exists the alias '\" + nameProp + \"' in Position vault.\"\r\n      );\r\n      break;\r\n    }\r\n\r\n    propVal = positionProsAndVals[nameProp].ruleCss;\r\n    const className = positionProsAndVals[nameProp].classPrefix;\r\n\r\n    let sufixBp = bpNames === firstBp ? '' : '@' + bpNames;\r\n\r\n    if (paramPrepared.important) {\r\n      propVal += ' !important';\r\n      sufixBp += '!';\r\n    }\r\n\r\n    bpCals[bpNames] = {\r\n      name: className + sufixBp,\r\n      value: propVal,\r\n    };\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'pos',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildPosition;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildTop = (val: string, insertStyles = false) => {\r\n  return buildAttr(val, 't', insertStyles);\r\n};\r\n\r\nexport default buildTop;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildRight = (val: string, insertStyles = false) => {\r\n  return buildAttr(val, 'r', insertStyles);\r\n};\r\n\r\nexport default buildRight;\r\n","import buildAttr from '../helpers/buildAttr';\r\nimport { IStyles } from '../helpers/createStyles';\r\n\r\nconst buildBottom = (val: string, insertStyles = false): IStyles => {\r\n  return buildAttr(val, 'b', insertStyles);\r\n};\r\n\r\nexport default buildBottom;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildLeft = (val: string, insertStyles = false) => {\r\n  return buildAttr(val, 'l', insertStyles);\r\n};\r\n\r\nexport default buildLeft;\r\n","const displayProsAndValsBase = {\r\n  bl: {\r\n    ruleCss: 'block',\r\n    classPrefix: 'bl',\r\n  },\r\n  il: {\r\n    ruleCss: 'inline',\r\n    classPrefix: 'il',\r\n  },\r\n  ib: {\r\n    ruleCss: 'inline-block',\r\n    classPrefix: 'ib',\r\n  },\r\n  fx: {\r\n    ruleCss: 'flex',\r\n    classPrefix: 'fx',\r\n  },\r\n  if: {\r\n    ruleCss: 'inline-flex',\r\n    classPrefix: 'if',\r\n  },\r\n  no: {\r\n    ruleCss: 'none',\r\n    classPrefix: 'no',\r\n  },\r\n  in: {\r\n    ruleCss: 'initial',\r\n    classPrefix: 'in',\r\n  },\r\n  ih: {\r\n    ruleCss: 'inherit',\r\n    classPrefix: 'ih',\r\n  },\r\n};\r\n\r\nexport const displayProsAndVals = {\r\n  ...displayProsAndValsBase,\r\n  block: displayProsAndValsBase.bl,\r\n  inline: displayProsAndValsBase.il,\r\n  'inline-block': displayProsAndValsBase.ib,\r\n  flex: displayProsAndValsBase.fx,\r\n  'inline-flex': displayProsAndValsBase.if,\r\n  none: displayProsAndValsBase.no,\r\n  initial: displayProsAndValsBase.in,\r\n  inherit: displayProsAndValsBase.ih,\r\n};\r\n","import getConfig from '../config/main';\r\nimport { displayProsAndVals } from '../config/display';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\n\r\nconst buildDisplay = (\r\n  valDisplay: string,\r\n  insertStyles = false\r\n): IStyles | Error => {\r\n  const bpCals: IBpCals = {};\r\n\r\n  // Getting numbers\r\n  let err: boolean | Error = false;\r\n  const config = getConfig();\r\n  const firstBp = Object.keys(config.breakpoints)[0];\r\n\r\n  for (const param of valDisplay.split(' ')) {\r\n    let propVal;\r\n    const paramPrepared = prepareParam(param);\r\n    const bpNames = paramPrepared.breakPoints;\r\n    const nameProp = paramPrepared.numbers as keyof typeof displayProsAndVals;\r\n\r\n    if (!displayProsAndVals[nameProp]) {\r\n      err = regError(\r\n        'Non-existent Alias',\r\n        \"Don't exists the alias '\" + nameProp + \"' in display vault.\"\r\n      );\r\n      break;\r\n    }\r\n\r\n    propVal = displayProsAndVals[nameProp].ruleCss;\r\n    const className = displayProsAndVals[nameProp].classPrefix;\r\n\r\n    let sufixBp = bpNames === firstBp ? '' : '@' + bpNames;\r\n\r\n    if (paramPrepared.important) {\r\n      propVal += ' !important';\r\n      sufixBp += '!';\r\n    }\r\n\r\n    bpCals[bpNames] = {\r\n      name: className + sufixBp,\r\n      value: propVal,\r\n    };\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'd',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildDisplay;\r\n","import { IStyles } from './createStyles';\r\n\r\nexport interface IBuildXY {\r\n  values: string;\r\n  builderA: (valPadA: string, insertStyles: boolean) => IStyles;\r\n  builderB: (valPadB: string, insertStyles: boolean) => IStyles;\r\n  insertStyles: boolean;\r\n}\r\n\r\nconst buildXY = (data: IBuildXY): IStyles => {\r\n  const stylesA = data.builderA(data.values, data.insertStyles);\r\n  const stylesB = data.builderB(data.values, data.insertStyles);\r\n  const allStyles: IStyles = {};\r\n  for (const style in stylesA) {\r\n    allStyles[style] = stylesA[style];\r\n  }\r\n  for (const style in stylesB) {\r\n    allStyles[style] = stylesB[style];\r\n  }\r\n  return allStyles;\r\n};\r\n\r\nexport default buildXY;\r\n","import buildXY from '../helpers/buildXY';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport buildPadLeft from './buildPadLeft';\r\nimport buildPadRight from './buildPadRight';\r\n\r\nconst buildPadX = (valPadX: string, insertStyles = false): IStyles => {\r\n  return buildXY({\r\n    values: valPadX,\r\n    builderA: buildPadRight,\r\n    builderB: buildPadLeft,\r\n    insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildPadX;\r\n","import buildXY from '../helpers/buildXY';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport buildPadBottom from './buildPadBottom';\r\nimport buildPadTop from './buildPadTop';\r\n\r\nconst buildPadY = (valPadX: string, insertStyles = false): IStyles => {\r\n  return buildXY({\r\n    values: valPadX,\r\n    builderA: buildPadTop,\r\n    builderB: buildPadBottom,\r\n    insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildPadY;\r\n","import buildXY from '../helpers/buildXY';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport buildMarLeft from './buildMarLeft';\r\nimport buildMarRight from './buildMarRight';\r\n\r\nconst buildMarX = (valMarX: string, insertStyles = false): IStyles => {\r\n  return buildXY({\r\n    values: valMarX,\r\n    builderA: buildMarRight,\r\n    builderB: buildMarLeft,\r\n    insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildMarX;\r\n","import buildXY from '../helpers/buildXY';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport buildMarBottom from './buildMarBottom';\r\nimport buildMarTop from './buildMarTop';\r\n\r\nconst buildMarY = (valMarY: string, insertStyles = false): IStyles => {\r\n  return buildXY({\r\n    values: valMarY,\r\n    builderA: buildMarTop,\r\n    builderB: buildMarBottom,\r\n    insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildMarY;\r\n","import buildCols from '../methods/buildCols';\r\nimport buildFlex from '../methods/buildFlex';\r\nimport buildPad from '../methods/buildPad';\r\nimport buildPadTop from '../methods/buildPadTop';\r\nimport buildPadRight from '../methods/buildPadRight';\r\nimport buildPadBottom from '../methods/buildPadBottom';\r\nimport buildPadLeft from '../methods/buildPadLeft';\r\nimport buildMar from '../methods/buildMar';\r\nimport buildMarTop from '../methods/buildMarTop';\r\nimport buildMarRight from '../methods/buildMarRight';\r\nimport buildMarBottom from '../methods/buildMarBottom';\r\nimport buildMarLeft from '../methods/buildMarLeft';\r\nimport buildMaxWidth from '../methods/buildMaxWidth';\r\nimport buildMaxHeight from '../methods/buildMaxHeight';\r\nimport buildMinWidth from '../methods/buildMinWidth';\r\nimport buildMinHeight from '../methods/buildMinHeight';\r\nimport buildHeight from '../methods/buildHeight';\r\nimport buildWidth from '../methods/buildWidth';\r\nimport buildPosition from '../methods/buildPosition';\r\nimport buildTop from '../methods/buildTop';\r\nimport buildRight from '../methods/buildRight';\r\nimport buildBottom from '../methods/buildBottom';\r\nimport buildLeft from '../methods/buildLeft';\r\nimport buildDisplay from '../methods/buildDisplay';\r\nimport buildPadX from '../methods/buildPadX';\r\nimport buildPadY from '../methods/buildPadY';\r\nimport buildMarX from '../methods/buildMarX';\r\nimport buildMarY from '../methods/buildMarY';\r\n\r\nimport { IStyles } from '../helpers/createStyles';\r\n\r\ntype TDirectiveNameBase =\r\n  | 'cols'\r\n  | 'pad'\r\n  | 'padt'\r\n  | 'padr'\r\n  | 'padb'\r\n  | 'padl'\r\n  | 'padx'\r\n  | 'pady'\r\n  | 'mar'\r\n  | 'mart'\r\n  | 'marr'\r\n  | 'marb'\r\n  | 'marl'\r\n  | 'marx'\r\n  | 'mary'\r\n  | 'flex'\r\n  | 'mxw'\r\n  | 'mxh'\r\n  | 'miw'\r\n  | 'mih'\r\n  | 'wdh'\r\n  | 'hgt'\r\n  | 'pos'\r\n  | 't'\r\n  | 'r'\r\n  | 'b'\r\n  | 'l'\r\n  | 'd';\r\n\r\ntype TDirectiveNameExtended =\r\n  | 'c'\r\n  | 'fx'\r\n  | 'p'\r\n  | 'padding'\r\n  | 'pt'\r\n  | 'padding-top'\r\n  | 'pr'\r\n  | 'padding-right'\r\n  | 'pb'\r\n  | 'padding-bottom'\r\n  | 'pl'\r\n  | 'padding-left'\r\n  | 'py'\r\n  | 'padding-y'\r\n  | 'px'\r\n  | 'padding-x'\r\n  | 'my'\r\n  | 'margin-y'\r\n  | 'mx'\r\n  | 'margin-x'\r\n  | 'm'\r\n  | 'margin'\r\n  | 'mt'\r\n  | 'margin-top'\r\n  | 'mr'\r\n  | 'margin-right'\r\n  | 'mb'\r\n  | 'margin-bottom'\r\n  | 'ml'\r\n  | 'margin-left'\r\n  | 'w'\r\n  | 'width'\r\n  | 'h'\r\n  | 'height'\r\n  | 'max-width'\r\n  | 'max-height'\r\n  | 'min-width'\r\n  | 'min-height'\r\n  | 'position'\r\n  | 'top'\r\n  | 'right'\r\n  | 'bottom'\r\n  | 'left'\r\n  | 'display';\r\n\r\nexport type TDirectiveName = TDirectiveNameBase | TDirectiveNameExtended;\r\n\r\nexport interface IProcessor {\r\n  build: (values: string, insertStyles: boolean) => IStyles | Error;\r\n  ruleCss: string | string[];\r\n  classPrefix: string;\r\n}\r\n\r\nconst processorsBase: Record<TDirectiveNameBase, IProcessor> = {\r\n  cols: {\r\n    build: buildCols,\r\n    ruleCss: 'width',\r\n    classPrefix: 'c',\r\n  },\r\n\r\n  // Paddings\r\n  pad: {\r\n    build: buildPad,\r\n    ruleCss: 'padding',\r\n    classPrefix: 'p',\r\n  },\r\n  padt: {\r\n    build: buildPadTop,\r\n    ruleCss: 'padding-top',\r\n    classPrefix: 'pt',\r\n  },\r\n  padr: {\r\n    build: buildPadRight,\r\n    ruleCss: 'padding-right',\r\n    classPrefix: 'pr',\r\n  },\r\n  padb: {\r\n    build: buildPadBottom,\r\n    ruleCss: 'padding-bottom',\r\n    classPrefix: 'pb',\r\n  },\r\n  padl: {\r\n    build: buildPadLeft,\r\n    ruleCss: 'padding-left',\r\n    classPrefix: 'pl',\r\n  },\r\n  padx: {\r\n    build: buildPadX,\r\n    ruleCss: ['padding-left', 'padding-right'],\r\n    classPrefix: 'px',\r\n  },\r\n  pady: {\r\n    build: buildPadY,\r\n    ruleCss: ['padding-top', 'padding-bottom'],\r\n    classPrefix: 'py',\r\n  },\r\n\r\n  // Margin\r\n  mar: {\r\n    build: buildMar,\r\n    ruleCss: 'margin',\r\n    classPrefix: 'm',\r\n  },\r\n  mart: {\r\n    build: buildMarTop,\r\n    ruleCss: 'margin-top',\r\n    classPrefix: 'mt',\r\n  },\r\n  marr: {\r\n    build: buildMarRight,\r\n    ruleCss: 'margin-right',\r\n    classPrefix: 'mr',\r\n  },\r\n  marb: {\r\n    build: buildMarBottom,\r\n    ruleCss: 'margin-bottom',\r\n    classPrefix: 'mb',\r\n  },\r\n  marl: {\r\n    build: buildMarLeft,\r\n    ruleCss: 'margin-left',\r\n    classPrefix: 'ml',\r\n  },\r\n  marx: {\r\n    build: buildMarX,\r\n    ruleCss: ['margin-left', 'margin-right'],\r\n    classPrefix: 'px',\r\n  },\r\n  mary: {\r\n    build: buildMarY,\r\n    ruleCss: ['margin-top', 'margin-bottom'],\r\n    classPrefix: 'py',\r\n  },\r\n\r\n  // Flex Box\r\n  flex: {\r\n    build: buildFlex,\r\n    ruleCss: 'display: flex',\r\n    classPrefix: 'fx',\r\n  },\r\n\r\n  // Max & Min Width & Height\r\n  mxw: {\r\n    build: buildMaxWidth,\r\n    ruleCss: 'max-width',\r\n    classPrefix: 'mxw',\r\n  },\r\n\r\n  mxh: {\r\n    build: buildMaxHeight,\r\n    ruleCss: 'max-height',\r\n    classPrefix: 'mxh',\r\n  },\r\n\r\n  miw: {\r\n    build: buildMinWidth,\r\n    ruleCss: 'min-width',\r\n    classPrefix: 'miw',\r\n  },\r\n\r\n  mih: {\r\n    build: buildMinHeight,\r\n    ruleCss: 'min-height',\r\n    classPrefix: 'mih',\r\n  },\r\n\r\n  // Width & Height\r\n  wdh: {\r\n    build: buildWidth,\r\n    ruleCss: 'width',\r\n    classPrefix: 'w',\r\n  },\r\n\r\n  hgt: {\r\n    build: buildHeight,\r\n    ruleCss: 'height',\r\n    classPrefix: 'h',\r\n  },\r\n\r\n  // Position\r\n  pos: {\r\n    build: buildPosition,\r\n    ruleCss: 'position',\r\n    classPrefix: 'pos',\r\n  },\r\n  t: {\r\n    build: buildTop,\r\n    ruleCss: 'top',\r\n    classPrefix: 't',\r\n  },\r\n  r: {\r\n    build: buildRight,\r\n    ruleCss: 'right',\r\n    classPrefix: 'r',\r\n  },\r\n  b: {\r\n    build: buildBottom,\r\n    ruleCss: 'bottom',\r\n    classPrefix: 'b',\r\n  },\r\n  l: {\r\n    build: buildLeft,\r\n    ruleCss: 'left',\r\n    classPrefix: 'l',\r\n  },\r\n  d: {\r\n    build: buildDisplay,\r\n    ruleCss: 'display',\r\n    classPrefix: 'd',\r\n  },\r\n};\r\n\r\nexport const processors: Record<TDirectiveName, IProcessor> = {\r\n  ...processorsBase,\r\n  c: processorsBase.cols,\r\n  fx: processorsBase.flex,\r\n  p: processorsBase.pad,\r\n  padding: processorsBase.pad,\r\n  pt: processorsBase.padt,\r\n  'padding-top': processorsBase.padt,\r\n  pr: processorsBase.padr,\r\n  'padding-right': processorsBase.padr,\r\n  pb: processorsBase.padb,\r\n  'padding-bottom': processorsBase.padb,\r\n  pl: processorsBase.padl,\r\n  'padding-left': processorsBase.padl,\r\n  py: processorsBase.pady,\r\n  'padding-y': processorsBase.pady,\r\n  px: processorsBase.padx,\r\n  'padding-x': processorsBase.padx,\r\n  m: processorsBase.mar,\r\n  margin: processorsBase.mar,\r\n  mt: processorsBase.mart,\r\n  'margin-top': processorsBase.mart,\r\n  mr: processorsBase.marr,\r\n  'margin-right': processorsBase.marr,\r\n  mb: processorsBase.marb,\r\n  'margin-bottom': processorsBase.marb,\r\n  ml: processorsBase.marl,\r\n  'margin-left': processorsBase.marl,\r\n  my: processorsBase.mary,\r\n  'margin-y': processorsBase.mary,\r\n  mx: processorsBase.marx,\r\n  'margin-x': processorsBase.marx,\r\n  w: processorsBase.wdh,\r\n  width: processorsBase.wdh,\r\n  h: processorsBase.hgt,\r\n  height: processorsBase.hgt,\r\n  'max-width': processorsBase.mxw,\r\n  'max-height': processorsBase.mxh,\r\n  'min-width': processorsBase.miw,\r\n  'min-height': processorsBase.mih,\r\n  position: processorsBase.pos,\r\n  top: processorsBase.t,\r\n  right: processorsBase.r,\r\n  bottom: processorsBase.b,\r\n  left: processorsBase.l,\r\n  display: processorsBase.d,\r\n};\r\n","import { processors, TDirectiveName } from '../config/processors';\r\n\r\nconst getParameters = (\r\n  Node: HTMLElement | Element\r\n): Partial<Record<TDirectiveName, string>> => {\r\n  const params: Partial<Record<TDirectiveName, string>> = {};\r\n  const attrs = Node.attributes;\r\n  const paramNames = Object.keys(processors);\r\n  Array.prototype.forEach.call(attrs, (attr) => {\r\n    if (paramNames.includes(attr.name)) {\r\n      if (attr.value !== '')\r\n        params[attr.name as TDirectiveName] = attr.value\r\n          .trim()\r\n          .split(' ')\r\n          .filter((item: string) => item)\r\n          .join(' ');\r\n    }\r\n  });\r\n  return params;\r\n};\r\n\r\nexport default getParameters;\r\n","import { processors, TDirectiveName } from '../config/processors';\r\nimport { IStyles } from '../helpers/createStyles';\r\n\r\nexport interface IBuildResult {\r\n  [prop: string]: IStyles | boolean;\r\n}\r\n\r\nconst build = (\r\n  obj: Partial<Record<TDirectiveName, string>>,\r\n  insertStyles = false\r\n): Partial<IBuildResult> | Error => {\r\n  const rObj: Partial<IBuildResult> = {};\r\n  let err: Error | boolean = false;\r\n  for (const prop in obj) {\r\n    const propData = processors[prop as TDirectiveName];\r\n    const objStyles: IStyles | Error = propData.build(\r\n      obj[prop as TDirectiveName] as string,\r\n      insertStyles\r\n    );\r\n    if (objStyles instanceof Error) {\r\n      err = objStyles;\r\n      break;\r\n    } else {\r\n      rObj[prop] = objStyles;\r\n    }\r\n  }\r\n\r\n  if (err) return err;\r\n  return rObj;\r\n};\r\n\r\nexport default build;\r\n","import getConfig from '../config/main';\r\n\r\nconst addClasses = (\r\n  Node: HTMLElement | Element,\r\n  classesNames: string,\r\n  overwrite?: boolean\r\n): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    const config = getConfig();\r\n    const names = classesNames.split(' ');\r\n    let classesToAdd: string[] = names;\r\n    if (!overwrite) {\r\n      classesToAdd = names.filter((name) => !Node.classList.contains(name));\r\n      if (!classesToAdd.length) {\r\n        resolve();\r\n        return;\r\n      }\r\n    }\r\n\r\n    const obsNode = new config.context.MutationObserver((mutations) => {\r\n      const target = mutations[0].target;\r\n      const currentClasses = (target as Element).className.split(' ');\r\n      const containsAll = names.every((element) =>\r\n        currentClasses.includes(element)\r\n      );\r\n      if (containsAll) {\r\n        obsNode.disconnect();\r\n        resolve();\r\n      }\r\n    });\r\n    obsNode.observe(Node, {\r\n      childList: false,\r\n      subtree: false,\r\n      attributes: true,\r\n      attributeFilter: ['class'],\r\n      characterData: false,\r\n    });\r\n\r\n    if (overwrite) {\r\n      Node.className = classesNames;\r\n    } else {\r\n      const space = Node.hasAttribute('class') ? ' ' : '';\r\n      Node.className += space + classesToAdd.join(' ');\r\n    }\r\n  });\r\n};\r\n\r\nexport default addClasses;\r\n","import getConfig from '../config/main';\r\n\r\nexport const removeProp = (\r\n  Node: HTMLElement | Element,\r\n  propName: string,\r\n  context: Window & typeof globalThis\r\n): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    if (!Node.hasAttribute(propName)) {\r\n      resolve();\r\n      return;\r\n    }\r\n    const obsNode = new context.MutationObserver(() => {\r\n      obsNode.disconnect();\r\n      resolve();\r\n    });\r\n    obsNode.observe(Node, {\r\n      childList: false,\r\n      subtree: false,\r\n      attributes: true,\r\n      attributeFilter: [propName],\r\n      characterData: false,\r\n    });\r\n    Node.removeAttribute(propName);\r\n  });\r\n};\r\n\r\nexport const removeProps = (\r\n  Node: HTMLElement | Element,\r\n  propNames: string[],\r\n  context: Window & typeof globalThis\r\n): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    const promises = propNames.map((name) => removeProp(Node, name, context));\r\n    Promise.all(promises).then(() => resolve());\r\n  });\r\n};\r\n\r\nconst removeAttr = (\r\n  Node: HTMLElement | Element,\r\n  propNames: string | string[]\r\n): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    const config = getConfig();\r\n    if (Array.isArray(propNames)) {\r\n      removeProps(Node, propNames, config.context).then(resolve);\r\n    } else {\r\n      removeProp(Node, propNames, config.context).then(resolve);\r\n    }\r\n  });\r\n};\r\n\r\nexport default removeAttr;\r\n","import getConfig from '../config/main';\r\nimport addClasses from '../utils/addClasses';\r\nimport removeAttr from '../utils/removeAttr';\r\n\r\nexport interface IEventReady {\r\n  node: HTMLElement | Element;\r\n  directive: string | string[];\r\n  classes: string;\r\n  resolve: (value: void | Error | PromiseLike<void | Error>) => void;\r\n}\r\n\r\nconst eventReady = ({ node, directive, classes, resolve }: IEventReady) => {\r\n  const config = getConfig();\r\n  removeAttr(node, directive)\r\n    .then(() => addClasses(node, classes))\r\n    .then(() => {\r\n      resolve();\r\n      const event = new config.context.CustomEvent('layout:ready');\r\n      node.dispatchEvent(event);\r\n    });\r\n};\r\n\r\nexport default eventReady;\r\n","import { IStyles } from '../helpers/createStyles';\r\nimport regError from '../helpers/regError';\r\nimport build, { IBuildResult } from './build';\r\nimport getParameters from './getParameters';\r\nimport { TDirectiveName } from '../config/processors';\r\nimport eventReady from '../helpers/eventReady';\r\n\r\nconst set = (\r\n  Node: HTMLElement | Element,\r\n  parameters?: Partial<Record<TDirectiveName, string>>\r\n): Promise<void | Error> => {\r\n  return new Promise((resolve, reject) => {\r\n    const params = parameters || getParameters(Node);\r\n    const arrParams = Object.keys(params);\r\n    if (!arrParams.length) {\r\n      const err = regError(\r\n        'Parameter Missing',\r\n        \"don't exists any parameter to process\",\r\n        Node\r\n      );\r\n      reject(err);\r\n      return;\r\n    }\r\n\r\n    const toBuild: Partial<Record<TDirectiveName, string>> = {};\r\n    for (const prop in params) {\r\n      toBuild[prop as TDirectiveName] = params[prop as TDirectiveName];\r\n    }\r\n\r\n    // creating classes names and inserting that classes to the core\r\n    const classesObj = build(toBuild as Record<TDirectiveName, string>, true);\r\n    if (classesObj instanceof Error) {\r\n      reject(classesObj);\r\n      return;\r\n    }\r\n\r\n    // adding classes\r\n    const classes = classesObj as Partial<IBuildResult>;\r\n    const classesNames = Object.keys(classes)\r\n      .map((name: string) => Object.keys(classes[name] as IStyles))\r\n      .flat()\r\n      .join(' ');\r\n\r\n    // removing unnecessary props\r\n    eventReady({\r\n      node: Node,\r\n      directive: arrParams,\r\n      classes: classesNames,\r\n      resolve,\r\n    });\r\n  });\r\n};\r\n\r\nexport default set;\r\n","import regError from './regError';\r\n\r\nconst directiveValues = (\r\n  Node: HTMLElement | Element,\r\n  directives: string[]\r\n): string | Error => {\r\n  const directiveValues = directives\r\n    .map((item) => Node.getAttribute(item))\r\n    .filter((item) => item)\r\n    .join(' ');\r\n  return !directiveValues\r\n    ? regError(\r\n        'Empty',\r\n        'The value of the directives \"' + directives.join(', ') + '\" are empty',\r\n        Node\r\n      )\r\n    : directiveValues;\r\n};\r\n\r\nexport default directiveValues;\r\n","import buildFlex from './buildFlex';\r\nimport eventReady from '../helpers/eventReady';\r\nimport directiveValues from '../helpers/directiveValues';\r\n\r\nconst setFlex = (\r\n  Node: HTMLElement | Element,\r\n  flexValues?: string\r\n): Promise<void | Error> => {\r\n  return new Promise((resolve, reject) => {\r\n    const values = flexValues || directiveValues(Node, ['flex', 'fx']);\r\n    if (!values) return reject(values);\r\n\r\n    // Creating, inserting, and adding classNames of rules in Node.\r\n    const objStyles = buildFlex(values as string, true);\r\n    if (objStyles instanceof Error) {\r\n      reject(objStyles);\r\n      return;\r\n    }\r\n\r\n    // removing prop of Node and adding the corresponding classes\r\n    eventReady({\r\n      node: Node,\r\n      directive: 'flex',\r\n      classes: Object.keys(objStyles).join(' '),\r\n      resolve,\r\n    });\r\n  });\r\n};\r\n\r\nexport default setFlex;\r\n","import buildCols from './buildCols';\r\nimport eventReady from '../helpers/eventReady';\r\nimport directiveValues from '../helpers/directiveValues';\r\n\r\nconst setCols = (\r\n  Node: HTMLElement | Element,\r\n  columns?: string\r\n): Promise<void | Error> => {\r\n  return new Promise((resolve, reject) => {\r\n    const values = columns || directiveValues(Node, ['c', 'cols']);\r\n    if (!values) return reject(values);\r\n\r\n    // Creating, inserting, and adding classNames of rules in Node.\r\n    const objStyles = buildCols(values as string, true);\r\n    if (objStyles instanceof Error) {\r\n      reject(objStyles);\r\n      return;\r\n    }\r\n    const classesToAdd = Object.keys(objStyles).join(' ');\r\n\r\n    // removing prop of Node and adding the corresponding classes\r\n    eventReady({\r\n      node: Node,\r\n      directive: 'cols',\r\n      classes: classesToAdd,\r\n      resolve,\r\n    });\r\n  });\r\n};\r\n\r\nexport default setCols;\r\n","import buildAttr from '../helpers/buildAttr';\r\nimport { TDirectiveName } from '../config/processors';\r\nimport eventReady from '../helpers/eventReady';\r\nimport directiveValues from './directiveValues';\r\n\r\nconst setAttr = (\r\n  Node: HTMLElement | Element,\r\n  directives: TDirectiveName[],\r\n  vals?: string\r\n): Promise<void | Error> => {\r\n  return new Promise((resolve, reject) => {\r\n    const values = vals || directiveValues(Node, directives);\r\n    if (!values) return reject(values);\r\n\r\n    // Creating, inserting, and adding classNames of rules in Node.\r\n    const directive = directives[0];\r\n    const objStyles = buildAttr(values as string, directive, true);\r\n    const classesToAdd = Object.keys(objStyles).join(' ');\r\n\r\n    // removing prop of Node and adding the corresponding classes\r\n    eventReady({\r\n      node: Node,\r\n      directive,\r\n      classes: classesToAdd,\r\n      resolve,\r\n    });\r\n  });\r\n};\r\n\r\nexport default setAttr;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setHeight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['hgt', 'h'], values);\r\n};\r\n\r\nexport default setHeight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMarBottom = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['marb', 'mb', 'margin-bottom'], values);\r\n};\r\n\r\nexport default setMarBottom;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMarLeft = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['marl', 'ml', 'margin-left'], values);\r\n};\r\n\r\nexport default setMarLeft;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMarRight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['marr', 'mr', 'margin-right'], values);\r\n};\r\n\r\nexport default setMarRight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMar = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['mar', 'm', 'margin'], values);\r\n};\r\n\r\nexport default setMar;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMarTop = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['mart', 'mt', 'margin-top'], values);\r\n};\r\n\r\nexport default setMarTop;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMaxWidth = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['mxw', 'max-width'], values);\r\n};\r\n\r\nexport default setMaxWidth;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMinHeight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['mih', 'min-height'], values);\r\n};\r\n\r\nexport default setMinHeight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMinWidth = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['miw', 'min-width'], values);\r\n};\r\n\r\nexport default setMinWidth;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPadBottom = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['padb', 'pb', 'padding-bottom'], values);\r\n};\r\n\r\nexport default setPadBottom;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPadLeft = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['padl', 'pl', 'padding-left'], values);\r\n};\r\n\r\nexport default setPadLeft;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPadRight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['padr', 'pr', 'padding-right'], values);\r\n};\r\n\r\nexport default setPadRight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPad = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['pad', 'p', 'padding'], values);\r\n};\r\n\r\nexport default setPad;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPadTop = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['padt', 'pt', 'padding-top'], values);\r\n};\r\n\r\nexport default setPadTop;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setWidth = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['wdh', 'width'], values);\r\n};\r\n\r\nexport default setWidth;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMaxHeight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['mxh', 'max-height'], values);\r\n};\r\n\r\nexport default setMaxHeight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPosition = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['pos', 'position'], values);\r\n};\r\n\r\nexport default setPosition;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setTop = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['t', 'top'], values);\r\n};\r\n\r\nexport default setTop;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setRight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['r', 'right'], values);\r\n};\r\n\r\nexport default setRight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setBottom = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['b', 'bottom'], values);\r\n};\r\n\r\nexport default setBottom;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setLeft = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['l', 'left'], values);\r\n};\r\n\r\nexport default setLeft;\r\n","import { IStyles } from './createStyles';\r\nimport directiveValues from './directiveValues';\r\nimport eventReady from './eventReady';\r\n\r\nexport interface ISetterXY {\r\n  Node: HTMLElement | Element;\r\n  directives: string[];\r\n  builder: (valPadX: string, insertStyles: boolean) => IStyles;\r\n  vals?: string;\r\n}\r\n\r\nconst setterXY = (data: ISetterXY): Promise<void | Error> => {\r\n  return new Promise((resolve, reject) => {\r\n    const values = data.vals || directiveValues(data.Node, data.directives);\r\n    if (!values) return reject(values);\r\n\r\n    // Creating, inserting, and adding classNames of rules in Node.\r\n    const objStyles = data.builder(values as string, true);\r\n    const classesToAdd = Object.keys(objStyles).join(' ');\r\n\r\n    // removing prop of Node and adding the corresponding classes\r\n    eventReady({\r\n      node: data.Node,\r\n      directive: data.directives,\r\n      classes: classesToAdd,\r\n      resolve,\r\n    });\r\n  });\r\n};\r\n\r\nexport default setterXY;\r\n","import buildPadX from './buildPadX';\r\nimport setterXY from '../helpers/setterXY';\r\n\r\nconst setPadX = (\r\n  Node: HTMLElement | Element,\r\n  vals?: string\r\n): Promise<void | Error> => {\r\n  return setterXY({\r\n    Node,\r\n    directives: ['padx', 'px', 'padding-x'],\r\n    builder: buildPadX,\r\n    vals,\r\n  });\r\n};\r\n\r\nexport default setPadX;\r\n","import buildPadY from './buildPadY';\r\nimport setterXY from '../helpers/setterXY';\r\n\r\nconst setPadY = (\r\n  Node: HTMLElement | Element,\r\n  vals?: string\r\n): Promise<void | Error> => {\r\n  return setterXY({\r\n    Node,\r\n    directives: ['pady', 'py', 'padding-y'],\r\n    builder: buildPadY,\r\n    vals,\r\n  });\r\n};\r\n\r\nexport default setPadY;\r\n","import buildMarX from './buildMarX';\r\nimport setterXY from '../helpers/setterXY';\r\n\r\nconst setMarX = (\r\n  Node: HTMLElement | Element,\r\n  vals?: string\r\n): Promise<void | Error> => {\r\n  return setterXY({\r\n    Node,\r\n    directives: ['marx', 'mx', 'margin-x'],\r\n    builder: buildMarX,\r\n    vals,\r\n  });\r\n};\r\n\r\nexport default setMarX;\r\n","import buildMarY from './buildMarY';\r\nimport setterXY from '../helpers/setterXY';\r\n\r\nconst setMarY = (\r\n  Node: HTMLElement | Element,\r\n  vals?: string\r\n): Promise<void | Error> => {\r\n  return setterXY({\r\n    Node,\r\n    directives: ['mary', 'my', 'margin-y'],\r\n    builder: buildMarY,\r\n    vals,\r\n  });\r\n};\r\n\r\nexport default setMarY;\r\n","import { TDirectiveName } from './../config/processors';\r\nimport { processors } from '../config/processors';\r\nimport addClasses from '../utils/addClasses';\r\nimport removeAttr from '../utils/removeAttr';\r\n\r\nconst reset = (Node: HTMLElement | Element): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    const classPrefixes = new Set(\r\n      Object.keys(processors).map(\r\n        (item) => processors[item as TDirectiveName].classPrefix\r\n      )\r\n    );\r\n    const layouterClasses = [...classPrefixes];\r\n    const restClass = Node.className.split(' ').filter((name) => {\r\n      if (!name.includes('-')) {\r\n        return true;\r\n      } else {\r\n        const findClass = layouterClasses.find((item) => {\r\n          const nLength = item.length;\r\n          const namePrefix = name.substring(0, nLength + 1);\r\n          return namePrefix === item + '-';\r\n        });\r\n        return !findClass;\r\n      }\r\n    });\r\n\r\n    if (restClass.length) {\r\n      const classesName = restClass.join(' ');\r\n      addClasses(Node, classesName, true).then(() => {\r\n        resolve();\r\n      });\r\n    } else {\r\n      removeAttr(Node, 'class').then(() => {\r\n        resolve();\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport default reset;\r\n","import { ILayouter } from './../layouter';\r\nimport { processors } from '../config/processors';\r\n\r\nconst nodesNotAccepted = [\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'discard',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'hatch',\r\n  'hatchpath',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'set',\r\n  'stop',\r\n  'style',\r\n  'svg',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'title',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n];\r\n\r\nconst searchAndProcess = (\r\n  layouter: ILayouter,\r\n  context: Document | HTMLElement | Element\r\n) => {\r\n  return new Promise((resolve) => {\r\n    const props = Object.keys(processors);\r\n    const attrs = props.map((prop) => `[${prop}]`).join(', ');\r\n    const nodes = context.querySelectorAll(attrs);\r\n    if (!nodes.length) {\r\n      resolve(layouter);\r\n      return;\r\n    }\r\n\r\n    const setNodes = new Set();\r\n    Array.prototype.filter\r\n      .call(\r\n        nodes,\r\n        (itemNode) =>\r\n          !nodesNotAccepted.includes(itemNode.nodeName.toLowerCase())\r\n      )\r\n      .forEach((item) => setNodes.add(item));\r\n    const promises: Promise<void | Error>[] = [];\r\n    setNodes.forEach((node) => {\r\n      promises.push(layouter.set(node as Element | HTMLElement));\r\n    });\r\n    Promise.all(promises).then(resolve);\r\n  });\r\n};\r\n\r\nexport default searchAndProcess;\r\n","import { ILayouter } from './../layouter';\r\nimport { processors } from '../config/processors';\r\nimport getConfig from '../config/main';\r\nimport searchAndProcess from './searchAndProcess';\r\n\r\nconst mainObserver = (layouter: ILayouter) => {\r\n  const config = getConfig();\r\n  const props = Object.keys(processors);\r\n  const obsBody = new layouter.context.MutationObserver((mutations) => {\r\n    for (const mutation of mutations) {\r\n      if (mutation.type === 'childList') {\r\n        if (!mutation.addedNodes.length) {\r\n          continue;\r\n        }\r\n        mutation.addedNodes.forEach((node) => {\r\n          if (node instanceof HTMLElement) {\r\n            const props = layouter.getParameters(node);\r\n            if (Object.keys(props).length) {\r\n              layouter.set(node, props);\r\n            }\r\n            searchAndProcess(layouter, node);\r\n          }\r\n        });\r\n      } else if (mutation.type === 'attributes') {\r\n        const node = mutation.target;\r\n        if (node instanceof HTMLElement) {\r\n          const props = layouter.getParameters(node);\r\n          if (Object.keys(props).length) {\r\n            layouter.set(node, props);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n  const observerOptions = {\r\n    childList: true,\r\n    subtree: true,\r\n    attributes: true,\r\n    attributeFilter: props,\r\n    characterData: false,\r\n  };\r\n  obsBody.observe(config.context.document.body, observerOptions);\r\n};\r\n\r\nexport default mainObserver;\r\n","import { IConfig, IConfigUser, setConfig, updateConfig } from './config/main';\r\nimport getParameters from './methods/getParameters';\r\n\r\nimport build from './methods/build';\r\nimport buildCols from './methods/buildCols';\r\nimport buildFlex from './methods/buildFlex';\r\nimport buildPad from './methods/buildPad';\r\nimport buildPadTop from './methods/buildPadTop';\r\nimport buildPadRight from './methods/buildPadRight';\r\nimport buildPadBottom from './methods/buildPadBottom';\r\nimport buildPadLeft from './methods/buildPadLeft';\r\nimport buildMar from './methods/buildMar';\r\nimport buildMarTop from './methods/buildMarTop';\r\nimport buildMarRight from './methods/buildMarRight';\r\nimport buildMarBottom from './methods/buildMarBottom';\r\nimport buildMarLeft from './methods/buildMarLeft';\r\nimport buildMaxWidth from './methods/buildMaxWidth';\r\nimport buildMaxHeight from './methods/buildMaxHeight';\r\nimport buildMinWidth from './methods/buildMinWidth';\r\nimport buildMinHeight from './methods/buildMinHeight';\r\nimport buildHeight from './methods/buildHeight';\r\nimport buildWidth from './methods/buildWidth';\r\nimport buildPosition from './methods/buildPosition';\r\nimport buildTop from './methods/buildTop';\r\nimport buildRight from './methods/buildRight';\r\nimport buildBottom from './methods/buildBottom';\r\nimport buildLeft from './methods/buildLeft';\r\nimport buildPadX from './methods/buildPadX';\r\nimport buildPadY from './methods/buildPadY';\r\nimport buildMarX from './methods/buildMarX';\r\nimport buildMarY from './methods/buildMarY';\r\n\r\nimport set from './methods/set';\r\nimport setFlex from './methods/setFlex';\r\nimport setCols from './methods/SetCols';\r\nimport setHeight from './methods/setHeight';\r\nimport setMarBottom from './methods/setMarBottom';\r\nimport setMarLeft from './methods/setMarLeft';\r\nimport setMarRight from './methods/setMarRight';\r\nimport setMar from './methods/setMar';\r\nimport setMarTop from './methods/setMarTop';\r\nimport setMaxWidth from './methods/setMaxWidth';\r\nimport setMinHeight from './methods/setMinHeight';\r\nimport setMinWidth from './methods/setMinWidth';\r\nimport setPadBottom from './methods/setPadBottom';\r\nimport setPadLeft from './methods/setPadLeft';\r\nimport setPadRight from './methods/setPadRight';\r\nimport setPad from './methods/setPad';\r\nimport setPadTop from './methods/setPadTop';\r\nimport setWidth from './methods/setWidth';\r\nimport setMaxHeight from './methods/setMaxHeight';\r\nimport setPosition from './methods/setPosition';\r\nimport setTop from './methods/setTop';\r\nimport setRight from './methods/setRight';\r\nimport setBottom from './methods/setBottom';\r\nimport setLeft from './methods/setLeft';\r\nimport setPadX from './methods/setPadX';\r\nimport setPadY from './methods/setPadY';\r\nimport setMarX from './methods/setMarX';\r\nimport setMarY from './methods/setMarY';\r\n\r\nimport insertRules from './methods/insertRules';\r\nimport reset from './methods/reset';\r\n\r\nimport { IStyles } from './helpers/createStyles';\r\nimport { IBuildResult } from './methods/build';\r\nimport searchAndProcess from './helpers/searchAndProcess';\r\nimport mainObserver from './helpers/mainObserver';\r\nimport { TDirectiveName, processors, IProcessor } from './config/processors';\r\n\r\nexport interface ILayouter extends IConfig {\r\n  getParameters: (\r\n    Node: HTMLElement | Element\r\n  ) => Partial<Record<TDirectiveName, string>>;\r\n  updateConfig: (userConfig: Partial<Omit<IConfigUser, 'bridge'>>) => IConfig;\r\n  build: (\r\n    obj: Partial<Record<TDirectiveName, string>>,\r\n    insertStyles?: boolean\r\n  ) => Partial<IBuildResult> | Error;\r\n  buildCols: (valCols: string, insertStyles?: boolean) => IStyles | Error;\r\n  buildFlex: (valFlex: string, insertStyles?: boolean) => IStyles | Error;\r\n  buildPad: (valPads: string, insertStyles?: boolean) => IStyles;\r\n  buildPadTop: (valPadTop: string, insertStyles?: boolean) => IStyles;\r\n  buildPadRight: (valPadRight: string, insertStyles?: boolean) => IStyles;\r\n  buildPadBottom: (valPadBottom: string, insertStyles?: boolean) => IStyles;\r\n  buildPadLeft: (valPadLeft: string, insertStyles?: boolean) => IStyles;\r\n  buildPadX: (valPadX: string, insertStyles?: boolean) => IStyles;\r\n  buildPadY: (valPadX: string, insertStyles?: boolean) => IStyles;\r\n  buildMar: (valMars: string, insertStyles?: boolean) => IStyles;\r\n  buildMarTop: (valMarTop: string, insertStyles?: boolean) => IStyles;\r\n  buildMarRight: (valMarRight: string, insertStyles?: boolean) => IStyles;\r\n  buildMarBottom: (valMarBottom: string, insertStyles?: boolean) => IStyles;\r\n  buildMarLeft: (valMarLeft: string, insertStyles?: boolean) => IStyles;\r\n  buildMarX: (valPadX: string, insertStyles?: boolean) => IStyles;\r\n  buildMarY: (valPadX: string, insertStyles?: boolean) => IStyles;\r\n  buildMaxWidth: (valMaxWidth: string, insertStyles?: boolean) => IStyles;\r\n  buildMaxHeight: (valMaxHeight: string, insertStyles?: boolean) => IStyles;\r\n  buildMinWidth: (valMinWidth: string, insertStyles?: boolean) => IStyles;\r\n  buildMinHeight: (valMinHeight: string, insertStyles?: boolean) => IStyles;\r\n  buildHeight: (valHeight: string, insertStyles?: boolean) => IStyles;\r\n  buildWidth: (valWidth: string, insertStyles?: boolean) => IStyles;\r\n  buildPosition: (\r\n    valPosition: string,\r\n    insertStyles?: boolean\r\n  ) => IStyles | Error;\r\n  buildTop: (valTop: string, insertStyles?: boolean) => IStyles | Error;\r\n  buildRight: (valRight: string, insertStyles?: boolean) => IStyles | Error;\r\n  buildBottom: (valBottom: string, insertStyles?: boolean) => IStyles | Error;\r\n  buildLeft: (valLeft: string, insertStyles?: boolean) => IStyles | Error;\r\n\r\n  set: (\r\n    Node: HTMLElement | Element,\r\n    parameters?: Partial<Record<TDirectiveName, string>>\r\n  ) => Promise<void | Error>;\r\n  setCols: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setFlex: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMar: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarTop: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarRight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarBottom: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarLeft: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarX: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarY: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPad: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadTop: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadRight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadBottom: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadLeft: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadX: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadY: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n\r\n  setWidth: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMinWidth: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMaxWidth: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setHeight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMinHeight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMaxHeight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPosition: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n\r\n  setTop: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setRight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setBottom: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setLeft: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n\r\n  processors: Record<TDirectiveName, IProcessor>;\r\n\r\n  insertRules: (objStyles: IStyles) => void;\r\n  reset: (Node: HTMLElement | Element) => Promise<void>;\r\n  version: string;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    layouter: ILayouter;\r\n  }\r\n}\r\n\r\nconst layouter = (\r\n  context: Window & typeof globalThis,\r\n  userConfig: Partial<IConfigUser> = {}\r\n): ILayouter => {\r\n  const config = setConfig(context, userConfig);\r\n\r\n  const instance = {\r\n    ...config,\r\n    getParameters,\r\n    updateConfig,\r\n    insertRules,\r\n    build,\r\n    buildCols,\r\n    buildFlex,\r\n    buildPad,\r\n    buildPadTop,\r\n    buildPadRight,\r\n    buildPadBottom,\r\n    buildPadLeft,\r\n    buildPadX,\r\n    buildPadY,\r\n    buildMar,\r\n    buildMarTop,\r\n    buildMarRight,\r\n    buildMarBottom,\r\n    buildMarLeft,\r\n    buildMarX,\r\n    buildMarY,\r\n    buildMaxWidth,\r\n    buildMaxHeight,\r\n    buildMinWidth,\r\n    buildMinHeight,\r\n    buildHeight,\r\n    buildWidth,\r\n    set,\r\n    setCols,\r\n    setFlex,\r\n    setMar,\r\n    setMarTop,\r\n    setMarRight,\r\n    setMarBottom,\r\n    setMarLeft,\r\n    setMarX,\r\n    setMarY,\r\n    setPad,\r\n    setPadTop,\r\n    setPadRight,\r\n    setPadBottom,\r\n    setPadLeft,\r\n    setPadX,\r\n    setPadY,\r\n    setWidth,\r\n    setMinWidth,\r\n    setMaxWidth,\r\n    setHeight,\r\n    setMinHeight,\r\n    setMaxHeight,\r\n    buildPosition,\r\n    buildTop,\r\n    buildRight,\r\n    buildBottom,\r\n    buildLeft,\r\n    setPosition,\r\n    setTop,\r\n    setRight,\r\n    setBottom,\r\n    setLeft,\r\n    reset,\r\n    processors,\r\n  };\r\n\r\n  // Auto init process\r\n  if (config.searchOnInit) {\r\n    searchAndProcess(instance, context.document).then(() => {\r\n      if (instance.ready) instance.ready(instance);\r\n      if (config.observer) mainObserver(instance);\r\n    });\r\n  } else {\r\n    if (config.observer) mainObserver(instance);\r\n    if (instance.ready) instance.ready(instance);\r\n  }\r\n\r\n  return instance;\r\n};\r\n\r\nif (typeof window !== 'undefined' && typeof exports === 'undefined') {\r\n  window.layouter = layouter(window);\r\n}\r\n\r\nexport type { TDirectiveName, IProcessor } from './config/processors';\r\nexport type { IConfigUser } from './config/main';\r\nexport default layouter;\r\n"],"names":["breakpointsNums","objBps","propName","sizes","bp","a","b","index","createScopeStyles","withBridge","insertionType","node","context","stylesScope","nodeParent","bridge","ruleCss","scopesStylesBuilder","breakpoints","scope","scopes","breakpointsOrdered","bps","bpsOrdered","bpName","breakpointsInit","baseConfig","config","configNums","finalBps","setConfig","customCfg","contextConfig","getConfig","setStyles","className","value","updateConfig","userConfig","prepareParam","param","argParam","important","haveBp","bpSplited","regError","name","message","Node","err","calPercentage","n1","n2","cal","getScopeByclassName","nameClass","atIndex","intConfig","firstBp","bpUntil","fromBp","insertRules","objStyles","nodeScope","valClass","rules","flexProsAndValsBase","flexPropsAndValsSelfBase","flexPropsAndValsSelf","flexProsAndVals","flexAttrsSelf","percentageConverter","percentage","createStyles","directive","prefix","prop","processors","styles","shortNameClass","propAndVal","flexImportant","attrsFlexSelfs","nameAttrFlex","rule","direct","bp1","bp2","replaceList","nameCleaner","obj","newName","reItem","buildCss","data","buildCols","values","insertStyles","cols","bpCals","selectorName","propValue","paramPrepared","directBp","item","paramSplited","buildFlex","valFlex","propVal","bpNames","flexSplited","nameProp","valProp","valAlias","sufixBp","prevName","relativeMeasures","processedNumber","n","nProcessed","unit","buildAttr","paramProcessed","buildPad","valPads","buildPadTop","valPadTop","buildPadRight","valPadRight","buildPadBottom","valPadBottom","buildPadLeft","valPadLeft","buildMar","valMars","buildMarTop","valMarTop","buildMarRight","valMarRight","buildMarBottom","valMarBottom","buildMarLeft","valMarLeft","buildMaxWidth","valMaxWidth","buildMaxHeight","valMaxHeight","buildMinWidth","valMinWidth","buildMinHeight","valMinHeight","buildHeight","valHeight","buildWidth","valWidth","positionProsAndValsBase","positionProsAndVals","buildPosition","valPos","buildTop","val","buildRight","buildBottom","buildLeft","displayProsAndValsBase","displayProsAndVals","buildDisplay","valDisplay","buildXY","stylesA","stylesB","allStyles","style","buildPadX","valPadX","buildPadY","buildMarX","valMarX","buildMarY","valMarY","processorsBase","getParameters","params","attrs","paramNames","attr","build","rObj","addClasses","classesNames","overwrite","resolve","names","classesToAdd","obsNode","mutations","currentClasses","element","space","removeProp","removeProps","propNames","promises","removeAttr","eventReady","classes","event","set","parameters","reject","arrParams","toBuild","classesObj","directiveValues","directives","setFlex","flexValues","setCols","columns","setAttr","vals","setHeight","setMarBottom","setMarLeft","setMarRight","setMar","setMarTop","setMaxWidth","setMinHeight","setMinWidth","setPadBottom","setPadLeft","setPadRight","setPad","setPadTop","setWidth","setMaxHeight","setPosition","setTop","setRight","setBottom","setLeft","setterXY","setPadX","setPadY","setMarX","setMarY","reset","layouterClasses","restClass","nLength","classesName","nodesNotAccepted","searchAndProcess","layouter","nodes","setNodes","itemNode","mainObserver","props","obsBody","mutation","observerOptions","instance"],"mappings":"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"}