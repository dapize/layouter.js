{"version":3,"file":"layouter.umd.js","sources":["../src/helpers/breakpointsNums.ts","../src/helpers/createScopeStyles.ts","../src/helpers/scopesStylesBuilder.ts","../src/helpers/breakpointsOrdered.ts","../src/config/main.ts","../src/helpers/prepareParam.ts","../src/helpers/regError.ts","../src/helpers/calPercentage.ts","../src/helpers/getScopeByclassName.ts","../src/methods/insertRules.ts","../src/config/flex.ts","../src/helpers/percentageConverter.ts","../src/helpers/createStyles.ts","../src/helpers/nameCleaner.ts","../src/helpers/buildCss.ts","../src/methods/buildCols.ts","../src/methods/buildFlex.ts","../src/helpers/processedNumber.ts","../src/helpers/buildAttr.ts","../src/methods/buildPad.ts","../src/methods/buildPadTop.ts","../src/methods/buildPadRight.ts","../src/methods/buildPadBottom.ts","../src/methods/buildPadLeft.ts","../src/methods/buildMar.ts","../src/methods/buildMarTop.ts","../src/methods/buildMarRight.ts","../src/methods/buildMarBottom.ts","../src/methods/buildMarLeft.ts","../src/methods/buildMaxWidth.ts","../src/methods/buildMaxHeight.ts","../src/methods/buildMinWidth.ts","../src/methods/buildMinHeight.ts","../src/methods/buildHeight.ts","../src/methods/buildWidth.ts","../src/config/position.ts","../src/methods/buildPosition.ts","../src/methods/buildTop.ts","../src/methods/buildRight.ts","../src/methods/buildBottom.ts","../src/methods/buildLeft.ts","../src/config/display.ts","../src/methods/buildDisplay.ts","../src/helpers/buildXY.ts","../src/methods/buildPadX.ts","../src/methods/buildPadY.ts","../src/methods/buildMarX.ts","../src/methods/buildMarY.ts","../src/config/processors.ts","../src/methods/getParameters.ts","../src/methods/build.ts","../src/utils/addClasses.ts","../src/utils/removeAttr.ts","../src/helpers/eventReady.ts","../src/methods/set.ts","../src/helpers/directiveValues.ts","../src/methods/setFlex.ts","../src/methods/SetCols.ts","../src/helpers/setAttr.ts","../src/methods/setHeight.ts","../src/methods/setMarBottom.ts","../src/methods/setMarLeft.ts","../src/methods/setMarRight.ts","../src/methods/setMar.ts","../src/methods/setMarTop.ts","../src/methods/setMaxWidth.ts","../src/methods/setMinHeight.ts","../src/methods/setMinWidth.ts","../src/methods/setPadBottom.ts","../src/methods/setPadLeft.ts","../src/methods/setPadRight.ts","../src/methods/setPad.ts","../src/methods/setPadTop.ts","../src/methods/setWidth.ts","../src/methods/setMaxHeight.ts","../src/methods/setPosition.ts","../src/methods/setTop.ts","../src/methods/setRight.ts","../src/methods/setBottom.ts","../src/methods/setLeft.ts","../src/helpers/setterXY.ts","../src/methods/setPadX.ts","../src/methods/setPadY.ts","../src/methods/setMarX.ts","../src/methods/setMarY.ts","../src/methods/reset.ts","../src/helpers/searchAndProcess.ts","../src/helpers/mainObserver.ts","../src/layouter.ts"],"sourcesContent":["export type TNumProp = 'width' | 'cols';\r\n\r\nexport interface IBreakpoint {\r\n  alias: string;\r\n  width: number;\r\n}\r\n\r\nexport interface IBreakpoints {\r\n  [alias: string]: {\r\n    width: number;\r\n    cols: number;\r\n  };\r\n}\r\n\r\nexport interface IBreakpointObj {\r\n  [alias: string]: number;\r\n}\r\n\r\nconst breakpointsNums = (\r\n  objBps: IBreakpoints,\r\n  propName: TNumProp\r\n): IBreakpointObj => {\r\n  const sizes: IBreakpointObj = {};\r\n\r\n  if (propName === 'width') {\r\n    Object.keys(objBps)\r\n      .map((bp: string) => {\r\n        return {\r\n          alias: bp,\r\n          width: objBps[bp].width,\r\n        };\r\n      })\r\n      .sort((a: IBreakpoint, b: IBreakpoint) =>\r\n        a.width > b.width ? 1 : b.width > a.width ? -1 : 0\r\n      )\r\n      .forEach((bp: IBreakpoint, index: number) => {\r\n        sizes[bp.alias] = !index ? 0 : objBps[bp.alias][propName];\r\n      });\r\n  } else {\r\n    Object.keys(objBps).forEach((bp) => {\r\n      sizes[bp] = objBps[bp][propName];\r\n    });\r\n  }\r\n\r\n  return sizes;\r\n};\r\n\r\nexport default breakpointsNums;\r\n","export type TInsertion = 'before' | 'after' | 'append';\r\n\r\nexport interface ICreateScopeStyles {\r\n  bridge?: boolean;\r\n  bp: string;\r\n  insertionType: TInsertion;\r\n  node: HTMLElement;\r\n  context: Window & typeof globalThis;\r\n}\r\n\r\nexport interface IRCreateScopeStyles {\r\n  method:\r\n    | CSSStyleSheet\r\n    | {\r\n        insertRule: (ruleCss: string) => void;\r\n        rules: string[];\r\n      };\r\n  node: HTMLElement;\r\n}\r\n\r\nconst createScopeStyles = ({\r\n  bridge: withBridge,\r\n  bp,\r\n  insertionType,\r\n  node,\r\n  context,\r\n}: ICreateScopeStyles): IRCreateScopeStyles => {\r\n  let stylesScope = context.document.getElementById('layouter-' + bp);\r\n  if (!stylesScope) {\r\n    stylesScope = context.document.createElement('style');\r\n    stylesScope.appendChild(context.document.createTextNode('')); // WebKit hack :(\r\n    const nodeParent = node.parentNode as HTMLDivElement;\r\n    switch (insertionType) {\r\n      case 'before':\r\n        nodeParent.insertBefore(stylesScope, node);\r\n        break;\r\n      case 'after':\r\n        node.nextSibling\r\n          ? nodeParent.insertBefore(stylesScope, node.nextSibling)\r\n          : nodeParent.appendChild(stylesScope);\r\n        break;\r\n      case 'append':\r\n        node.appendChild(stylesScope);\r\n        break;\r\n    }\r\n    stylesScope.id = 'layouter-' + bp;\r\n  }\r\n\r\n  let bridge: IRCreateScopeStyles;\r\n  if (withBridge) {\r\n    bridge = {\r\n      method: (stylesScope as HTMLStyleElement).sheet as CSSStyleSheet,\r\n      node: stylesScope,\r\n    };\r\n  } else {\r\n    bridge = {\r\n      method: {\r\n        insertRule: (ruleCss: string) => {\r\n          (stylesScope as HTMLDivElement).appendChild(\r\n            context.document.createTextNode(ruleCss)\r\n          );\r\n        },\r\n        rules: [],\r\n      },\r\n      node: stylesScope,\r\n    };\r\n  }\r\n  return bridge;\r\n};\r\n\r\nexport default createScopeStyles;\r\n","import { IBreakpoints } from './breakpointsNums';\r\nimport createScopeStyles, { IRCreateScopeStyles } from './createScopeStyles';\r\n\r\nexport interface IScopes {\r\n  [name: string]: IRCreateScopeStyles;\r\n}\r\n\r\nexport interface IScopesStylesBuilder {\r\n  breakpoints: IBreakpoints;\r\n  bridge: boolean;\r\n  scope?: IScopes;\r\n  context: Window & typeof globalThis;\r\n}\r\n\r\nexport const scopesStylesBuilder = ({\r\n  breakpoints,\r\n  bridge,\r\n  scope,\r\n  context,\r\n}: IScopesStylesBuilder): IScopes => {\r\n  const scopes: IScopes = scope || {};\r\n  Object.keys(breakpoints).forEach((bp: string) => {\r\n    if (!scopes[bp]) {\r\n      scopes[bp] = createScopeStyles({\r\n        bridge: bridge,\r\n        bp,\r\n        insertionType: 'append',\r\n        node: context.document.body,\r\n        context,\r\n      });\r\n    }\r\n  });\r\n  return scopes;\r\n};\r\n","import { ICols } from '../config/main';\r\nimport { IBreakpoints } from './breakpointsNums';\r\n\r\nconst breakpointsOrdered = (bps: IBreakpoints, sizes: ICols) => {\r\n  const bpsOrdered: IBreakpoints = {};\r\n  Object.keys(sizes).forEach((bpName) => (bpsOrdered[bpName] = bps[bpName]));\r\n  return bpsOrdered;\r\n};\r\n\r\nexport default breakpointsOrdered;\r\n","import { ILayouter } from './../layouter';\nimport breakpointsNums, { IBreakpoints } from '../helpers/breakpointsNums';\nimport { IScopes, scopesStylesBuilder } from '../helpers/scopesStylesBuilder';\nimport breakpointsOrdered from '../helpers/breakpointsOrdered';\n\nexport interface ICols {\n  [colAlias: string]: number;\n}\n\nexport interface IConfigUser {\n  prefix: string;\n  breakpoints: IBreakpoints;\n  bridge: boolean;\n  debug?: boolean;\n  ready?: (instance: ILayouter) => void;\n  searchOnInit: boolean;\n  observer: boolean;\n}\n\ninterface IConfigNumsIn {\n  bps: IBreakpoints;\n  bridge: boolean;\n  scope?: IScopes;\n  context: Window & typeof globalThis;\n}\n\ninterface IConfigNumsOut {\n  scope: IScopes;\n  cols: ICols;\n  sizes: ICols;\n  breakpoints: IBreakpoints;\n}\n\nexport interface IConfig\n  extends Omit<IConfigUser, 'breakpoints'>,\n    IConfigNumsOut {\n  context: Window & typeof globalThis;\n  styles: {\n    [className: string]: string;\n  };\n  version: string;\n}\n\ndeclare global {\n  interface Window {\n    layouterConfig: Partial<IConfigUser>;\n  }\n}\n\nconst breakpointsInit: IBreakpoints = {\n  xs: {\n    width: 360,\n    cols: 15,\n  },\n  sm: {\n    width: 600,\n    cols: 25,\n  },\n  md: {\n    width: 900,\n    cols: 31,\n  },\n  lg: {\n    width: 1200,\n    cols: 41,\n  },\n  xlg: {\n    width: 1536,\n    cols: 51,\n  },\n};\n\nexport let baseConfig: IConfigUser = {\n  prefix: '',\n  breakpoints: breakpointsInit,\n  bridge: true,\n  debug: true,\n  searchOnInit: true,\n  observer: true,\n};\n\nlet config: IConfig;\n\nconst configNums = ({\n  bps,\n  bridge,\n  scope,\n  context,\n}: IConfigNumsIn): IConfigNumsOut => {\n  const sizes = breakpointsNums(bps, 'width');\n  const finalBps = breakpointsOrdered(bps, sizes);\n  return {\n    sizes,\n    cols: breakpointsNums(bps, 'cols'),\n    scope: scopesStylesBuilder({\n      breakpoints: finalBps,\n      bridge,\n      scope: scope,\n      context,\n    }),\n    breakpoints: finalBps,\n  };\n};\n\nexport const setConfig = (\n  context: Window & typeof globalThis,\n  customCfg: Partial<IConfigUser> = {}\n): IConfig => {\n  const contextConfig = context.layouterConfig || {};\n\n  baseConfig = {\n    ...baseConfig,\n    ...customCfg,\n    ...contextConfig,\n  };\n\n  config = {\n    context,\n    ...baseConfig,\n    ...configNums({\n      bps: baseConfig.breakpoints,\n      bridge: baseConfig.bridge,\n      context,\n    }),\n    styles: {},\n    version: '1.9.1',\n  };\n\n  return config;\n};\n\nconst getConfig = (): IConfig => {\n  return config;\n};\n\nexport const setStyles = (className: string, value: string) => {\n  config.styles[className] = value;\n};\n\nexport const updateConfig = (userConfig: Partial<IConfigUser>): IConfig => {\n  config = {\n    ...config,\n    ...userConfig,\n  };\n\n  if (userConfig.breakpoints) {\n    config = {\n      ...config,\n      ...configNums({\n        bps: config.breakpoints,\n        bridge: config.bridge,\n        scope: config.scope,\n        context: config.context,\n      }),\n    };\n  }\n\n  return config;\n};\n\nexport default getConfig;\n","import getConfig from '../config/main';\r\n\r\nexport interface IPrepareParamObj {\r\n  widthBp: boolean;\r\n  numbers: string;\r\n  breakPoints: string;\r\n  important: boolean;\r\n}\r\n\r\nconst prepareParam = (param: string): IPrepareParamObj => {\r\n  let bp: string;\r\n  let argParam = param;\r\n  let important = false;\r\n  const haveBp = argParam.includes('@');\r\n  if (haveBp) {\r\n    const bpSplited = argParam.split('@');\r\n    argParam = bpSplited[0];\r\n    bp = bpSplited[1];\r\n  } else {\r\n    const config = getConfig();\r\n    bp = Object.keys(config.breakpoints)[0];\r\n  }\r\n\r\n  if (param.includes('!')) {\r\n    important = true;\r\n    bp = bp.replace(/!/g, '');\r\n    argParam = argParam.replace(/!/g, '');\r\n  }\r\n\r\n  return {\r\n    widthBp: haveBp,\r\n    numbers: argParam,\r\n    breakPoints: bp,\r\n    important,\r\n  };\r\n};\r\n\r\nexport default prepareParam;\r\n","import config from '../config/main';\r\n\r\nconst regError = (\r\n  name: string,\r\n  message: string,\r\n  Node?: Element | HTMLElement\r\n): Error => {\r\n  const err = new Error();\r\n  err.name = name;\r\n  err.message = message;\r\n  const intConfig = config();\r\n  if (intConfig.debug) {\r\n    console.error(err);\r\n    if (Node) console.log(Node);\r\n  }\r\n  return err;\r\n};\r\n\r\nexport default regError;\r\n","const calPercentage = (n1: number, n2: number): string => {\r\n  const cal = (n1 * 100) / n2;\r\n  const haveDecimal = cal - Math.floor(cal) !== 0;\r\n  const result = haveDecimal ? cal.toFixed(3) : cal;\r\n  return result + '%';\r\n};\r\n\r\nexport default calPercentage;\r\n","import config from '../config/main';\r\nimport createScopeStyles, { IRCreateScopeStyles } from './createScopeStyles';\r\n\r\nconst getScopeByclassName = (className: string): IRCreateScopeStyles => {\r\n  const nameClass = className.replace(/!/g, '');\r\n  const atIndex = nameClass.indexOf('@');\r\n  const intConfig = config();\r\n  const scope = intConfig.scope;\r\n  const bridge = intConfig.bridge;\r\n  const context = intConfig.context;\r\n\r\n  // Haven´t a BP designed\r\n  if (atIndex === -1) {\r\n    const firstBp = Object.keys(intConfig.breakpoints)[0];\r\n    return scope[firstBp as string];\r\n  }\r\n\r\n  // Have a BP designed, a normal BP.\r\n  const bp = nameClass.substring(atIndex + 1);\r\n  if (!bp.includes('-')) return scope[bp]; // A simple BP (13/15@lg), not compound (like this: 13/15@sm-md).\r\n\r\n  // A BP until. Example 13/15@-md\r\n  if (bp.substring(0, 1) === '-') {\r\n    if (scope[bp]) return scope[bp]; // exists the Scope.\r\n    const bpUntil = bp.substring(1);\r\n    scope[bp] = createScopeStyles({\r\n      bridge: bridge,\r\n      bp,\r\n      insertionType: 'before',\r\n      node: scope[bpUntil].node,\r\n      context,\r\n    });\r\n    return scope[bp]; // returning a new scope created\r\n  }\r\n\r\n  // A BP from and until (a BP compound). Example: Example 13/15@sm-md\r\n  if (scope[bp]) {\r\n    return scope[bp]; // exists the Scope.\r\n  }\r\n\r\n  const fromBp = bp.split('-')[0];\r\n  scope[bp] = createScopeStyles({\r\n    bridge: bridge,\r\n    bp,\r\n    insertionType: 'after',\r\n    node: scope[fromBp].node,\r\n    context,\r\n  });\r\n\r\n  return scope[bp]; // returning a new scope compounded created\r\n};\r\n\r\nexport default getScopeByclassName;\r\n","import config, { setStyles } from '../config/main';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport getScopeByclassName from '../helpers/getScopeByclassName';\r\n\r\nconst insertRules = (objStyles: IStyles) => {\r\n  const intConfig = config();\r\n\r\n  for (const className in objStyles) {\r\n    if (!intConfig.styles[className]) {\r\n      const nodeScope = getScopeByclassName(className);\r\n      const valClass = objStyles[className];\r\n      const rules = nodeScope.method.rules;\r\n      nodeScope.method.insertRule(valClass, rules ? rules.length : 0);\r\n      setStyles(className, valClass); // saving in styles vault\r\n    }\r\n  }\r\n};\r\n\r\nexport default insertRules;\r\n","const flexProsAndValsBase = {\r\n  jc: {\r\n    ruleCss: 'justify-content',\r\n    classPrefix: 'jc',\r\n  },\r\n  ai: {\r\n    ruleCss: 'align-items',\r\n    classPrefix: 'ai',\r\n  },\r\n  ce: {\r\n    ruleCss: 'center',\r\n    classPrefix: 'ce',\r\n  },\r\n  fs: {\r\n    ruleCss: 'flex-start',\r\n    classPrefix: 'fs',\r\n  },\r\n  fe: {\r\n    ruleCss: 'flex-end',\r\n    classPrefix: 'fe',\r\n  },\r\n  sb: {\r\n    ruleCss: 'space-between',\r\n    classPrefix: 'sb',\r\n  },\r\n  sa: {\r\n    ruleCss: 'space-around',\r\n    classPrefix: 'sa',\r\n  },\r\n  fw: {\r\n    ruleCss: 'flex-wrap',\r\n    classPrefix: 'fw',\r\n  },\r\n  nw: {\r\n    ruleCss: 'nowrap',\r\n    classPrefix: 'nw',\r\n  },\r\n  w: {\r\n    ruleCss: 'wrap',\r\n    classPrefix: 'w',\r\n  },\r\n  wr: {\r\n    ruleCss: 'wrap-reverse',\r\n    classPrefix: 'wr',\r\n  },\r\n  fd: {\r\n    ruleCss: 'flex-direction',\r\n    classPrefix: 'fd',\r\n  },\r\n  r: {\r\n    ruleCss: 'row',\r\n    classPrefix: 'r',\r\n  },\r\n  rr: {\r\n    ruleCss: 'row-reverse',\r\n    classPrefix: 'rr',\r\n  },\r\n  co: {\r\n    ruleCss: 'column',\r\n    classPrefix: 'co',\r\n  },\r\n  cor: {\r\n    ruleCss: 'column-reverse',\r\n    classPrefix: 'co',\r\n  },\r\n  au: {\r\n    ruleCss: 'auto',\r\n    classPrefix: 'au',\r\n  },\r\n  st: {\r\n    ruleCss: 'stretch',\r\n    classPrefix: 'st',\r\n  },\r\n  bl: {\r\n    ruleCss: 'baseline',\r\n    classPrefix: 'bl',\r\n  },\r\n  in: {\r\n    ruleCss: 'initial',\r\n    classPrefix: 'in',\r\n  },\r\n  ih: {\r\n    ruleCss: 'inherit',\r\n    classPrefix: 'ih',\r\n  },\r\n};\r\n\r\nconst flexPropsAndValsSelfBase = {\r\n  fg: {\r\n    ruleCss: 'flex-grow',\r\n    classPrefix: 'fg',\r\n  },\r\n  fh: {\r\n    ruleCss: 'flex-shrink',\r\n    classPrefix: 'fh',\r\n  },\r\n  as: {\r\n    ruleCss: 'align-self',\r\n    classPrefix: 'as',\r\n  },\r\n  or: {\r\n    ruleCss: 'order',\r\n    classPrefix: 'or',\r\n  },\r\n};\r\n\r\nconst flexPropsAndValsSelf = {\r\n  ...flexPropsAndValsSelfBase,\r\n  'flex-grow': flexPropsAndValsSelfBase.fg,\r\n  'flex-shrink': flexPropsAndValsSelfBase.fh,\r\n  'align-self': flexPropsAndValsSelfBase.as,\r\n  order: flexPropsAndValsSelfBase.or,\r\n};\r\n\r\nexport const flexProsAndVals = {\r\n  ...flexProsAndValsBase,\r\n  ...flexPropsAndValsSelf,\r\n  'justify-content': flexProsAndValsBase.jc,\r\n  'align-items': flexProsAndValsBase.ai,\r\n  center: flexProsAndValsBase.ce,\r\n  'flex-start': flexProsAndValsBase.fs,\r\n  'flex-end': flexProsAndValsBase.fe,\r\n  'space-between': flexProsAndValsBase.sb,\r\n  'space-around': flexProsAndValsBase.fs,\r\n  'flex-wrap': flexProsAndValsBase.fw,\r\n  nowrap: flexProsAndValsBase.nw,\r\n  w: flexProsAndValsBase.w,\r\n  'wrap-reverse': flexProsAndValsBase.wr,\r\n  'flex-direction': flexProsAndValsBase.fd,\r\n  row: flexProsAndValsBase.r,\r\n  'row-reverse': flexProsAndValsBase.rr,\r\n  column: flexProsAndValsBase.co,\r\n  'column-reverse': flexProsAndValsBase.cor,\r\n  auto: flexProsAndValsBase.au,\r\n  stretch: flexProsAndValsBase.st,\r\n  baseline: flexProsAndValsBase.bl,\r\n  initial: flexProsAndValsBase.in,\r\n  inherit: flexProsAndValsBase.ih,\r\n};\r\n\r\nexport const flexAttrsSelf = Object.keys(flexPropsAndValsSelf);\r\n","const percentageConverter = (percentage: string) => {\r\n  return '0¯' + percentage.replace('%', '');\r\n};\r\n\r\nexport default percentageConverter;\r\n","import { flexAttrsSelf } from '../config/flex';\r\nimport config from '../config/main';\r\nimport { processors, TDirectiveName } from '../config/processors';\r\nimport { IBpCals } from './buildCss';\r\nimport percentageConverter from './percentageConverter';\r\n\r\nexport interface IStyles {\r\n  [name: string]: string;\r\n}\r\n\r\nconst createStyles = (directive: TDirectiveName, bps: IBpCals): IStyles => {\r\n  const intConfig = config();\r\n  const sizes = intConfig.sizes;\r\n  const prefix = intConfig.prefix;\r\n  const prop = processors[directive].ruleCss;\r\n  const styles: IStyles = {};\r\n\r\n  Object.keys(bps).forEach((bp) => {\r\n    // preparing the className\r\n    const shortNameClass = bps[bp].name;\r\n\r\n    // just if have a percentage\r\n    let nameClass = shortNameClass;\r\n    if (shortNameClass.includes('%')) {\r\n      nameClass = shortNameClass.replace(\r\n        shortNameClass,\r\n        percentageConverter(shortNameClass)\r\n      );\r\n    }\r\n\r\n    const finalPrefix = prefix ? prefix + '-' : '';\r\n    nameClass =\r\n      finalPrefix +\r\n      processors[directive].classPrefix +\r\n      '-' +\r\n      nameClass\r\n        .replace(/\\//g, '\\\\/')\r\n        .replace(/:/g, '\\\\:')\r\n        .replace('@', '\\\\@')\r\n        .split('.')\r\n        .join('_');\r\n\r\n    if (!intConfig.styles[nameClass]) {\r\n      // Property and value\r\n      let propAndVal;\r\n      if (directive === 'flex') {\r\n        propAndVal = bps[bp].value;\r\n        const flexImportant = shortNameClass.includes('!')\r\n          ? ';display:flex !important;'\r\n          : ';display:flex;';\r\n\r\n        // Searching a flex self inside. ['as' for 'align-self']\r\n        const attrsFlexSelfs = flexAttrsSelf.filter((nameAttrFlex) =>\r\n          shortNameClass.includes(nameAttrFlex + ':')\r\n        );\r\n        if (attrsFlexSelfs.length) {\r\n          // if the items number of flex selft (+1) is diferrent so exists other flex attribute. Example: as:ce jc:ce\r\n          if (attrsFlexSelfs.length + 1 !== shortNameClass.split(':').length) {\r\n            propAndVal += flexImportant;\r\n          }\r\n        } else {\r\n          propAndVal += flexImportant;\r\n        }\r\n      } else {\r\n        propAndVal = prop + ':' + bps[bp].value;\r\n      }\r\n\r\n      let rule = '@media screen and ';\r\n      let direct = false;\r\n      if (!bp.includes('-')) {\r\n        // no tiene until\r\n        if (sizes[bp]) {\r\n          rule += '(min-width: ' + sizes[bp] + 'px)';\r\n        } else {\r\n          rule = '.' + nameClass.replace(/!/g, '\\\\!') + '{' + propAndVal + '}';\r\n          direct = true;\r\n        }\r\n      } else {\r\n        const bpSplited = bp.split('-');\r\n        const bp1 = bpSplited[0];\r\n        if (bp1) rule += '(min-width: ' + sizes[bp1] + 'px) and ';\r\n        const bp2 = bpSplited[1];\r\n        rule += '(max-width: ' + (sizes[bp2] - 1) + 'px)';\r\n      }\r\n\r\n      if (!direct) {\r\n        rule += '{.' + nameClass.replace(/!/g, '\\\\!') + '{' + propAndVal + '}}';\r\n      }\r\n\r\n      styles[nameClass] = rule;\r\n    } else {\r\n      styles[nameClass] = intConfig.styles[nameClass];\r\n    }\r\n  });\r\n  return styles;\r\n};\r\n\r\nexport default createStyles;\r\n","import { IStyles } from './createStyles';\r\n\r\nconst replaceList = [\r\n  ['/', ''],\r\n  ['\\\\', '/'],\r\n  ['/:', ':'],\r\n  ['\\\\:', ':'],\r\n  ['\\\\@', '@'],\r\n  ['/@', '@'],\r\n];\r\n\r\nconst nameCleaner = (objStyles: IStyles): IStyles => {\r\n  const obj: IStyles = {};\r\n  for (const name in objStyles) {\r\n    let newName = name;\r\n    replaceList.forEach((reItem) => {\r\n      newName = newName.split(reItem[0]).join(reItem[1]);\r\n    });\r\n    obj[newName] = objStyles[name];\r\n  }\r\n  return obj;\r\n};\r\n\r\nexport default nameCleaner;\r\n","import { TDirectiveName } from '../config/processors';\r\nimport insertRules from '../methods/insertRules';\r\nimport createStyles, { IStyles } from './createStyles';\r\nimport nameCleaner from './nameCleaner';\r\n\r\nexport interface IRBuildStyles {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport interface IBpCals {\r\n  [bpName: string]: IRBuildStyles;\r\n}\r\n\r\nexport interface IBuildCss {\r\n  type: TDirectiveName;\r\n  bps: IBpCals;\r\n  deep: boolean;\r\n}\r\n\r\nconst buildCss = (data: IBuildCss): IStyles => {\r\n  // creating the styles\r\n  const objStyles = createStyles(data.type, data.bps);\r\n\r\n  // Inserting CSS rules\r\n  if (data.deep) {\r\n    insertRules(objStyles);\r\n  }\r\n\r\n  // name classes cleaner\r\n  return nameCleaner(objStyles);\r\n};\r\n\r\nexport default buildCss;\r\n","import prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\nimport calPercentage from '../helpers/calPercentage';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport getConfig from '../config/main';\r\nimport { IStyles } from '../helpers/createStyles';\r\n\r\nconst buildCols = (values: string, insertStyles = false): IStyles | Error => {\r\n  let cols: number[];\r\n  let bp;\r\n  const bpCals: IBpCals = {};\r\n  const config = getConfig();\r\n\r\n  // Getting numbers\r\n  let selectorName, propValue, paramPrepared;\r\n  const directBp = Object.keys(config.breakpoints)[0];\r\n\r\n  let err: boolean | Error = false;\r\n\r\n  for (const item of values.split(' ')) {\r\n    let param = item;\r\n    selectorName = param;\r\n    paramPrepared = prepareParam(param);\r\n    bp = paramPrepared.breakPoints;\r\n    param = paramPrepared.numbers;\r\n\r\n    if (param.includes('/')) {\r\n      const paramSplited = param.split('/');\r\n      cols = [Number(paramSplited[0]), Number(paramSplited[1])];\r\n    } else {\r\n      if (paramPrepared.widthBp) {\r\n        if (bp.includes('-')) {\r\n          err = regError(\r\n            'SyntaxError',\r\n            \"You can't determine a 'until breakpoint' when use the explicit columns max: \" +\r\n              values\r\n          );\r\n          break;\r\n        } else {\r\n          cols = [Number(param), config.cols[bp] as number];\r\n        }\r\n      } else {\r\n        cols = [Number(param), config.cols[directBp] as number];\r\n      }\r\n    }\r\n\r\n    propValue = calPercentage(cols[0], cols[1]);\r\n    if (paramPrepared.important) propValue += ' !important';\r\n\r\n    bpCals[bp] = {\r\n      name: selectorName,\r\n      value: propValue,\r\n    };\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'cols',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildCols;\r\n","import { flexAttrsSelf, flexProsAndVals } from '../config/flex';\r\nimport getConfig from '../config/main';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\n\r\nconst buildFlex = (valFlex: string, insertStyles = false): IStyles | Error => {\r\n  const bpCals: IBpCals = {};\r\n\r\n  // Getting numbers\r\n  let err: boolean | Error = false;\r\n  const config = getConfig();\r\n  const firstBp = Object.keys(config.breakpoints)[0];\r\n\r\n  for (const param of valFlex.split(' ')) {\r\n    let propVal;\r\n    const paramPrepared = prepareParam(param);\r\n    const bpNames = paramPrepared.breakPoints;\r\n    const flexSplited = paramPrepared.numbers.split(':');\r\n    const nameProp = flexSplited[0] as keyof typeof flexProsAndVals; // 'fc' o 'or'\r\n    const valProp = flexSplited[1] as keyof typeof flexProsAndVals; // 'ce' o '1'\r\n    let valAlias: string;\r\n\r\n    if (!flexAttrsSelf.includes(nameProp)) {\r\n      if (!flexProsAndVals[nameProp]) {\r\n        err = regError(\r\n          'Non-existent Alias',\r\n          \"Don't exists the alias '\" + nameProp + \"' in Flex vault.\"\r\n        );\r\n        break;\r\n      }\r\n      if (!flexProsAndVals[valProp]) {\r\n        err = regError(\r\n          'Non-existent Alias',\r\n          \"Don't exists the alias '\" + valProp + \"' in Flex vault.\"\r\n        );\r\n        break;\r\n      }\r\n      propVal =\r\n        flexProsAndVals[nameProp].ruleCss +\r\n        ':' +\r\n        flexProsAndVals[valProp].ruleCss;\r\n      valAlias = flexProsAndVals[valProp].classPrefix;\r\n    } else {\r\n      propVal = flexProsAndVals[nameProp].ruleCss + ':' + valProp;\r\n      valAlias = valProp;\r\n    }\r\n\r\n    let sufixBp = bpNames === firstBp ? '' : '@' + bpNames;\r\n    if (paramPrepared.important) {\r\n      propVal += ' !important';\r\n      sufixBp += '!';\r\n    }\r\n\r\n    let selectorName =\r\n      flexProsAndVals[nameProp].classPrefix + ':' + valAlias + sufixBp;\r\n\r\n    if (!bpCals[bpNames]) {\r\n      bpCals[bpNames] = {\r\n        name: selectorName,\r\n        value: propVal,\r\n      };\r\n    } else {\r\n      if (selectorName.includes('@')) selectorName = selectorName.split('@')[0]; // just here because will be contact with the other className\r\n      let prevName = bpCals[bpNames].name.split('@')[0];\r\n      if (bpCals[bpNames].name.includes('!') && !prevName.includes('!'))\r\n        prevName += '!';\r\n\r\n      bpCals[bpNames].name = prevName + '-' + selectorName + sufixBp;\r\n      bpCals[bpNames].value += ';' + propVal;\r\n    }\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'flex',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildFlex;\r\n","import calPercentage from './calPercentage';\r\n\r\nconst relativeMeasures = ['%', 'rem', 'em', 'ex', 'vw', 'vh', 'pt', 'cm', 'pc'];\r\n\r\nconst processedNumber = (n: string) => {\r\n  let nProcessed;\r\n  if (n.includes('/')) {\r\n    nProcessed = n.split('/');\r\n    nProcessed = calPercentage(\r\n      parseFloat(nProcessed[0]),\r\n      parseFloat(nProcessed[1])\r\n    );\r\n  } else if (n === 'auto') {\r\n    nProcessed = 'auto';\r\n  } else {\r\n    const relativeUnits = relativeMeasures.filter((unit) => {\r\n      return n.includes(unit);\r\n    });\r\n    if (relativeUnits.length) {\r\n      nProcessed = n;\r\n    } else {\r\n      nProcessed = n === '0' ? n : n + 'px';\r\n    }\r\n  }\r\n  return nProcessed;\r\n};\r\n\r\nexport default processedNumber;\r\n","import { TDirectiveName } from '../config/processors';\r\nimport buildCss, { IBpCals } from './buildCss';\r\nimport { IStyles } from './createStyles';\r\nimport prepareParam from './prepareParam';\r\nimport processedNumber from './processedNumber';\r\n\r\nconst buildAttr = (\r\n  values: string,\r\n  directive: TDirectiveName,\r\n  insertStyles = false\r\n): IStyles => {\r\n  const bpCals: IBpCals = {};\r\n\r\n  values.split(' ').forEach((param) => {\r\n    const paramProcessed = prepareParam(param);\r\n    const bpNames = paramProcessed.breakPoints;\r\n\r\n    // processing number values\r\n    let propValue = paramProcessed.numbers\r\n      .split('-')\r\n      .map((n) => processedNumber(n))\r\n      .join(' ');\r\n    if (paramProcessed.important) propValue += ' !important';\r\n    bpCals[bpNames] = {\r\n      name: param,\r\n      value: propValue,\r\n    };\r\n  });\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: directive,\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildAttr;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPad = (valPads: string, insertStyles = false) => {\r\n  return buildAttr(valPads, 'pad', insertStyles);\r\n};\r\n\r\nexport default buildPad;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadTop = (valPadTop: string, insertStyles = false) => {\r\n  return buildAttr(valPadTop, 'padt', insertStyles);\r\n};\r\n\r\nexport default buildPadTop;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadRight = (valPadRight: string, insertStyles = false) => {\r\n  return buildAttr(valPadRight, 'padr', insertStyles);\r\n};\r\n\r\nexport default buildPadRight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadBottom = (valPadBottom: string, insertStyles = false) => {\r\n  return buildAttr(valPadBottom, 'padb', insertStyles);\r\n};\r\n\r\nexport default buildPadBottom;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadLeft = (valPadLeft: string, insertStyles = false) => {\r\n  return buildAttr(valPadLeft, 'padl', insertStyles);\r\n};\r\n\r\nexport default buildPadLeft;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMar = (valMars: string, insertStyles = false) => {\r\n  return buildAttr(valMars, 'mar', insertStyles);\r\n};\r\n\r\nexport default buildMar;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarTop = (valMarTop: string, insertStyles = false) => {\r\n  return buildAttr(valMarTop, 'mart', insertStyles);\r\n};\r\n\r\nexport default buildMarTop;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarRight = (valMarRight: string, insertStyles = false) => {\r\n  return buildAttr(valMarRight, 'marr', insertStyles);\r\n};\r\n\r\nexport default buildMarRight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarBottom = (valMarBottom: string, insertStyles = false) => {\r\n  return buildAttr(valMarBottom, 'marb', insertStyles);\r\n};\r\n\r\nexport default buildMarBottom;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarLeft = (valMarLeft: string, insertStyles = false) => {\r\n  return buildAttr(valMarLeft, 'marl', insertStyles);\r\n};\r\n\r\nexport default buildMarLeft;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMaxWidth = (valMaxWidth: string, insertStyles = false) => {\r\n  return buildAttr(valMaxWidth, 'mxw', insertStyles);\r\n};\r\n\r\nexport default buildMaxWidth;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMaxHeight = (valMaxHeight: string, insertStyles = false) => {\r\n  return buildAttr(valMaxHeight, 'mxh', insertStyles);\r\n};\r\n\r\nexport default buildMaxHeight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMinWidth = (valMinWidth: string, insertStyles = false) => {\r\n  return buildAttr(valMinWidth, 'miw', insertStyles);\r\n};\r\n\r\nexport default buildMinWidth;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMinHeight = (valMinHeight: string, insertStyles = false) => {\r\n  return buildAttr(valMinHeight, 'mih', insertStyles);\r\n};\r\n\r\nexport default buildMinHeight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildHeight = (valHeight: string, insertStyles = false) => {\r\n  return buildAttr(valHeight, 'hgt', insertStyles);\r\n};\r\n\r\nexport default buildHeight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildWidth = (valWidth: string, insertStyles = false) => {\r\n  return buildAttr(valWidth, 'wdh', insertStyles);\r\n};\r\n\r\nexport default buildWidth;\r\n","const positionProsAndValsBase = {\r\n  st: {\r\n    ruleCss: 'static',\r\n    classPrefix: 'st',\r\n  },\r\n  ab: {\r\n    ruleCss: 'absolute',\r\n    classPrefix: 'ab',\r\n  },\r\n  fi: {\r\n    ruleCss: 'fixed',\r\n    classPrefix: 'fi',\r\n  },\r\n  re: {\r\n    ruleCss: 'relative',\r\n    classPrefix: 're',\r\n  },\r\n  si: {\r\n    ruleCss: 'sticky',\r\n    classPrefix: 'si',\r\n  },\r\n  in: {\r\n    ruleCss: 'initial',\r\n    classPrefix: 'in',\r\n  },\r\n  ih: {\r\n    ruleCss: 'inherit',\r\n    classPrefix: 'ih',\r\n  },\r\n};\r\n\r\nexport const positionProsAndVals = {\r\n  ...positionProsAndValsBase,\r\n  static: positionProsAndValsBase.st,\r\n  absolute: positionProsAndValsBase.ab,\r\n  fixed: positionProsAndValsBase.fi,\r\n  relative: positionProsAndValsBase.re,\r\n  sticky: positionProsAndValsBase.si,\r\n  initial: positionProsAndValsBase.in,\r\n  inherit: positionProsAndValsBase.ih,\r\n};\r\n","import getConfig from '../config/main';\r\nimport { positionProsAndVals } from '../config/position';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\n\r\nconst buildPosition = (\r\n  valPos: string,\r\n  insertStyles = false\r\n): IStyles | Error => {\r\n  const bpCals: IBpCals = {};\r\n\r\n  // Getting numbers\r\n  let err: boolean | Error = false;\r\n  const config = getConfig();\r\n  const firstBp = Object.keys(config.breakpoints)[0];\r\n\r\n  for (const param of valPos.split(' ')) {\r\n    let propVal;\r\n    const paramPrepared = prepareParam(param);\r\n    const bpNames = paramPrepared.breakPoints;\r\n    const nameProp = paramPrepared.numbers as keyof typeof positionProsAndVals;\r\n\r\n    if (!positionProsAndVals[nameProp]) {\r\n      err = regError(\r\n        'Non-existent Alias',\r\n        \"Don't exists the alias '\" + nameProp + \"' in Position vault.\"\r\n      );\r\n      break;\r\n    }\r\n\r\n    propVal = positionProsAndVals[nameProp].ruleCss;\r\n    const className = positionProsAndVals[nameProp].classPrefix;\r\n\r\n    let sufixBp = bpNames === firstBp ? '' : '@' + bpNames;\r\n\r\n    if (paramPrepared.important) {\r\n      propVal += ' !important';\r\n      sufixBp += '!';\r\n    }\r\n\r\n    bpCals[bpNames] = {\r\n      name: className + sufixBp,\r\n      value: propVal,\r\n    };\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'pos',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildPosition;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildTop = (val: string, insertStyles = false) => {\r\n  return buildAttr(val, 't', insertStyles);\r\n};\r\n\r\nexport default buildTop;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildRight = (val: string, insertStyles = false) => {\r\n  return buildAttr(val, 'r', insertStyles);\r\n};\r\n\r\nexport default buildRight;\r\n","import buildAttr from '../helpers/buildAttr';\r\nimport { IStyles } from '../helpers/createStyles';\r\n\r\nconst buildBottom = (val: string, insertStyles = false): IStyles => {\r\n  return buildAttr(val, 'b', insertStyles);\r\n};\r\n\r\nexport default buildBottom;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildLeft = (val: string, insertStyles = false) => {\r\n  return buildAttr(val, 'l', insertStyles);\r\n};\r\n\r\nexport default buildLeft;\r\n","const displayProsAndValsBase = {\r\n  bl: {\r\n    ruleCss: 'block',\r\n    classPrefix: 'bl',\r\n  },\r\n  il: {\r\n    ruleCss: 'inline',\r\n    classPrefix: 'il',\r\n  },\r\n  ib: {\r\n    ruleCss: 'inline-block',\r\n    classPrefix: 'ib',\r\n  },\r\n  fx: {\r\n    ruleCss: 'flex',\r\n    classPrefix: 'fx',\r\n  },\r\n  if: {\r\n    ruleCss: 'inline-flex',\r\n    classPrefix: 'if',\r\n  },\r\n  no: {\r\n    ruleCss: 'none',\r\n    classPrefix: 'no',\r\n  },\r\n  in: {\r\n    ruleCss: 'initial',\r\n    classPrefix: 'in',\r\n  },\r\n  ih: {\r\n    ruleCss: 'inherit',\r\n    classPrefix: 'ih',\r\n  },\r\n};\r\n\r\nexport const displayProsAndVals = {\r\n  ...displayProsAndValsBase,\r\n  block: displayProsAndValsBase.bl,\r\n  inline: displayProsAndValsBase.il,\r\n  'inline-block': displayProsAndValsBase.ib,\r\n  flex: displayProsAndValsBase.fx,\r\n  'inline-flex': displayProsAndValsBase.if,\r\n  none: displayProsAndValsBase.no,\r\n  initial: displayProsAndValsBase.in,\r\n  inherit: displayProsAndValsBase.ih,\r\n};\r\n","import getConfig from '../config/main';\r\nimport { displayProsAndVals } from '../config/display';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\n\r\nconst buildDisplay = (\r\n  valDisplay: string,\r\n  insertStyles = false\r\n): IStyles | Error => {\r\n  const bpCals: IBpCals = {};\r\n\r\n  // Getting numbers\r\n  let err: boolean | Error = false;\r\n  const config = getConfig();\r\n  const firstBp = Object.keys(config.breakpoints)[0];\r\n\r\n  for (const param of valDisplay.split(' ')) {\r\n    let propVal;\r\n    const paramPrepared = prepareParam(param);\r\n    const bpNames = paramPrepared.breakPoints;\r\n    const nameProp = paramPrepared.numbers as keyof typeof displayProsAndVals;\r\n\r\n    if (!displayProsAndVals[nameProp]) {\r\n      err = regError(\r\n        'Non-existent Alias',\r\n        \"Don't exists the alias '\" + nameProp + \"' in display vault.\"\r\n      );\r\n      break;\r\n    }\r\n\r\n    propVal = displayProsAndVals[nameProp].ruleCss;\r\n    const className = displayProsAndVals[nameProp].classPrefix;\r\n\r\n    let sufixBp = bpNames === firstBp ? '' : '@' + bpNames;\r\n\r\n    if (paramPrepared.important) {\r\n      propVal += ' !important';\r\n      sufixBp += '!';\r\n    }\r\n\r\n    bpCals[bpNames] = {\r\n      name: className + sufixBp,\r\n      value: propVal,\r\n    };\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'd',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildDisplay;\r\n","import { IStyles } from './createStyles';\r\n\r\nexport interface IBuildXY {\r\n  values: string;\r\n  builderA: (valPadA: string, insertStyles: boolean) => IStyles;\r\n  builderB: (valPadB: string, insertStyles: boolean) => IStyles;\r\n  insertStyles: boolean;\r\n}\r\n\r\nconst buildXY = (data: IBuildXY): IStyles => {\r\n  const stylesA = data.builderA(data.values, data.insertStyles);\r\n  const stylesB = data.builderB(data.values, data.insertStyles);\r\n  const allStyles: IStyles = {};\r\n  for (const style in stylesA) {\r\n    allStyles[style] = stylesA[style];\r\n  }\r\n  for (const style in stylesB) {\r\n    allStyles[style] = stylesB[style];\r\n  }\r\n  return allStyles;\r\n};\r\n\r\nexport default buildXY;\r\n","import buildXY from '../helpers/buildXY';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport buildPadLeft from './buildPadLeft';\r\nimport buildPadRight from './buildPadRight';\r\n\r\nconst buildPadX = (valPadX: string, insertStyles = false): IStyles => {\r\n  return buildXY({\r\n    values: valPadX,\r\n    builderA: buildPadRight,\r\n    builderB: buildPadLeft,\r\n    insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildPadX;\r\n","import buildXY from '../helpers/buildXY';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport buildPadBottom from './buildPadBottom';\r\nimport buildPadTop from './buildPadTop';\r\n\r\nconst buildPadY = (valPadX: string, insertStyles = false): IStyles => {\r\n  return buildXY({\r\n    values: valPadX,\r\n    builderA: buildPadTop,\r\n    builderB: buildPadBottom,\r\n    insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildPadY;\r\n","import buildXY from '../helpers/buildXY';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport buildMarLeft from './buildMarLeft';\r\nimport buildMarRight from './buildMarRight';\r\n\r\nconst buildMarX = (valMarX: string, insertStyles = false): IStyles => {\r\n  return buildXY({\r\n    values: valMarX,\r\n    builderA: buildMarRight,\r\n    builderB: buildMarLeft,\r\n    insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildMarX;\r\n","import buildXY from '../helpers/buildXY';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport buildMarBottom from './buildMarBottom';\r\nimport buildMarTop from './buildMarTop';\r\n\r\nconst buildMarY = (valMarY: string, insertStyles = false): IStyles => {\r\n  return buildXY({\r\n    values: valMarY,\r\n    builderA: buildMarTop,\r\n    builderB: buildMarBottom,\r\n    insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildMarY;\r\n","import buildCols from '../methods/buildCols';\r\nimport buildFlex from '../methods/buildFlex';\r\nimport buildPad from '../methods/buildPad';\r\nimport buildPadTop from '../methods/buildPadTop';\r\nimport buildPadRight from '../methods/buildPadRight';\r\nimport buildPadBottom from '../methods/buildPadBottom';\r\nimport buildPadLeft from '../methods/buildPadLeft';\r\nimport buildMar from '../methods/buildMar';\r\nimport buildMarTop from '../methods/buildMarTop';\r\nimport buildMarRight from '../methods/buildMarRight';\r\nimport buildMarBottom from '../methods/buildMarBottom';\r\nimport buildMarLeft from '../methods/buildMarLeft';\r\nimport buildMaxWidth from '../methods/buildMaxWidth';\r\nimport buildMaxHeight from '../methods/buildMaxHeight';\r\nimport buildMinWidth from '../methods/buildMinWidth';\r\nimport buildMinHeight from '../methods/buildMinHeight';\r\nimport buildHeight from '../methods/buildHeight';\r\nimport buildWidth from '../methods/buildWidth';\r\nimport buildPosition from '../methods/buildPosition';\r\nimport buildTop from '../methods/buildTop';\r\nimport buildRight from '../methods/buildRight';\r\nimport buildBottom from '../methods/buildBottom';\r\nimport buildLeft from '../methods/buildLeft';\r\nimport buildDisplay from '../methods/buildDisplay';\r\nimport buildPadX from '../methods/buildPadX';\r\nimport buildPadY from '../methods/buildPadY';\r\nimport buildMarX from '../methods/buildMarX';\r\nimport buildMarY from '../methods/buildMarY';\r\n\r\nimport { IStyles } from '../helpers/createStyles';\r\n\r\ntype TDirectiveNameBase =\r\n  | 'cols'\r\n  | 'pad'\r\n  | 'padt'\r\n  | 'padr'\r\n  | 'padb'\r\n  | 'padl'\r\n  | 'padx'\r\n  | 'pady'\r\n  | 'mar'\r\n  | 'mart'\r\n  | 'marr'\r\n  | 'marb'\r\n  | 'marl'\r\n  | 'marx'\r\n  | 'mary'\r\n  | 'flex'\r\n  | 'mxw'\r\n  | 'mxh'\r\n  | 'miw'\r\n  | 'mih'\r\n  | 'wdh'\r\n  | 'hgt'\r\n  | 'pos'\r\n  | 't'\r\n  | 'r'\r\n  | 'b'\r\n  | 'l'\r\n  | 'd';\r\n\r\ntype TDirectiveNameExtended =\r\n  | 'c'\r\n  | 'fx'\r\n  | 'p'\r\n  | 'padding'\r\n  | 'pt'\r\n  | 'padding-top'\r\n  | 'pr'\r\n  | 'padding-right'\r\n  | 'pb'\r\n  | 'padding-bottom'\r\n  | 'pl'\r\n  | 'padding-left'\r\n  | 'py'\r\n  | 'padding-y'\r\n  | 'px'\r\n  | 'padding-x'\r\n  | 'my'\r\n  | 'margin-y'\r\n  | 'mx'\r\n  | 'margin-x'\r\n  | 'm'\r\n  | 'margin'\r\n  | 'mt'\r\n  | 'margin-top'\r\n  | 'mr'\r\n  | 'margin-right'\r\n  | 'mb'\r\n  | 'margin-bottom'\r\n  | 'ml'\r\n  | 'margin-left'\r\n  | 'w'\r\n  | 'width'\r\n  | 'h'\r\n  | 'height'\r\n  | 'max-width'\r\n  | 'max-height'\r\n  | 'min-width'\r\n  | 'min-height'\r\n  | 'position'\r\n  | 'top'\r\n  | 'right'\r\n  | 'bottom'\r\n  | 'left'\r\n  | 'display';\r\n\r\nexport type TDirectiveName = TDirectiveNameBase | TDirectiveNameExtended;\r\n\r\nexport interface IProcessor {\r\n  build: (values: string, insertStyles: boolean) => IStyles | Error;\r\n  ruleCss: string | string[];\r\n  classPrefix: string;\r\n}\r\n\r\nconst processorsBase: Record<TDirectiveNameBase, IProcessor> = {\r\n  cols: {\r\n    build: buildCols,\r\n    ruleCss: 'width',\r\n    classPrefix: 'c',\r\n  },\r\n\r\n  // Paddings\r\n  pad: {\r\n    build: buildPad,\r\n    ruleCss: 'padding',\r\n    classPrefix: 'p',\r\n  },\r\n  padt: {\r\n    build: buildPadTop,\r\n    ruleCss: 'padding-top',\r\n    classPrefix: 'pt',\r\n  },\r\n  padr: {\r\n    build: buildPadRight,\r\n    ruleCss: 'padding-right',\r\n    classPrefix: 'pr',\r\n  },\r\n  padb: {\r\n    build: buildPadBottom,\r\n    ruleCss: 'padding-bottom',\r\n    classPrefix: 'pb',\r\n  },\r\n  padl: {\r\n    build: buildPadLeft,\r\n    ruleCss: 'padding-left',\r\n    classPrefix: 'pl',\r\n  },\r\n  padx: {\r\n    build: buildPadX,\r\n    ruleCss: ['padding-left', 'padding-right'],\r\n    classPrefix: 'px',\r\n  },\r\n  pady: {\r\n    build: buildPadY,\r\n    ruleCss: ['padding-top', 'padding-bottom'],\r\n    classPrefix: 'py',\r\n  },\r\n\r\n  // Margin\r\n  mar: {\r\n    build: buildMar,\r\n    ruleCss: 'margin',\r\n    classPrefix: 'm',\r\n  },\r\n  mart: {\r\n    build: buildMarTop,\r\n    ruleCss: 'margin-top',\r\n    classPrefix: 'mt',\r\n  },\r\n  marr: {\r\n    build: buildMarRight,\r\n    ruleCss: 'margin-right',\r\n    classPrefix: 'mr',\r\n  },\r\n  marb: {\r\n    build: buildMarBottom,\r\n    ruleCss: 'margin-bottom',\r\n    classPrefix: 'mb',\r\n  },\r\n  marl: {\r\n    build: buildMarLeft,\r\n    ruleCss: 'margin-left',\r\n    classPrefix: 'ml',\r\n  },\r\n  marx: {\r\n    build: buildMarX,\r\n    ruleCss: ['margin-left', 'margin-right'],\r\n    classPrefix: 'px',\r\n  },\r\n  mary: {\r\n    build: buildMarY,\r\n    ruleCss: ['margin-top', 'margin-bottom'],\r\n    classPrefix: 'py',\r\n  },\r\n\r\n  // Flex Box\r\n  flex: {\r\n    build: buildFlex,\r\n    ruleCss: 'display: flex',\r\n    classPrefix: 'fx',\r\n  },\r\n\r\n  // Max & Min Width & Height\r\n  mxw: {\r\n    build: buildMaxWidth,\r\n    ruleCss: 'max-width',\r\n    classPrefix: 'mxw',\r\n  },\r\n\r\n  mxh: {\r\n    build: buildMaxHeight,\r\n    ruleCss: 'max-height',\r\n    classPrefix: 'mxh',\r\n  },\r\n\r\n  miw: {\r\n    build: buildMinWidth,\r\n    ruleCss: 'min-width',\r\n    classPrefix: 'miw',\r\n  },\r\n\r\n  mih: {\r\n    build: buildMinHeight,\r\n    ruleCss: 'min-height',\r\n    classPrefix: 'mih',\r\n  },\r\n\r\n  // Width & Height\r\n  wdh: {\r\n    build: buildWidth,\r\n    ruleCss: 'width',\r\n    classPrefix: 'w',\r\n  },\r\n\r\n  hgt: {\r\n    build: buildHeight,\r\n    ruleCss: 'height',\r\n    classPrefix: 'h',\r\n  },\r\n\r\n  // Position\r\n  pos: {\r\n    build: buildPosition,\r\n    ruleCss: 'position',\r\n    classPrefix: 'pos',\r\n  },\r\n  t: {\r\n    build: buildTop,\r\n    ruleCss: 'top',\r\n    classPrefix: 't',\r\n  },\r\n  r: {\r\n    build: buildRight,\r\n    ruleCss: 'right',\r\n    classPrefix: 'r',\r\n  },\r\n  b: {\r\n    build: buildBottom,\r\n    ruleCss: 'bottom',\r\n    classPrefix: 'b',\r\n  },\r\n  l: {\r\n    build: buildLeft,\r\n    ruleCss: 'left',\r\n    classPrefix: 'l',\r\n  },\r\n  d: {\r\n    build: buildDisplay,\r\n    ruleCss: 'display',\r\n    classPrefix: 'd',\r\n  },\r\n};\r\n\r\nexport const processors: Record<TDirectiveName, IProcessor> = {\r\n  ...processorsBase,\r\n  c: processorsBase.cols,\r\n  fx: processorsBase.flex,\r\n  p: processorsBase.pad,\r\n  padding: processorsBase.pad,\r\n  pt: processorsBase.padt,\r\n  'padding-top': processorsBase.padt,\r\n  pr: processorsBase.padr,\r\n  'padding-right': processorsBase.padr,\r\n  pb: processorsBase.padb,\r\n  'padding-bottom': processorsBase.padb,\r\n  pl: processorsBase.padl,\r\n  'padding-left': processorsBase.padl,\r\n  py: processorsBase.pady,\r\n  'padding-y': processorsBase.pady,\r\n  px: processorsBase.padx,\r\n  'padding-x': processorsBase.padx,\r\n  m: processorsBase.mar,\r\n  margin: processorsBase.mar,\r\n  mt: processorsBase.mart,\r\n  'margin-top': processorsBase.mart,\r\n  mr: processorsBase.marr,\r\n  'margin-right': processorsBase.marr,\r\n  mb: processorsBase.marb,\r\n  'margin-bottom': processorsBase.marb,\r\n  ml: processorsBase.marl,\r\n  'margin-left': processorsBase.marl,\r\n  my: processorsBase.mary,\r\n  'margin-y': processorsBase.mary,\r\n  mx: processorsBase.marx,\r\n  'margin-x': processorsBase.marx,\r\n  w: processorsBase.wdh,\r\n  width: processorsBase.wdh,\r\n  h: processorsBase.hgt,\r\n  height: processorsBase.hgt,\r\n  'max-width': processorsBase.mxw,\r\n  'max-height': processorsBase.mxh,\r\n  'min-width': processorsBase.miw,\r\n  'min-height': processorsBase.mih,\r\n  position: processorsBase.pos,\r\n  top: processorsBase.t,\r\n  right: processorsBase.r,\r\n  bottom: processorsBase.b,\r\n  left: processorsBase.l,\r\n  display: processorsBase.d,\r\n};\r\n","import { processors, TDirectiveName } from '../config/processors';\r\n\r\nconst getParameters = (\r\n  Node: HTMLElement | Element\r\n): Partial<Record<TDirectiveName, string>> => {\r\n  const params: Partial<Record<TDirectiveName, string>> = {};\r\n  const attrs = Node.attributes;\r\n  const paramNames = Object.keys(processors);\r\n  Array.prototype.forEach.call(attrs, (attr) => {\r\n    if (paramNames.includes(attr.name)) {\r\n      if (attr.value !== '')\r\n        params[attr.name as TDirectiveName] = attr.value\r\n          .trim()\r\n          .split(' ')\r\n          .filter((item: string) => item)\r\n          .join(' ');\r\n    }\r\n  });\r\n  return params;\r\n};\r\n\r\nexport default getParameters;\r\n","import { processors, TDirectiveName } from '../config/processors';\r\nimport { IStyles } from '../helpers/createStyles';\r\n\r\nexport interface IBuildResult {\r\n  [prop: string]: IStyles | boolean;\r\n}\r\n\r\nconst build = (\r\n  obj: Partial<Record<TDirectiveName, string>>,\r\n  insertStyles = false\r\n): Partial<IBuildResult> | Error => {\r\n  const rObj: Partial<IBuildResult> = {};\r\n  let err: Error | boolean = false;\r\n  for (const prop in obj) {\r\n    const propData = processors[prop as TDirectiveName];\r\n    const objStyles: IStyles | Error = propData.build(\r\n      obj[prop as TDirectiveName] as string,\r\n      insertStyles\r\n    );\r\n    if (objStyles instanceof Error) {\r\n      err = objStyles;\r\n      break;\r\n    } else {\r\n      rObj[prop] = objStyles;\r\n    }\r\n  }\r\n\r\n  if (err) return err;\r\n  return rObj;\r\n};\r\n\r\nexport default build;\r\n","import getConfig from '../config/main';\r\n\r\nconst addClasses = (\r\n  Node: HTMLElement | Element,\r\n  classesNames: string,\r\n  overwrite?: boolean\r\n): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    const config = getConfig();\r\n    const names = classesNames.split(' ');\r\n    let classesToAdd: string[] = names;\r\n    if (!overwrite) {\r\n      classesToAdd = names.filter((name) => !Node.classList.contains(name));\r\n      if (!classesToAdd.length) {\r\n        resolve();\r\n        return;\r\n      }\r\n    }\r\n\r\n    const obsNode = new config.context.MutationObserver((mutations) => {\r\n      const target = mutations[0].target;\r\n      const currentClasses = (target as Element).className.split(' ');\r\n      const containsAll = names.every((element) =>\r\n        currentClasses.includes(element)\r\n      );\r\n      if (containsAll) {\r\n        obsNode.disconnect();\r\n        resolve();\r\n      }\r\n    });\r\n    obsNode.observe(Node, {\r\n      childList: false,\r\n      subtree: false,\r\n      attributes: true,\r\n      attributeFilter: ['class'],\r\n      characterData: false,\r\n    });\r\n\r\n    if (overwrite) {\r\n      Node.className = classesNames;\r\n    } else {\r\n      const space = Node.hasAttribute('class') ? ' ' : '';\r\n      Node.className += space + classesToAdd.join(' ');\r\n    }\r\n  });\r\n};\r\n\r\nexport default addClasses;\r\n","import getConfig from '../config/main';\r\n\r\nexport const removeProp = (\r\n  Node: HTMLElement | Element,\r\n  propName: string,\r\n  context: Window & typeof globalThis\r\n): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    if (!Node.hasAttribute(propName)) {\r\n      resolve();\r\n      return;\r\n    }\r\n    const obsNode = new context.MutationObserver(() => {\r\n      obsNode.disconnect();\r\n      resolve();\r\n    });\r\n    obsNode.observe(Node, {\r\n      childList: false,\r\n      subtree: false,\r\n      attributes: true,\r\n      attributeFilter: [propName],\r\n      characterData: false,\r\n    });\r\n    Node.removeAttribute(propName);\r\n  });\r\n};\r\n\r\nexport const removeProps = (\r\n  Node: HTMLElement | Element,\r\n  propNames: string[],\r\n  context: Window & typeof globalThis\r\n): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    const promises = propNames.map((name) => removeProp(Node, name, context));\r\n    Promise.all(promises).then(() => resolve());\r\n  });\r\n};\r\n\r\nconst removeAttr = (\r\n  Node: HTMLElement | Element,\r\n  propNames: string | string[]\r\n): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    const config = getConfig();\r\n    if (Array.isArray(propNames)) {\r\n      removeProps(Node, propNames, config.context).then(resolve);\r\n    } else {\r\n      removeProp(Node, propNames, config.context).then(resolve);\r\n    }\r\n  });\r\n};\r\n\r\nexport default removeAttr;\r\n","import getConfig from '../config/main';\r\nimport addClasses from '../utils/addClasses';\r\nimport removeAttr from '../utils/removeAttr';\r\n\r\nexport interface IEventReady {\r\n  node: HTMLElement | Element;\r\n  directive: string | string[];\r\n  classes: string;\r\n  resolve: (value: void | Error | PromiseLike<void | Error>) => void;\r\n}\r\n\r\nconst eventReady = ({ node, directive, classes, resolve }: IEventReady) => {\r\n  const config = getConfig();\r\n  removeAttr(node, directive)\r\n    .then(() => addClasses(node, classes))\r\n    .then(() => {\r\n      resolve();\r\n      const event = new config.context.CustomEvent('layout:ready');\r\n      node.dispatchEvent(event);\r\n    });\r\n};\r\n\r\nexport default eventReady;\r\n","import { IStyles } from '../helpers/createStyles';\r\nimport regError from '../helpers/regError';\r\nimport build, { IBuildResult } from './build';\r\nimport getParameters from './getParameters';\r\nimport { TDirectiveName } from '../config/processors';\r\nimport eventReady from '../helpers/eventReady';\r\n\r\nconst set = (\r\n  Node: HTMLElement | Element,\r\n  parameters?: Partial<Record<TDirectiveName, string>>\r\n): Promise<void | Error> => {\r\n  return new Promise((resolve, reject) => {\r\n    const params = parameters || getParameters(Node);\r\n    const arrParams = Object.keys(params);\r\n    if (!arrParams.length) {\r\n      const err = regError(\r\n        'Parameter Missing',\r\n        \"don't exists any parameter to process\",\r\n        Node\r\n      );\r\n      reject(err);\r\n      return;\r\n    }\r\n\r\n    const toBuild: Partial<Record<TDirectiveName, string>> = {};\r\n    for (const prop in params) {\r\n      toBuild[prop as TDirectiveName] = params[prop as TDirectiveName];\r\n    }\r\n\r\n    // creating classes names and inserting that classes to the core\r\n    const classesObj = build(toBuild as Record<TDirectiveName, string>, true);\r\n    if (classesObj instanceof Error) {\r\n      reject(classesObj);\r\n      return;\r\n    }\r\n\r\n    // adding classes\r\n    const classes = classesObj as Partial<IBuildResult>;\r\n    const classesNames = Object.keys(classes)\r\n      .map((name: string) => Object.keys(classes[name] as IStyles))\r\n      .flat()\r\n      .join(' ');\r\n\r\n    // removing unnecessary props\r\n    eventReady({\r\n      node: Node,\r\n      directive: arrParams,\r\n      classes: classesNames,\r\n      resolve,\r\n    });\r\n  });\r\n};\r\n\r\nexport default set;\r\n","import regError from './regError';\r\n\r\nconst directiveValues = (\r\n  Node: HTMLElement | Element,\r\n  directives: string[]\r\n): string | Error => {\r\n  const directiveValues = directives\r\n    .map((item) => Node.getAttribute(item))\r\n    .filter((item) => item)\r\n    .join(' ');\r\n  return !directiveValues\r\n    ? regError(\r\n        'Empty',\r\n        'The value of the directives \"' + directives.join(', ') + '\" are empty',\r\n        Node\r\n      )\r\n    : directiveValues;\r\n};\r\n\r\nexport default directiveValues;\r\n","import buildFlex from './buildFlex';\r\nimport eventReady from '../helpers/eventReady';\r\nimport directiveValues from '../helpers/directiveValues';\r\n\r\nconst setFlex = (\r\n  Node: HTMLElement | Element,\r\n  flexValues?: string\r\n): Promise<void | Error> => {\r\n  return new Promise((resolve, reject) => {\r\n    const values = flexValues || directiveValues(Node, ['flex', 'fx']);\r\n    if (!values) return reject(values);\r\n\r\n    // Creating, inserting, and adding classNames of rules in Node.\r\n    const objStyles = buildFlex(values as string, true);\r\n    if (objStyles instanceof Error) {\r\n      reject(objStyles);\r\n      return;\r\n    }\r\n\r\n    // removing prop of Node and adding the corresponding classes\r\n    eventReady({\r\n      node: Node,\r\n      directive: 'flex',\r\n      classes: Object.keys(objStyles).join(' '),\r\n      resolve,\r\n    });\r\n  });\r\n};\r\n\r\nexport default setFlex;\r\n","import buildCols from './buildCols';\r\nimport eventReady from '../helpers/eventReady';\r\nimport directiveValues from '../helpers/directiveValues';\r\n\r\nconst setCols = (\r\n  Node: HTMLElement | Element,\r\n  columns?: string\r\n): Promise<void | Error> => {\r\n  return new Promise((resolve, reject) => {\r\n    const values = columns || directiveValues(Node, ['c', 'cols']);\r\n    if (!values) return reject(values);\r\n\r\n    // Creating, inserting, and adding classNames of rules in Node.\r\n    const objStyles = buildCols(values as string, true);\r\n    if (objStyles instanceof Error) {\r\n      reject(objStyles);\r\n      return;\r\n    }\r\n    const classesToAdd = Object.keys(objStyles).join(' ');\r\n\r\n    // removing prop of Node and adding the corresponding classes\r\n    eventReady({\r\n      node: Node,\r\n      directive: 'cols',\r\n      classes: classesToAdd,\r\n      resolve,\r\n    });\r\n  });\r\n};\r\n\r\nexport default setCols;\r\n","import buildAttr from '../helpers/buildAttr';\r\nimport { TDirectiveName } from '../config/processors';\r\nimport eventReady from '../helpers/eventReady';\r\nimport directiveValues from './directiveValues';\r\n\r\nconst setAttr = (\r\n  Node: HTMLElement | Element,\r\n  directives: TDirectiveName[],\r\n  vals?: string\r\n): Promise<void | Error> => {\r\n  return new Promise((resolve, reject) => {\r\n    const values = vals || directiveValues(Node, directives);\r\n    if (!values) return reject(values);\r\n\r\n    // Creating, inserting, and adding classNames of rules in Node.\r\n    const directive = directives[0];\r\n    const objStyles = buildAttr(values as string, directive, true);\r\n    const classesToAdd = Object.keys(objStyles).join(' ');\r\n\r\n    // removing prop of Node and adding the corresponding classes\r\n    eventReady({\r\n      node: Node,\r\n      directive,\r\n      classes: classesToAdd,\r\n      resolve,\r\n    });\r\n  });\r\n};\r\n\r\nexport default setAttr;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setHeight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['hgt', 'h'], values);\r\n};\r\n\r\nexport default setHeight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMarBottom = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['marb', 'mb', 'margin-bottom'], values);\r\n};\r\n\r\nexport default setMarBottom;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMarLeft = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['marl', 'ml', 'margin-left'], values);\r\n};\r\n\r\nexport default setMarLeft;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMarRight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['marr', 'mr', 'margin-right'], values);\r\n};\r\n\r\nexport default setMarRight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMar = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['mar', 'm', 'margin'], values);\r\n};\r\n\r\nexport default setMar;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMarTop = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['mart', 'mt', 'margin-top'], values);\r\n};\r\n\r\nexport default setMarTop;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMaxWidth = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['mxw', 'max-width'], values);\r\n};\r\n\r\nexport default setMaxWidth;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMinHeight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['mih', 'min-height'], values);\r\n};\r\n\r\nexport default setMinHeight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMinWidth = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['miw', 'min-width'], values);\r\n};\r\n\r\nexport default setMinWidth;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPadBottom = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['padb', 'pb', 'padding-bottom'], values);\r\n};\r\n\r\nexport default setPadBottom;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPadLeft = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['padl', 'pl', 'padding-left'], values);\r\n};\r\n\r\nexport default setPadLeft;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPadRight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['padr', 'pr', 'padding-right'], values);\r\n};\r\n\r\nexport default setPadRight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPad = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['pad', 'p', 'padding'], values);\r\n};\r\n\r\nexport default setPad;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPadTop = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['padt', 'pt', 'padding-top'], values);\r\n};\r\n\r\nexport default setPadTop;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setWidth = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['wdh', 'width'], values);\r\n};\r\n\r\nexport default setWidth;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setMaxHeight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['mxh', 'max-height'], values);\r\n};\r\n\r\nexport default setMaxHeight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setPosition = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['pos', 'position'], values);\r\n};\r\n\r\nexport default setPosition;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setTop = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['t', 'top'], values);\r\n};\r\n\r\nexport default setTop;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setRight = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['r', 'right'], values);\r\n};\r\n\r\nexport default setRight;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setBottom = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['b', 'bottom'], values);\r\n};\r\n\r\nexport default setBottom;\r\n","import setAttr from '../helpers/setAttr';\r\n\r\nconst setLeft = (\r\n  Node: HTMLElement | Element,\r\n  values?: string\r\n): Promise<void | Error> => {\r\n  return setAttr(Node, ['l', 'left'], values);\r\n};\r\n\r\nexport default setLeft;\r\n","import { IStyles } from './createStyles';\r\nimport directiveValues from './directiveValues';\r\nimport eventReady from './eventReady';\r\n\r\nexport interface ISetterXY {\r\n  Node: HTMLElement | Element;\r\n  directives: string[];\r\n  builder: (valPadX: string, insertStyles: boolean) => IStyles;\r\n  vals?: string;\r\n}\r\n\r\nconst setterXY = (data: ISetterXY): Promise<void | Error> => {\r\n  return new Promise((resolve, reject) => {\r\n    const values = data.vals || directiveValues(data.Node, data.directives);\r\n    if (!values) return reject(values);\r\n\r\n    // Creating, inserting, and adding classNames of rules in Node.\r\n    const objStyles = data.builder(values as string, true);\r\n    const classesToAdd = Object.keys(objStyles).join(' ');\r\n\r\n    // removing prop of Node and adding the corresponding classes\r\n    eventReady({\r\n      node: data.Node,\r\n      directive: data.directives,\r\n      classes: classesToAdd,\r\n      resolve,\r\n    });\r\n  });\r\n};\r\n\r\nexport default setterXY;\r\n","import buildPadX from './buildPadX';\r\nimport setterXY from '../helpers/setterXY';\r\n\r\nconst setPadX = (\r\n  Node: HTMLElement | Element,\r\n  vals?: string\r\n): Promise<void | Error> => {\r\n  return setterXY({\r\n    Node,\r\n    directives: ['padx', 'px', 'padding-x'],\r\n    builder: buildPadX,\r\n    vals,\r\n  });\r\n};\r\n\r\nexport default setPadX;\r\n","import buildPadY from './buildPadY';\r\nimport setterXY from '../helpers/setterXY';\r\n\r\nconst setPadY = (\r\n  Node: HTMLElement | Element,\r\n  vals?: string\r\n): Promise<void | Error> => {\r\n  return setterXY({\r\n    Node,\r\n    directives: ['pady', 'py', 'padding-y'],\r\n    builder: buildPadY,\r\n    vals,\r\n  });\r\n};\r\n\r\nexport default setPadY;\r\n","import buildMarX from './buildMarX';\r\nimport setterXY from '../helpers/setterXY';\r\n\r\nconst setMarX = (\r\n  Node: HTMLElement | Element,\r\n  vals?: string\r\n): Promise<void | Error> => {\r\n  return setterXY({\r\n    Node,\r\n    directives: ['marx', 'mx', 'margin-x'],\r\n    builder: buildMarX,\r\n    vals,\r\n  });\r\n};\r\n\r\nexport default setMarX;\r\n","import buildMarY from './buildMarY';\r\nimport setterXY from '../helpers/setterXY';\r\n\r\nconst setMarY = (\r\n  Node: HTMLElement | Element,\r\n  vals?: string\r\n): Promise<void | Error> => {\r\n  return setterXY({\r\n    Node,\r\n    directives: ['mary', 'my', 'margin-y'],\r\n    builder: buildMarY,\r\n    vals,\r\n  });\r\n};\r\n\r\nexport default setMarY;\r\n","import { TDirectiveName } from './../config/processors';\r\nimport { processors } from '../config/processors';\r\nimport addClasses from '../utils/addClasses';\r\nimport removeAttr from '../utils/removeAttr';\r\n\r\nconst reset = (Node: HTMLElement | Element): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    const classPrefixes = new Set(\r\n      Object.keys(processors).map(\r\n        (item) => processors[item as TDirectiveName].classPrefix\r\n      )\r\n    );\r\n    const layouterClasses = [...classPrefixes];\r\n    const restClass = Node.className.split(' ').filter((name) => {\r\n      if (!name.includes('-')) {\r\n        return true;\r\n      } else {\r\n        const findClass = layouterClasses.find((item) => {\r\n          const nLength = item.length;\r\n          const namePrefix = name.substring(0, nLength + 1);\r\n          return namePrefix === item + '-';\r\n        });\r\n        return !findClass;\r\n      }\r\n    });\r\n\r\n    if (restClass.length) {\r\n      const classesName = restClass.join(' ');\r\n      addClasses(Node, classesName, true).then(() => {\r\n        resolve();\r\n      });\r\n    } else {\r\n      removeAttr(Node, 'class').then(() => {\r\n        resolve();\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport default reset;\r\n","import { ILayouter } from './../layouter';\r\nimport { processors } from '../config/processors';\r\n\r\nconst nodesNotAccepted = [\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'discard',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'hatch',\r\n  'hatchpath',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'set',\r\n  'stop',\r\n  'style',\r\n  'svg',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'title',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n];\r\n\r\nconst searchAndProcess = (\r\n  layouter: ILayouter,\r\n  context: Document | HTMLElement | Element\r\n) => {\r\n  return new Promise((resolve) => {\r\n    const props = Object.keys(processors);\r\n    const attrs = props.map((prop) => `[${prop}]`).join(', ');\r\n    const nodes = context.querySelectorAll(attrs);\r\n    if (!nodes.length) {\r\n      resolve(layouter);\r\n      return;\r\n    }\r\n\r\n    const setNodes = new Set();\r\n    Array.prototype.filter\r\n      .call(\r\n        nodes,\r\n        (itemNode) =>\r\n          !nodesNotAccepted.includes(itemNode.nodeName.toLowerCase())\r\n      )\r\n      .forEach((item) => setNodes.add(item));\r\n    const promises: Promise<void | Error>[] = [];\r\n    setNodes.forEach((node) => {\r\n      promises.push(layouter.set(node as Element | HTMLElement));\r\n    });\r\n    Promise.all(promises).then(resolve);\r\n  });\r\n};\r\n\r\nexport default searchAndProcess;\r\n","import { ILayouter } from './../layouter';\r\nimport { processors } from '../config/processors';\r\nimport getConfig from '../config/main';\r\nimport searchAndProcess from './searchAndProcess';\r\n\r\nconst mainObserver = (layouter: ILayouter) => {\r\n  const config = getConfig();\r\n  const props = Object.keys(processors);\r\n  const obsBody = new layouter.context.MutationObserver((mutations) => {\r\n    for (const mutation of mutations) {\r\n      if (mutation.type === 'childList') {\r\n        if (!mutation.addedNodes.length) {\r\n          continue;\r\n        }\r\n        mutation.addedNodes.forEach((node) => {\r\n          if (node instanceof HTMLElement) {\r\n            const props = layouter.getParameters(node);\r\n            if (Object.keys(props).length) {\r\n              layouter.set(node, props);\r\n            }\r\n            searchAndProcess(layouter, node);\r\n          }\r\n        });\r\n      } else if (mutation.type === 'attributes') {\r\n        const node = mutation.target;\r\n        if (node instanceof HTMLElement) {\r\n          const props = layouter.getParameters(node);\r\n          if (Object.keys(props).length) {\r\n            layouter.set(node, props);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n  const observerOptions = {\r\n    childList: true,\r\n    subtree: true,\r\n    attributes: true,\r\n    attributeFilter: props,\r\n    characterData: false,\r\n  };\r\n  obsBody.observe(config.context.document.body, observerOptions);\r\n};\r\n\r\nexport default mainObserver;\r\n","import { IConfig, IConfigUser, setConfig, updateConfig } from './config/main';\r\nimport getParameters from './methods/getParameters';\r\n\r\nimport build from './methods/build';\r\nimport buildCols from './methods/buildCols';\r\nimport buildFlex from './methods/buildFlex';\r\nimport buildPad from './methods/buildPad';\r\nimport buildPadTop from './methods/buildPadTop';\r\nimport buildPadRight from './methods/buildPadRight';\r\nimport buildPadBottom from './methods/buildPadBottom';\r\nimport buildPadLeft from './methods/buildPadLeft';\r\nimport buildMar from './methods/buildMar';\r\nimport buildMarTop from './methods/buildMarTop';\r\nimport buildMarRight from './methods/buildMarRight';\r\nimport buildMarBottom from './methods/buildMarBottom';\r\nimport buildMarLeft from './methods/buildMarLeft';\r\nimport buildMaxWidth from './methods/buildMaxWidth';\r\nimport buildMaxHeight from './methods/buildMaxHeight';\r\nimport buildMinWidth from './methods/buildMinWidth';\r\nimport buildMinHeight from './methods/buildMinHeight';\r\nimport buildHeight from './methods/buildHeight';\r\nimport buildWidth from './methods/buildWidth';\r\nimport buildPosition from './methods/buildPosition';\r\nimport buildTop from './methods/buildTop';\r\nimport buildRight from './methods/buildRight';\r\nimport buildBottom from './methods/buildBottom';\r\nimport buildLeft from './methods/buildLeft';\r\nimport buildPadX from './methods/buildPadX';\r\nimport buildPadY from './methods/buildPadY';\r\nimport buildMarX from './methods/buildMarX';\r\nimport buildMarY from './methods/buildMarY';\r\n\r\nimport set from './methods/set';\r\nimport setFlex from './methods/setFlex';\r\nimport setCols from './methods/SetCols';\r\nimport setHeight from './methods/setHeight';\r\nimport setMarBottom from './methods/setMarBottom';\r\nimport setMarLeft from './methods/setMarLeft';\r\nimport setMarRight from './methods/setMarRight';\r\nimport setMar from './methods/setMar';\r\nimport setMarTop from './methods/setMarTop';\r\nimport setMaxWidth from './methods/setMaxWidth';\r\nimport setMinHeight from './methods/setMinHeight';\r\nimport setMinWidth from './methods/setMinWidth';\r\nimport setPadBottom from './methods/setPadBottom';\r\nimport setPadLeft from './methods/setPadLeft';\r\nimport setPadRight from './methods/setPadRight';\r\nimport setPad from './methods/setPad';\r\nimport setPadTop from './methods/setPadTop';\r\nimport setWidth from './methods/setWidth';\r\nimport setMaxHeight from './methods/setMaxHeight';\r\nimport setPosition from './methods/setPosition';\r\nimport setTop from './methods/setTop';\r\nimport setRight from './methods/setRight';\r\nimport setBottom from './methods/setBottom';\r\nimport setLeft from './methods/setLeft';\r\nimport setPadX from './methods/setPadX';\r\nimport setPadY from './methods/setPadY';\r\nimport setMarX from './methods/setMarX';\r\nimport setMarY from './methods/setMarY';\r\n\r\nimport insertRules from './methods/insertRules';\r\nimport reset from './methods/reset';\r\n\r\nimport { IStyles } from './helpers/createStyles';\r\nimport { IBuildResult } from './methods/build';\r\nimport searchAndProcess from './helpers/searchAndProcess';\r\nimport mainObserver from './helpers/mainObserver';\r\nimport { TDirectiveName, processors, IProcessor } from './config/processors';\r\n\r\nexport interface ILayouter extends IConfig {\r\n  getParameters: (\r\n    Node: HTMLElement | Element\r\n  ) => Partial<Record<TDirectiveName, string>>;\r\n  updateConfig: (userConfig: Partial<Omit<IConfigUser, 'bridge'>>) => IConfig;\r\n  build: (\r\n    obj: Partial<Record<TDirectiveName, string>>,\r\n    insertStyles?: boolean\r\n  ) => Partial<IBuildResult> | Error;\r\n  buildCols: (valCols: string, insertStyles?: boolean) => IStyles | Error;\r\n  buildFlex: (valFlex: string, insertStyles?: boolean) => IStyles | Error;\r\n  buildPad: (valPads: string, insertStyles?: boolean) => IStyles;\r\n  buildPadTop: (valPadTop: string, insertStyles?: boolean) => IStyles;\r\n  buildPadRight: (valPadRight: string, insertStyles?: boolean) => IStyles;\r\n  buildPadBottom: (valPadBottom: string, insertStyles?: boolean) => IStyles;\r\n  buildPadLeft: (valPadLeft: string, insertStyles?: boolean) => IStyles;\r\n  buildPadX: (valPadX: string, insertStyles?: boolean) => IStyles;\r\n  buildPadY: (valPadX: string, insertStyles?: boolean) => IStyles;\r\n  buildMar: (valMars: string, insertStyles?: boolean) => IStyles;\r\n  buildMarTop: (valMarTop: string, insertStyles?: boolean) => IStyles;\r\n  buildMarRight: (valMarRight: string, insertStyles?: boolean) => IStyles;\r\n  buildMarBottom: (valMarBottom: string, insertStyles?: boolean) => IStyles;\r\n  buildMarLeft: (valMarLeft: string, insertStyles?: boolean) => IStyles;\r\n  buildMarX: (valPadX: string, insertStyles?: boolean) => IStyles;\r\n  buildMarY: (valPadX: string, insertStyles?: boolean) => IStyles;\r\n  buildMaxWidth: (valMaxWidth: string, insertStyles?: boolean) => IStyles;\r\n  buildMaxHeight: (valMaxHeight: string, insertStyles?: boolean) => IStyles;\r\n  buildMinWidth: (valMinWidth: string, insertStyles?: boolean) => IStyles;\r\n  buildMinHeight: (valMinHeight: string, insertStyles?: boolean) => IStyles;\r\n  buildHeight: (valHeight: string, insertStyles?: boolean) => IStyles;\r\n  buildWidth: (valWidth: string, insertStyles?: boolean) => IStyles;\r\n  buildPosition: (\r\n    valPosition: string,\r\n    insertStyles?: boolean\r\n  ) => IStyles | Error;\r\n  buildTop: (valTop: string, insertStyles?: boolean) => IStyles | Error;\r\n  buildRight: (valRight: string, insertStyles?: boolean) => IStyles | Error;\r\n  buildBottom: (valBottom: string, insertStyles?: boolean) => IStyles | Error;\r\n  buildLeft: (valLeft: string, insertStyles?: boolean) => IStyles | Error;\r\n\r\n  set: (\r\n    Node: HTMLElement | Element,\r\n    parameters?: Partial<Record<TDirectiveName, string>>\r\n  ) => Promise<void | Error>;\r\n  setCols: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setFlex: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMar: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarTop: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarRight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarBottom: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarLeft: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarX: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMarY: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPad: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadTop: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadRight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadBottom: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadLeft: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadX: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPadY: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n\r\n  setWidth: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMinWidth: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMaxWidth: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setHeight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMinHeight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setMaxHeight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setPosition: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n\r\n  setTop: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setRight: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setBottom: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n  setLeft: (\r\n    Node: HTMLElement | Element,\r\n    values?: string\r\n  ) => Promise<void | Error>;\r\n\r\n  processors: Record<TDirectiveName, IProcessor>;\r\n\r\n  insertRules: (objStyles: IStyles) => void;\r\n  reset: (Node: HTMLElement | Element) => Promise<void>;\r\n  version: string;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    layouter: ILayouter;\r\n  }\r\n}\r\n\r\nconst layouter = (\r\n  context: Window & typeof globalThis,\r\n  userConfig: Partial<IConfigUser> = {}\r\n): ILayouter => {\r\n  const config = setConfig(context, userConfig);\r\n\r\n  const instance = {\r\n    ...config,\r\n    getParameters,\r\n    updateConfig,\r\n    insertRules,\r\n    build,\r\n    buildCols,\r\n    buildFlex,\r\n    buildPad,\r\n    buildPadTop,\r\n    buildPadRight,\r\n    buildPadBottom,\r\n    buildPadLeft,\r\n    buildPadX,\r\n    buildPadY,\r\n    buildMar,\r\n    buildMarTop,\r\n    buildMarRight,\r\n    buildMarBottom,\r\n    buildMarLeft,\r\n    buildMarX,\r\n    buildMarY,\r\n    buildMaxWidth,\r\n    buildMaxHeight,\r\n    buildMinWidth,\r\n    buildMinHeight,\r\n    buildHeight,\r\n    buildWidth,\r\n    set,\r\n    setCols,\r\n    setFlex,\r\n    setMar,\r\n    setMarTop,\r\n    setMarRight,\r\n    setMarBottom,\r\n    setMarLeft,\r\n    setMarX,\r\n    setMarY,\r\n    setPad,\r\n    setPadTop,\r\n    setPadRight,\r\n    setPadBottom,\r\n    setPadLeft,\r\n    setPadX,\r\n    setPadY,\r\n    setWidth,\r\n    setMinWidth,\r\n    setMaxWidth,\r\n    setHeight,\r\n    setMinHeight,\r\n    setMaxHeight,\r\n    buildPosition,\r\n    buildTop,\r\n    buildRight,\r\n    buildBottom,\r\n    buildLeft,\r\n    setPosition,\r\n    setTop,\r\n    setRight,\r\n    setBottom,\r\n    setLeft,\r\n    reset,\r\n    processors,\r\n  };\r\n\r\n  // Auto init process\r\n  if (config.searchOnInit) {\r\n    searchAndProcess(instance, context.document).then(() => {\r\n      if (instance.ready) instance.ready(instance);\r\n      if (config.observer) mainObserver(instance);\r\n    });\r\n  } else {\r\n    if (config.observer) mainObserver(instance);\r\n    if (instance.ready) instance.ready(instance);\r\n  }\r\n\r\n  return instance;\r\n};\r\n\r\nif (typeof window !== 'undefined' && typeof exports === 'undefined') {\r\n  window.layouter = layouter(window);\r\n}\r\n\r\nexport type { TDirectiveName, IProcessor } from './config/processors';\r\nexport type { IConfigUser } from './config/main';\r\nexport default layouter;\r\n"],"names":["breakpointsNums","objBps","propName","sizes","bp","a","b","index","createScopeStyles","withBridge","insertionType","node","context","stylesScope","nodeParent","bridge","ruleCss","scopesStylesBuilder","breakpoints","scope","scopes","breakpointsOrdered","bps","bpsOrdered","bpName","baseConfig","config","configNums","finalBps","setConfig","customCfg","contextConfig","getConfig","setStyles","className","value","updateConfig","userConfig","prepareParam","param","argParam","important","haveBp","bpSplited","regError","name","message","Node","err","calPercentage","n1","n2","cal","getScopeByclassName","nameClass","atIndex","intConfig","firstBp","bpUntil","fromBp","insertRules","objStyles","nodeScope","valClass","rules","flexProsAndValsBase","flexPropsAndValsSelfBase","flexPropsAndValsSelf","flexProsAndVals","flexAttrsSelf","percentageConverter","percentage","createStyles","directive","prefix","prop","processors","styles","shortNameClass","propAndVal","flexImportant","attrsFlexSelfs","nameAttrFlex","rule","direct","bp1","bp2","replaceList","nameCleaner","obj","newName","reItem","buildCss","data","buildCols","values","insertStyles","cols","bpCals","selectorName","propValue","paramPrepared","directBp","item","paramSplited","buildFlex","valFlex","propVal","bpNames","flexSplited","nameProp","valProp","valAlias","sufixBp","prevName","relativeMeasures","processedNumber","n","nProcessed","unit","buildAttr","paramProcessed","buildPad","valPads","buildPadTop","valPadTop","buildPadRight","valPadRight","buildPadBottom","valPadBottom","buildPadLeft","valPadLeft","buildMar","valMars","buildMarTop","valMarTop","buildMarRight","valMarRight","buildMarBottom","valMarBottom","buildMarLeft","valMarLeft","buildMaxWidth","valMaxWidth","buildMaxHeight","valMaxHeight","buildMinWidth","valMinWidth","buildMinHeight","valMinHeight","buildHeight","valHeight","buildWidth","valWidth","positionProsAndValsBase","positionProsAndVals","buildPosition","valPos","buildTop","val","buildRight","buildBottom","buildLeft","displayProsAndValsBase","displayProsAndVals","buildDisplay","valDisplay","buildXY","stylesA","stylesB","allStyles","style","buildPadX","valPadX","buildPadY","buildMarX","valMarX","buildMarY","valMarY","processorsBase","getParameters","params","attrs","paramNames","attr","build","rObj","addClasses","classesNames","overwrite","resolve","names","classesToAdd","obsNode","mutations","currentClasses","element","space","removeProp","removeProps","propNames","promises","removeAttr","eventReady","classes","event","set","parameters","reject","arrParams","toBuild","classesObj","directiveValues","directives","setFlex","flexValues","setCols","columns","setAttr","vals","setHeight","setMarBottom","setMarLeft","setMarRight","setMar","setMarTop","setMaxWidth","setMinHeight","setMinWidth","setPadBottom","setPadLeft","setPadRight","setPad","setPadTop","setWidth","setMaxHeight","setPosition","setTop","setRight","setBottom","setLeft","setterXY","setPadX","setPadY","setMarX","setMarY","reset","layouterClasses","restClass","nLength","classesName","nodesNotAccepted","searchAndProcess","layouter","nodes","setNodes","itemNode","mainObserver","props","obsBody","mutation","observerOptions","instance"],"mappings":"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"}