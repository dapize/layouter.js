{"version":3,"file":"layouter.umd.js","sources":["../src/helpers/breakpointsNums.ts","../src/helpers/createScopeStyles.ts","../src/helpers/scopesStylesBuilder.ts","../src/helpers/breakpointsOrdered.ts","../src/config/main.ts","../src/helpers/prepareParam.ts","../src/helpers/regError.ts","../src/helpers/calPercentage.ts","../src/helpers/getScopeByclassName.ts","../src/methods/insertRules.ts","../src/config/flex.ts","../src/helpers/percentageConverter.ts","../src/helpers/createStyles.ts","../src/helpers/nameCleaner.ts","../src/helpers/buildCss.ts","../src/methods/buildCols.ts","../src/methods/buildFlex.ts","../src/helpers/processedNumber.ts","../src/helpers/buildAttr.ts","../src/methods/buildPad.ts","../src/methods/buildPadTop.ts","../src/methods/buildPadRight.ts","../src/methods/buildPadBottom.ts","../src/methods/buildPadLeft.ts","../src/methods/buildMar.ts","../src/methods/buildMarTop.ts","../src/methods/buildMarRight.ts","../src/methods/buildMarBottom.ts","../src/methods/buildMarLeft.ts","../src/methods/buildMaxWidth.ts","../src/methods/buildMaxHeight.ts","../src/methods/buildMinWidth.ts","../src/methods/buildMinHeight.ts","../src/methods/buildHeight.ts","../src/methods/buildWidth.ts","../src/config/position.ts","../src/methods/buildPosition.ts","../src/methods/buildTop.ts","../src/methods/buildRight.ts","../src/methods/buildBottom.ts","../src/methods/buildLeft.ts","../src/config/display.ts","../src/methods/buildDisplay.ts","../src/helpers/buildXY.ts","../src/methods/buildPadX.ts","../src/methods/buildPadY.ts","../src/methods/buildMarX.ts","../src/methods/buildMarY.ts","../src/config/processors.ts","../src/methods/getParameters.ts","../src/methods/build.ts","../src/utils/addClasses.ts","../src/utils/removeAttr.ts","../src/helpers/eventReady.ts","../src/methods/set.ts","../src/helpers/directiveValues.ts","../src/methods/setFlex.ts","../src/methods/SetCols.ts","../src/helpers/setAttr.ts","../src/methods/setHeight.ts","../src/methods/setMarBottom.ts","../src/methods/setMarLeft.ts","../src/methods/setMarRight.ts","../src/methods/setMar.ts","../src/methods/setMarTop.ts","../src/methods/setMaxWidth.ts","../src/methods/setMinHeight.ts","../src/methods/setMinWidth.ts","../src/methods/setPadBottom.ts","../src/methods/setPadLeft.ts","../src/methods/setPadRight.ts","../src/methods/setPad.ts","../src/methods/setPadTop.ts","../src/methods/setWidth.ts","../src/methods/setMaxHeight.ts","../src/methods/setPosition.ts","../src/methods/setTop.ts","../src/methods/setRight.ts","../src/methods/setBottom.ts","../src/methods/setLeft.ts","../src/helpers/setterXY.ts","../src/methods/setPadX.ts","../src/methods/setPadY.ts","../src/methods/setMarX.ts","../src/methods/setMarY.ts","../src/methods/reset.ts","../src/helpers/searchAndProcess.ts","../src/helpers/mainObserver.ts","../src/layouter.ts"],"sourcesContent":["export type TNumProp = 'width' | 'cols';\r\n\r\nexport interface IBreakpoint {\r\n  alias: string;\r\n  width: number;\r\n}\r\n\r\nexport interface IBreakpoints {\r\n  [alias: string]: {\r\n    width: number;\r\n    cols: number;\r\n  };\r\n}\r\n\r\nexport interface IBreakpointObj {\r\n  [alias: string]: number;\r\n}\r\n\r\nconst breakpointsNums = (\r\n  objBps: IBreakpoints,\r\n  propName: TNumProp\r\n): IBreakpointObj => {\r\n  const sizes: IBreakpointObj = {};\r\n\r\n  if (propName === 'width') {\r\n    Object.keys(objBps)\r\n      .map((bp: string) => {\r\n        return {\r\n          alias: bp,\r\n          width: objBps[bp].width,\r\n        };\r\n      })\r\n      .sort((a: IBreakpoint, b: IBreakpoint) =>\r\n        a.width > b.width ? 1 : b.width > a.width ? -1 : 0\r\n      )\r\n      .forEach((bp: IBreakpoint, index: number) => {\r\n        sizes[bp.alias] = !index ? 0 : objBps[bp.alias][propName];\r\n      });\r\n  } else {\r\n    Object.keys(objBps).forEach((bp) => {\r\n      sizes[bp] = objBps[bp][propName];\r\n    });\r\n  }\r\n\r\n  return sizes;\r\n};\r\n\r\nexport default breakpointsNums;\r\n","export type TInsertion = 'before' | 'after' | 'append';\n\nexport interface ICreateScopeStyles {\n  bridge?: boolean;\n  bp: string;\n  insertionType: TInsertion;\n  node: HTMLElement;\n  context: Window & typeof globalThis;\n}\n\nexport interface IRCreateScopeStyles {\n  method:\n    | CSSStyleSheet\n    | {\n        insertRule: (ruleCss: string) => void;\n        rules: string[];\n      };\n  node: HTMLElement;\n}\n\nconst createScopeStyles = ({\n  bridge: withBridge,\n  bp,\n  insertionType,\n  node,\n  context,\n}: ICreateScopeStyles): IRCreateScopeStyles => {\n  let stylesScope = context.document.getElementById('layouter-' + bp);\n  if (!stylesScope) {\n    stylesScope = context.document.createElement('style');\n    stylesScope.appendChild(context.document.createTextNode('')); // WebKit hack :(\n    const nodeParent = node.parentNode as HTMLDivElement;\n    switch (insertionType) {\n      case 'before':\n        nodeParent.insertBefore(stylesScope, node);\n        break;\n      case 'after':\n        node.nextSibling\n          ? nodeParent.insertBefore(stylesScope, node.nextSibling)\n          : nodeParent.appendChild(stylesScope);\n        break;\n      case 'append':\n        node.appendChild(stylesScope);\n        break;\n    }\n    stylesScope.id = 'layouter-' + bp;\n  }\n\n  let bridge: IRCreateScopeStyles;\n  if (withBridge) {\n    bridge = {\n      method: (stylesScope as HTMLStyleElement).sheet as CSSStyleSheet,\n      node: stylesScope,\n    };\n  } else {\n    bridge = {\n      method: {\n        insertRule: (ruleCss: string) => {\n          (stylesScope as HTMLDivElement).appendChild(\n            context.document.createTextNode(ruleCss)\n          );\n        },\n        rules: [],\n      },\n      node: stylesScope,\n    };\n  }\n  return bridge;\n};\n\nexport default createScopeStyles;\n","import { IBreakpoints } from './breakpointsNums';\nimport createScopeStyles, { IRCreateScopeStyles } from './createScopeStyles';\n\nexport interface IScopes {\n  [name: string]: IRCreateScopeStyles;\n}\n\nexport interface IScopesStylesBuilder {\n  breakpoints: IBreakpoints;\n  bridge: boolean;\n  scope?: IScopes;\n  context: Window & typeof globalThis;\n}\n\nexport const scopesStylesBuilder = ({\n  breakpoints,\n  bridge,\n  scope,\n  context,\n}: IScopesStylesBuilder): IScopes => {\n  const scopes: IScopes = scope || {};\n  Object.keys(breakpoints).forEach((bp: string) => {\n    if (!scopes[bp]) {\n      scopes[bp] = createScopeStyles({\n        bridge: bridge,\n        bp,\n        insertionType: 'append',\n        node: context.document.body,\n        context,\n      });\n    }\n  });\n  return scopes;\n};\n","import { ICols } from '../config/main';\r\nimport { IBreakpoints } from './breakpointsNums';\r\n\r\nconst breakpointsOrdered = (bps: IBreakpoints, sizes: ICols) => {\r\n  const bpsOrdered: IBreakpoints = {};\r\n  Object.keys(sizes).forEach((bpName) => (bpsOrdered[bpName] = bps[bpName]));\r\n  return bpsOrdered;\r\n};\r\n\r\nexport default breakpointsOrdered;\r\n","import { ILayouter } from './../layouter';\nimport breakpointsNums, { IBreakpoints } from '../helpers/breakpointsNums';\nimport { IScopes, scopesStylesBuilder } from '../helpers/scopesStylesBuilder';\nimport breakpointsOrdered from '../helpers/breakpointsOrdered';\nimport { version } from '../../package.json';\n\nexport interface ICols {\n  [colAlias: string]: number;\n}\n\nexport interface IConfigUser {\n  prefix: string;\n  breakpoints: IBreakpoints;\n  bridge: boolean;\n  debug?: boolean;\n  ready?: (instance: ILayouter) => void;\n}\n\ninterface IConfigNumsIn {\n  bps: IBreakpoints;\n  bridge: boolean;\n  scope?: IScopes;\n  context: Window & typeof globalThis;\n}\n\ninterface IConfigNumsOut {\n  scope: IScopes;\n  cols: ICols;\n  sizes: ICols;\n  breakpoints: IBreakpoints;\n}\n\nexport interface IConfig\n  extends Omit<IConfigUser, 'breakpoints'>,\n    IConfigNumsOut {\n  context: Window & typeof globalThis;\n  styles: {\n    [className: string]: string;\n  };\n  version: string;\n}\n\ndeclare global {\n  interface Window {\n    layouterConfig: Partial<IConfigUser>;\n  }\n}\n\nconst breakpointsInit: IBreakpoints = {\n  xs: {\n    width: 360,\n    cols: 15,\n  },\n  sm: {\n    width: 600,\n    cols: 25,\n  },\n  md: {\n    width: 900,\n    cols: 31,\n  },\n  lg: {\n    width: 1200,\n    cols: 41,\n  },\n  xlg: {\n    width: 1536,\n    cols: 51,\n  },\n};\n\nexport let baseConfig: IConfigUser = {\n  prefix: '',\n  breakpoints: breakpointsInit,\n  bridge: true,\n  debug: true,\n};\n\nlet config: IConfig;\n\nconst configNums = ({\n  bps,\n  bridge,\n  scope,\n  context,\n}: IConfigNumsIn): IConfigNumsOut => {\n  const sizes = breakpointsNums(bps, 'width');\n  const finalBps = breakpointsOrdered(bps, sizes);\n  return {\n    sizes,\n    cols: breakpointsNums(bps, 'cols'),\n    scope: scopesStylesBuilder({\n      breakpoints: finalBps,\n      bridge,\n      scope: scope,\n      context,\n    }),\n    breakpoints: finalBps,\n  };\n};\n\nexport const setConfig = (\n  context: Window & typeof globalThis,\n  customCfg: Partial<IConfigUser> = {}\n): IConfig => {\n  const contextConfig = context.layouterConfig || {};\n\n  baseConfig = {\n    ...baseConfig,\n    ...customCfg,\n    ...contextConfig,\n  };\n\n  config = {\n    context,\n    ...baseConfig,\n    ...configNums({\n      bps: baseConfig.breakpoints,\n      bridge: baseConfig.bridge,\n      context,\n    }),\n    styles: {},\n    version,\n  };\n\n  return config;\n};\n\nconst getConfig = (): IConfig => {\n  return config;\n};\n\nexport const setStyles = (className: string, value: string) => {\n  config.styles[className] = value;\n};\n\nexport const updateConfig = (userConfig: Partial<IConfigUser>): IConfig => {\n  config = {\n    ...config,\n    ...userConfig,\n  };\n\n  if (userConfig.breakpoints) {\n    config = {\n      ...config,\n      ...configNums({\n        bps: config.breakpoints,\n        bridge: config.bridge,\n        scope: config.scope,\n        context: config.context,\n      }),\n    };\n  }\n\n  return config;\n};\n\nexport default getConfig;\n","import getConfig from '../config/main';\n\nexport interface IPrepareParamObj {\n  widthBp: boolean;\n  numbers: string;\n  breakPoints: string;\n  important: boolean;\n}\n\nconst prepareParam = (param: string): IPrepareParamObj => {\n  let bp: string;\n  let argParam = param;\n  let important = false;\n  const haveBp = argParam.includes('@');\n  if (haveBp) {\n    const bpSplited = argParam.split('@');\n    argParam = bpSplited[0];\n    bp = bpSplited[1];\n  } else {\n    const config = getConfig();\n    bp = Object.keys(config.breakpoints)[0];\n  }\n\n  if (param.includes('!')) {\n    important = true;\n    bp = bp.replace(/!/g, '');\n    argParam = argParam.replace(/!/g, '');\n  }\n\n  return {\n    widthBp: haveBp,\n    numbers: argParam,\n    breakPoints: bp,\n    important,\n  };\n};\n\nexport default prepareParam;\n","import config from '../config/main';\r\n\r\nconst regError = (\r\n  name: string,\r\n  message: string,\r\n  Node?: Element | HTMLElement\r\n): Error => {\r\n  const err = new Error();\r\n  err.name = name;\r\n  err.message = message;\r\n  const intConfig = config();\r\n  if (intConfig.debug) {\r\n    console.error(err);\r\n    if (Node) console.log(Node);\r\n  }\r\n  return err;\r\n};\r\n\r\nexport default regError;\r\n","const calPercentage = (n1: number, n2: number): string => {\r\n  const cal = (n1 * 100) / n2;\r\n  const haveDecimal = cal - Math.floor(cal) !== 0;\r\n  const result = haveDecimal ? cal.toFixed(3) : cal;\r\n  return result + '%';\r\n};\r\n\r\nexport default calPercentage;\r\n","import config from '../config/main';\nimport createScopeStyles, { IRCreateScopeStyles } from './createScopeStyles';\n\nconst getScopeByclassName = (className: string): IRCreateScopeStyles => {\n  const nameClass = className.replace(/!/g, '');\n  const atIndex = nameClass.indexOf('@');\n  const intConfig = config();\n  const scope = intConfig.scope;\n  const bridge = intConfig.bridge;\n  const context = intConfig.context;\n\n  // Haven´t a BP designed\n  if (atIndex === -1) {\n    const firstBp = Object.keys(intConfig.breakpoints)[0];\n    return scope[firstBp as string];\n  }\n\n  // Have a BP designed, a normal BP.\n  const bp = nameClass.substring(atIndex + 1);\n  if (!bp.includes('-')) return scope[bp]; // A simple BP (13/15@lg), not compound (like this: 13/15@sm-md).\n\n  // A BP until. Example 13/15@-md\n  if (bp.substring(0, 1) === '-') {\n    if (scope[bp]) return scope[bp]; // exists the Scope.\n    const bpUntil = bp.substring(1);\n    scope[bp] = createScopeStyles({\n      bridge: bridge,\n      bp,\n      insertionType: 'before',\n      node: scope[bpUntil].node,\n      context,\n    });\n    return scope[bp]; // returning a new scope created\n  }\n\n  // A BP from and until (a BP compound). Example: Example 13/15@sm-md\n  if (scope[bp]) {\n    return scope[bp]; // exists the Scope.\n  }\n\n  const fromBp = bp.split('-')[0];\n  scope[bp] = createScopeStyles({\n    bridge: bridge,\n    bp,\n    insertionType: 'after',\n    node: scope[fromBp].node,\n    context,\n  });\n\n  return scope[bp]; // returning a new scope compounded created\n};\n\nexport default getScopeByclassName;\n","import config, { setStyles } from '../config/main';\nimport { IStyles } from '../helpers/createStyles';\nimport getScopeByclassName from '../helpers/getScopeByclassName';\n\nconst insertRules = (objStyles: IStyles) => {\n  const intConfig = config();\n\n  for (const className in objStyles) {\n    if (!intConfig.styles[className]) {\n      const nodeScope = getScopeByclassName(className);\n      const valClass = objStyles[className];\n      const rules = nodeScope.method.rules;\n      nodeScope.method.insertRule(valClass, rules ? rules.length : 0);\n      setStyles(className, valClass); // saving in styles vault\n    }\n  }\n};\n\nexport default insertRules;\n","const flexProsAndValsBase = {\r\n  jc: {\r\n    ruleCss: 'justify-content',\r\n    classPrefix: 'jc',\r\n  },\r\n  ai: {\r\n    ruleCss: 'align-items',\r\n    classPrefix: 'ai',\r\n  },\r\n  ce: {\r\n    ruleCss: 'center',\r\n    classPrefix: 'ce',\r\n  },\r\n  fs: {\r\n    ruleCss: 'flex-start',\r\n    classPrefix: 'fs',\r\n  },\r\n  fe: {\r\n    ruleCss: 'flex-end',\r\n    classPrefix: 'fe',\r\n  },\r\n  sb: {\r\n    ruleCss: 'space-between',\r\n    classPrefix: 'sb',\r\n  },\r\n  sa: {\r\n    ruleCss: 'space-around',\r\n    classPrefix: 'sa',\r\n  },\r\n  fw: {\r\n    ruleCss: 'flex-wrap',\r\n    classPrefix: 'fw',\r\n  },\r\n  nw: {\r\n    ruleCss: 'nowrap',\r\n    classPrefix: 'nw',\r\n  },\r\n  w: {\r\n    ruleCss: 'wrap',\r\n    classPrefix: 'w',\r\n  },\r\n  wr: {\r\n    ruleCss: 'wrap-reverse',\r\n    classPrefix: 'wr',\r\n  },\r\n  fd: {\r\n    ruleCss: 'flex-direction',\r\n    classPrefix: 'fd',\r\n  },\r\n  r: {\r\n    ruleCss: 'row',\r\n    classPrefix: 'r',\r\n  },\r\n  rr: {\r\n    ruleCss: 'row-reverse',\r\n    classPrefix: 'rr',\r\n  },\r\n  co: {\r\n    ruleCss: 'column',\r\n    classPrefix: 'co',\r\n  },\r\n  cor: {\r\n    ruleCss: 'column-reverse',\r\n    classPrefix: 'co',\r\n  },\r\n  au: {\r\n    ruleCss: 'auto',\r\n    classPrefix: 'au',\r\n  },\r\n  st: {\r\n    ruleCss: 'stretch',\r\n    classPrefix: 'st',\r\n  },\r\n  bl: {\r\n    ruleCss: 'baseline',\r\n    classPrefix: 'bl',\r\n  },\r\n  in: {\r\n    ruleCss: 'initial',\r\n    classPrefix: 'in',\r\n  },\r\n  ih: {\r\n    ruleCss: 'inherit',\r\n    classPrefix: 'ih',\r\n  },\r\n};\r\n\r\nconst flexPropsAndValsSelfBase = {\r\n  fg: {\r\n    ruleCss: 'flex-grow',\r\n    classPrefix: 'fg',\r\n  },\r\n  fh: {\r\n    ruleCss: 'flex-shrink',\r\n    classPrefix: 'fh',\r\n  },\r\n  as: {\r\n    ruleCss: 'align-self',\r\n    classPrefix: 'as',\r\n  },\r\n  or: {\r\n    ruleCss: 'order',\r\n    classPrefix: 'or',\r\n  },\r\n};\r\n\r\nconst flexPropsAndValsSelf = {\r\n  ...flexPropsAndValsSelfBase,\r\n  'flex-grow': flexPropsAndValsSelfBase.fg,\r\n  'flex-shrink': flexPropsAndValsSelfBase.fh,\r\n  'align-self': flexPropsAndValsSelfBase.as,\r\n  order: flexPropsAndValsSelfBase.or,\r\n};\r\n\r\nexport const flexProsAndVals = {\r\n  ...flexProsAndValsBase,\r\n  ...flexPropsAndValsSelf,\r\n  'justify-content': flexProsAndValsBase.jc,\r\n  'align-items': flexProsAndValsBase.ai,\r\n  center: flexProsAndValsBase.ce,\r\n  'flex-start': flexProsAndValsBase.fs,\r\n  'flex-end': flexProsAndValsBase.fe,\r\n  'space-between': flexProsAndValsBase.sb,\r\n  'space-around': flexProsAndValsBase.fs,\r\n  'flex-wrap': flexProsAndValsBase.fw,\r\n  nowrap: flexProsAndValsBase.nw,\r\n  w: flexProsAndValsBase.w,\r\n  'wrap-reverse': flexProsAndValsBase.wr,\r\n  'flex-direction': flexProsAndValsBase.fd,\r\n  row: flexProsAndValsBase.r,\r\n  'row-reverse': flexProsAndValsBase.rr,\r\n  column: flexProsAndValsBase.co,\r\n  'column-reverse': flexProsAndValsBase.cor,\r\n  auto: flexProsAndValsBase.au,\r\n  stretch: flexProsAndValsBase.st,\r\n  baseline: flexProsAndValsBase.bl,\r\n  initial: flexProsAndValsBase.in,\r\n  inherit: flexProsAndValsBase.ih,\r\n};\r\n\r\nexport const flexAttrsSelf = Object.keys(flexPropsAndValsSelf);\r\n","const percentageConverter = (percentage: string) => {\r\n  return '0¯' + percentage.replace('%', '');\r\n};\r\n\r\nexport default percentageConverter;\r\n","import { flexAttrsSelf } from '../config/flex';\r\nimport config from '../config/main';\r\nimport { processors, TDirectiveName } from '../config/processors';\r\nimport { IBpCals } from './buildCss';\r\nimport percentageConverter from './percentageConverter';\r\n\r\nexport interface IStyles {\r\n  [name: string]: string;\r\n}\r\n\r\nconst createStyles = (directive: TDirectiveName, bps: IBpCals): IStyles => {\r\n  const intConfig = config();\r\n  const sizes = intConfig.sizes;\r\n  const prefix = intConfig.prefix;\r\n  const prop = processors[directive].ruleCss;\r\n  const styles: IStyles = {};\r\n\r\n  Object.keys(bps).forEach((bp) => {\r\n    // preparing the className\r\n    const shortNameClass = bps[bp].name;\r\n\r\n    // just if have a percentage\r\n    let nameClass = shortNameClass;\r\n    if (shortNameClass.includes('%')) {\r\n      nameClass = shortNameClass.replace(\r\n        shortNameClass,\r\n        percentageConverter(shortNameClass)\r\n      );\r\n    }\r\n\r\n    const finalPrefix = prefix ? prefix + '-' : '';\r\n    nameClass =\r\n      finalPrefix +\r\n      processors[directive].classPrefix +\r\n      '-' +\r\n      nameClass\r\n        .replace(/\\//g, '\\\\/')\r\n        .replace(/:/g, '\\\\:')\r\n        .replace('@', '\\\\@')\r\n        .split('.')\r\n        .join('_');\r\n\r\n    if (!intConfig.styles[nameClass]) {\r\n      // Property and value\r\n      let propAndVal;\r\n      if (directive === 'flex') {\r\n        propAndVal = bps[bp].value;\r\n        const flexImportant = shortNameClass.includes('!')\r\n          ? ';display:flex !important;'\r\n          : ';display:flex;';\r\n\r\n        // Searching a flex self inside. ['as' for 'align-self']\r\n        const attrsFlexSelfs = flexAttrsSelf.filter((nameAttrFlex) =>\r\n          shortNameClass.includes(nameAttrFlex + ':')\r\n        );\r\n        if (attrsFlexSelfs.length) {\r\n          // if the items number of flex selft (+1) is diferrent so exists other flex attribute. Example: as:ce jc:ce\r\n          if (attrsFlexSelfs.length + 1 !== shortNameClass.split(':').length) {\r\n            propAndVal += flexImportant;\r\n          }\r\n        } else {\r\n          propAndVal += flexImportant;\r\n        }\r\n      } else {\r\n        propAndVal = prop + ':' + bps[bp].value;\r\n      }\r\n\r\n      let rule = '@media screen and ';\r\n      let direct = false;\r\n      if (!bp.includes('-')) {\r\n        // no tiene until\r\n        if (sizes[bp]) {\r\n          rule += '(min-width: ' + sizes[bp] + 'px)';\r\n        } else {\r\n          rule = '.' + nameClass.replace(/!/g, '\\\\!') + '{' + propAndVal + '}';\r\n          direct = true;\r\n        }\r\n      } else {\r\n        const bpSplited = bp.split('-');\r\n        const bp1 = bpSplited[0];\r\n        if (bp1) rule += '(min-width: ' + sizes[bp1] + 'px) and ';\r\n        const bp2 = bpSplited[1];\r\n        rule += '(max-width: ' + (sizes[bp2] - 1) + 'px)';\r\n      }\r\n\r\n      if (!direct) {\r\n        rule += '{.' + nameClass.replace(/!/g, '\\\\!') + '{' + propAndVal + '}}';\r\n      }\r\n\r\n      styles[nameClass] = rule;\r\n    } else {\r\n      styles[nameClass] = intConfig.styles[nameClass];\r\n    }\r\n  });\r\n  return styles;\r\n};\r\n\r\nexport default createStyles;\r\n","import { IStyles } from './createStyles';\n\nconst replaceList = [\n  ['/', ''],\n  ['\\\\', '/'],\n  ['/:', ':'],\n  ['\\\\:', ':'],\n  ['\\\\@', '@'],\n  ['/@', '@'],\n];\n\nconst nameCleaner = (objStyles: IStyles): IStyles => {\n  const obj: IStyles = {};\n  for (const name in objStyles) {\n    let newName = name;\n    replaceList.forEach((reItem) => {\n      newName = newName.split(reItem[0]).join(reItem[1]);\n    });\n    obj[newName] = objStyles[name];\n  }\n  return obj;\n};\n\nexport default nameCleaner;\n","import { TDirectiveName } from '../config/processors';\nimport insertRules from '../methods/insertRules';\nimport createStyles, { IStyles } from './createStyles';\nimport nameCleaner from './nameCleaner';\n\nexport interface IRBuildStyles {\n  name: string;\n  value: string;\n}\n\nexport interface IBpCals {\n  [bpName: string]: IRBuildStyles;\n}\n\nexport interface IBuildCss {\n  type: TDirectiveName;\n  bps: IBpCals;\n  deep: boolean;\n}\n\nconst buildCss = (data: IBuildCss): IStyles => {\n  // creating the styles\n  const objStyles = createStyles(data.type, data.bps);\n\n  // Inserting CSS rules\n  if (data.deep) {\n    insertRules(objStyles);\n  }\n\n  // name classes cleaner\n  return nameCleaner(objStyles);\n};\n\nexport default buildCss;\n","import prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\nimport calPercentage from '../helpers/calPercentage';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport getConfig from '../config/main';\r\nimport { IStyles } from '../helpers/createStyles';\r\n\r\nconst buildCols = (values: string, insertStyles = false): IStyles | Error => {\r\n  let cols: number[];\r\n  let bp;\r\n  const bpCals: IBpCals = {};\r\n  const config = getConfig();\r\n\r\n  // Getting numbers\r\n  let selectorName, propValue, paramPrepared;\r\n  const directBp = Object.keys(config.breakpoints)[0];\r\n\r\n  let err: boolean | Error = false;\r\n\r\n  for (const item of values.split(' ')) {\r\n    let param = item;\r\n    selectorName = param;\r\n    paramPrepared = prepareParam(param);\r\n    bp = paramPrepared.breakPoints;\r\n    param = paramPrepared.numbers;\r\n\r\n    if (param.includes('/')) {\r\n      const paramSplited = param.split('/');\r\n      cols = [Number(paramSplited[0]), Number(paramSplited[1])];\r\n    } else {\r\n      if (paramPrepared.widthBp) {\r\n        if (bp.includes('-')) {\r\n          err = regError(\r\n            'SyntaxError',\r\n            \"You can't determine a 'until breakpoint' when use the explicit columns max: \" +\r\n              values\r\n          );\r\n          break;\r\n        } else {\r\n          cols = [Number(param), config.cols[bp] as number];\r\n        }\r\n      } else {\r\n        cols = [Number(param), config.cols[directBp] as number];\r\n      }\r\n    }\r\n\r\n    propValue = calPercentage(cols[0], cols[1]);\r\n    if (paramPrepared.important) propValue += ' !important';\r\n\r\n    bpCals[bp] = {\r\n      name: selectorName,\r\n      value: propValue,\r\n    };\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'cols',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildCols;\r\n","import { flexAttrsSelf, flexProsAndVals } from '../config/flex';\r\nimport getConfig from '../config/main';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\n\r\nconst buildFlex = (valFlex: string, insertStyles = false): IStyles | Error => {\r\n  const bpCals: IBpCals = {};\r\n\r\n  // Getting numbers\r\n  let err: boolean | Error = false;\r\n  const config = getConfig();\r\n  const firstBp = Object.keys(config.breakpoints)[0];\r\n\r\n  for (const param of valFlex.split(' ')) {\r\n    let propVal;\r\n    const paramPrepared = prepareParam(param);\r\n    const bpNames = paramPrepared.breakPoints;\r\n    const flexSplited = paramPrepared.numbers.split(':');\r\n    const nameProp = flexSplited[0] as keyof typeof flexProsAndVals; // 'fc' o 'or'\r\n    const valProp = flexSplited[1] as keyof typeof flexProsAndVals; // 'ce' o '1'\r\n    let valAlias: string;\r\n\r\n    if (!flexAttrsSelf.includes(nameProp)) {\r\n      if (!flexProsAndVals[nameProp]) {\r\n        err = regError(\r\n          'Non-existent Alias',\r\n          \"Don't exists the alias '\" + nameProp + \"' in Flex vault.\"\r\n        );\r\n        break;\r\n      }\r\n      if (!flexProsAndVals[valProp]) {\r\n        err = regError(\r\n          'Non-existent Alias',\r\n          \"Don't exists the alias '\" + valProp + \"' in Flex vault.\"\r\n        );\r\n        break;\r\n      }\r\n      propVal =\r\n        flexProsAndVals[nameProp].ruleCss +\r\n        ':' +\r\n        flexProsAndVals[valProp].ruleCss;\r\n      valAlias = flexProsAndVals[valProp].classPrefix;\r\n    } else {\r\n      propVal = flexProsAndVals[nameProp].ruleCss + ':' + valProp;\r\n      valAlias = valProp;\r\n    }\r\n\r\n    let sufixBp = bpNames === firstBp ? '' : '@' + bpNames;\r\n    if (paramPrepared.important) {\r\n      propVal += ' !important';\r\n      sufixBp += '!';\r\n    }\r\n\r\n    let selectorName =\r\n      flexProsAndVals[nameProp].classPrefix + ':' + valAlias + sufixBp;\r\n\r\n    if (!bpCals[bpNames]) {\r\n      bpCals[bpNames] = {\r\n        name: selectorName,\r\n        value: propVal,\r\n      };\r\n    } else {\r\n      if (selectorName.includes('@')) selectorName = selectorName.split('@')[0]; // just here because will be contact with the other className\r\n      let prevName = bpCals[bpNames].name.split('@')[0];\r\n      if (bpCals[bpNames].name.includes('!') && !prevName.includes('!'))\r\n        prevName += '!';\r\n\r\n      bpCals[bpNames].name = prevName + '-' + selectorName + sufixBp;\r\n      bpCals[bpNames].value += ';' + propVal;\r\n    }\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'flex',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildFlex;\r\n","import calPercentage from './calPercentage';\n\nconst relativeMeasures = ['%', 'rem', 'em', 'ex', 'vw', 'vh', 'pt', 'cm', 'pc'];\n\nconst processedNumber = (n: string) => {\n  let nProcessed;\n  if (n.includes('/')) {\n    nProcessed = n.split('/');\n    nProcessed = calPercentage(\n      parseFloat(nProcessed[0]),\n      parseFloat(nProcessed[1])\n    );\n  } else if (n === 'auto') {\n    nProcessed = 'auto';\n  } else {\n    const relativeUnits = relativeMeasures.filter((unit) => {\n      return n.includes(unit);\n    });\n    if (relativeUnits.length) {\n      nProcessed = n;\n    } else {\n      nProcessed = n === '0' ? n : n + 'px';\n    }\n  }\n  return nProcessed;\n};\n\nexport default processedNumber;\n","import { TDirectiveName } from '../config/processors';\nimport buildCss, { IBpCals } from './buildCss';\nimport { IStyles } from './createStyles';\nimport prepareParam from './prepareParam';\nimport processedNumber from './processedNumber';\n\nconst buildAttr = (\n  values: string,\n  directive: TDirectiveName,\n  insertStyles = false\n): IStyles => {\n  const bpCals: IBpCals = {};\n\n  values.split(' ').forEach((param) => {\n    const paramProcessed = prepareParam(param);\n    const bpNames = paramProcessed.breakPoints;\n\n    // processing number values\n    let propValue = paramProcessed.numbers\n      .split('-')\n      .map((n) => processedNumber(n))\n      .join(' ');\n    if (paramProcessed.important) propValue += ' !important';\n    bpCals[bpNames] = {\n      name: param,\n      value: propValue,\n    };\n  });\n\n  // Building the classNames and the styles to use.\n  return buildCss({\n    type: directive,\n    bps: bpCals,\n    deep: insertStyles,\n  });\n};\n\nexport default buildAttr;\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPad = (valPads: string, insertStyles = false) => {\r\n  return buildAttr(valPads, 'pad', insertStyles);\r\n};\r\n\r\nexport default buildPad;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadTop = (valPadTop: string, insertStyles = false) => {\r\n  return buildAttr(valPadTop, 'padt', insertStyles);\r\n};\r\n\r\nexport default buildPadTop;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadRight = (valPadRight: string, insertStyles = false) => {\r\n  return buildAttr(valPadRight, 'padr', insertStyles);\r\n};\r\n\r\nexport default buildPadRight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadBottom = (valPadBottom: string, insertStyles = false) => {\r\n  return buildAttr(valPadBottom, 'padb', insertStyles);\r\n};\r\n\r\nexport default buildPadBottom;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildPadLeft = (valPadLeft: string, insertStyles = false) => {\r\n  return buildAttr(valPadLeft, 'padl', insertStyles);\r\n};\r\n\r\nexport default buildPadLeft;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMar = (valMars: string, insertStyles = false) => {\r\n  return buildAttr(valMars, 'mar', insertStyles);\r\n};\r\n\r\nexport default buildMar;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarTop = (valMarTop: string, insertStyles = false) => {\r\n  return buildAttr(valMarTop, 'mart', insertStyles);\r\n};\r\n\r\nexport default buildMarTop;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarRight = (valMarRight: string, insertStyles = false) => {\r\n  return buildAttr(valMarRight, 'marr', insertStyles);\r\n};\r\n\r\nexport default buildMarRight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarBottom = (valMarBottom: string, insertStyles = false) => {\r\n  return buildAttr(valMarBottom, 'marb', insertStyles);\r\n};\r\n\r\nexport default buildMarBottom;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMarLeft = (valMarLeft: string, insertStyles = false) => {\r\n  return buildAttr(valMarLeft, 'marl', insertStyles);\r\n};\r\n\r\nexport default buildMarLeft;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMaxWidth = (valMaxWidth: string, insertStyles = false) => {\r\n  return buildAttr(valMaxWidth, 'mxw', insertStyles);\r\n};\r\n\r\nexport default buildMaxWidth;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMaxHeight = (valMaxHeight: string, insertStyles = false) => {\r\n  return buildAttr(valMaxHeight, 'mxh', insertStyles);\r\n};\r\n\r\nexport default buildMaxHeight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMinWidth = (valMinWidth: string, insertStyles = false) => {\r\n  return buildAttr(valMinWidth, 'miw', insertStyles);\r\n};\r\n\r\nexport default buildMinWidth;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildMinHeight = (valMinHeight: string, insertStyles = false) => {\r\n  return buildAttr(valMinHeight, 'mih', insertStyles);\r\n};\r\n\r\nexport default buildMinHeight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildHeight = (valHeight: string, insertStyles = false) => {\r\n  return buildAttr(valHeight, 'hgt', insertStyles);\r\n};\r\n\r\nexport default buildHeight;\r\n","import buildAttr from '../helpers/buildAttr';\r\n\r\nconst buildWidth = (valWidth: string, insertStyles = false) => {\r\n  return buildAttr(valWidth, 'wdh', insertStyles);\r\n};\r\n\r\nexport default buildWidth;\r\n","const positionProsAndValsBase = {\r\n  st: {\r\n    ruleCss: 'static',\r\n    classPrefix: 'st',\r\n  },\r\n  ab: {\r\n    ruleCss: 'absolute',\r\n    classPrefix: 'ab',\r\n  },\r\n  fi: {\r\n    ruleCss: 'fixed',\r\n    classPrefix: 'fi',\r\n  },\r\n  re: {\r\n    ruleCss: 'relative',\r\n    classPrefix: 're',\r\n  },\r\n  si: {\r\n    ruleCss: 'sticky',\r\n    classPrefix: 'si',\r\n  },\r\n  in: {\r\n    ruleCss: 'initial',\r\n    classPrefix: 'in',\r\n  },\r\n  ih: {\r\n    ruleCss: 'inherit',\r\n    classPrefix: 'ih',\r\n  },\r\n};\r\n\r\nexport const positionProsAndVals = {\r\n  ...positionProsAndValsBase,\r\n  static: positionProsAndValsBase.st,\r\n  absolute: positionProsAndValsBase.ab,\r\n  fixed: positionProsAndValsBase.fi,\r\n  relative: positionProsAndValsBase.re,\r\n  sticky: positionProsAndValsBase.si,\r\n  initial: positionProsAndValsBase.in,\r\n  inherit: positionProsAndValsBase.ih,\r\n};\r\n","import getConfig from '../config/main';\r\nimport { positionProsAndVals } from '../config/position';\r\n\r\nimport buildCss, { IBpCals } from '../helpers/buildCss';\r\nimport { IStyles } from '../helpers/createStyles';\r\nimport prepareParam from '../helpers/prepareParam';\r\nimport regError from '../helpers/regError';\r\n\r\nconst buildPosition = (\r\n  valPos: string,\r\n  insertStyles = false\r\n): IStyles | Error => {\r\n  const bpCals: IBpCals = {};\r\n\r\n  // Getting numbers\r\n  let err: boolean | Error = false;\r\n  const config = getConfig();\r\n  const firstBp = Object.keys(config.breakpoints)[0];\r\n\r\n  for (const param of valPos.split(' ')) {\r\n    let propVal;\r\n    const paramPrepared = prepareParam(param);\r\n    const bpNames = paramPrepared.breakPoints;\r\n    const nameProp = paramPrepared.numbers as keyof typeof positionProsAndVals;\r\n\r\n    if (!positionProsAndVals[nameProp]) {\r\n      err = regError(\r\n        'Non-existent Alias',\r\n        \"Don't exists the alias '\" + nameProp + \"' in Position vault.\"\r\n      );\r\n      break;\r\n    }\r\n\r\n    propVal = positionProsAndVals[nameProp].ruleCss;\r\n    const className = positionProsAndVals[nameProp].classPrefix;\r\n\r\n    let sufixBp = bpNames === firstBp ? '' : '@' + bpNames;\r\n\r\n    if (paramPrepared.important) {\r\n      propVal += ' !important';\r\n      sufixBp += '!';\r\n    }\r\n\r\n    bpCals[bpNames] = {\r\n      name: className + sufixBp,\r\n      value: propVal,\r\n    };\r\n  }\r\n\r\n  if (err) return err;\r\n\r\n  // Building the classNames and the styles to use.\r\n  return buildCss({\r\n    type: 'pos',\r\n    bps: bpCals,\r\n    deep: insertStyles,\r\n  });\r\n};\r\n\r\nexport default buildPosition;\r\n","import buildAttr from '../helpers/buildAttr';\n\nconst buildTop = (val: string, insertStyles = false) => {\n  return buildAttr(val, 't', insertStyles);\n};\n\nexport default buildTop;\n","import buildAttr from '../helpers/buildAttr';\n\nconst buildRight = (val: string, insertStyles = false) => {\n  return buildAttr(val, 'r', insertStyles);\n};\n\nexport default buildRight;\n","import buildAttr from '../helpers/buildAttr';\r\nimport { IStyles } from '../helpers/createStyles';\r\n\r\nconst buildBottom = (val: string, insertStyles = false): IStyles => {\r\n  return buildAttr(val, 'b', insertStyles);\r\n};\r\n\r\nexport default buildBottom;\r\n","import buildAttr from '../helpers/buildAttr';\n\nconst buildLeft = (val: string, insertStyles = false) => {\n  return buildAttr(val, 'l', insertStyles);\n};\n\nexport default buildLeft;\n","const displayProsAndValsBase = {\n  bl: {\n    ruleCss: 'block',\n    classPrefix: 'bl',\n  },\n  il: {\n    ruleCss: 'inline',\n    classPrefix: 'il',\n  },\n  ib: {\n    ruleCss: 'inline-block',\n    classPrefix: 'ib',\n  },\n  fx: {\n    ruleCss: 'flex',\n    classPrefix: 'fx',\n  },\n  if: {\n    ruleCss: 'inline-flex',\n    classPrefix: 'if',\n  },\n  no: {\n    ruleCss: 'none',\n    classPrefix: 'no',\n  },\n  in: {\n    ruleCss: 'initial',\n    classPrefix: 'in',\n  },\n  ih: {\n    ruleCss: 'inherit',\n    classPrefix: 'ih',\n  },\n};\n\nexport const displayProsAndVals = {\n  ...displayProsAndValsBase,\n  block: displayProsAndValsBase.bl,\n  inline: displayProsAndValsBase.il,\n  'inline-block': displayProsAndValsBase.ib,\n  flex: displayProsAndValsBase.fx,\n  'inline-flex': displayProsAndValsBase.if,\n  none: displayProsAndValsBase.no,\n  initial: displayProsAndValsBase.in,\n  inherit: displayProsAndValsBase.ih,\n};\n","import getConfig from '../config/main';\nimport { displayProsAndVals } from '../config/display';\n\nimport buildCss, { IBpCals } from '../helpers/buildCss';\nimport { IStyles } from '../helpers/createStyles';\nimport prepareParam from '../helpers/prepareParam';\nimport regError from '../helpers/regError';\n\nconst buildDisplay = (\n  valDisplay: string,\n  insertStyles = false\n): IStyles | Error => {\n  const bpCals: IBpCals = {};\n\n  // Getting numbers\n  let err: boolean | Error = false;\n  const config = getConfig();\n  const firstBp = Object.keys(config.breakpoints)[0];\n\n  for (const param of valDisplay.split(' ')) {\n    let propVal;\n    const paramPrepared = prepareParam(param);\n    const bpNames = paramPrepared.breakPoints;\n    const nameProp = paramPrepared.numbers as keyof typeof displayProsAndVals;\n\n    if (!displayProsAndVals[nameProp]) {\n      err = regError(\n        'Non-existent Alias',\n        \"Don't exists the alias '\" + nameProp + \"' in display vault.\"\n      );\n      break;\n    }\n\n    propVal = displayProsAndVals[nameProp].ruleCss;\n    const className = displayProsAndVals[nameProp].classPrefix;\n\n    let sufixBp = bpNames === firstBp ? '' : '@' + bpNames;\n\n    if (paramPrepared.important) {\n      propVal += ' !important';\n      sufixBp += '!';\n    }\n\n    bpCals[bpNames] = {\n      name: className + sufixBp,\n      value: propVal,\n    };\n  }\n\n  if (err) return err;\n\n  // Building the classNames and the styles to use.\n  return buildCss({\n    type: 'd',\n    bps: bpCals,\n    deep: insertStyles,\n  });\n};\n\nexport default buildDisplay;\n","import { IStyles } from './createStyles';\n\nexport interface IBuildXY {\n  values: string;\n  builderA: (valPadA: string, insertStyles: boolean) => IStyles;\n  builderB: (valPadB: string, insertStyles: boolean) => IStyles;\n  insertStyles: boolean;\n}\n\nconst buildXY = (data: IBuildXY): IStyles => {\n  const stylesA = data.builderA(data.values, data.insertStyles);\n  const stylesB = data.builderB(data.values, data.insertStyles);\n  const allStyles: IStyles = {};\n  for (const style in stylesA) {\n    allStyles[style] = stylesA[style];\n  }\n  for (const style in stylesB) {\n    allStyles[style] = stylesB[style];\n  }\n  return allStyles;\n};\n\nexport default buildXY;\n","import buildXY from '../helpers/buildXY';\nimport { IStyles } from '../helpers/createStyles';\nimport buildPadLeft from './buildPadLeft';\nimport buildPadRight from './buildPadRight';\n\nconst buildPadX = (valPadX: string, insertStyles = false): IStyles => {\n  return buildXY({\n    values: valPadX,\n    builderA: buildPadRight,\n    builderB: buildPadLeft,\n    insertStyles,\n  });\n};\n\nexport default buildPadX;\n","import buildXY from '../helpers/buildXY';\nimport { IStyles } from '../helpers/createStyles';\nimport buildPadBottom from './buildPadBottom';\nimport buildPadTop from './buildPadTop';\n\nconst buildPadY = (valPadX: string, insertStyles = false): IStyles => {\n  return buildXY({\n    values: valPadX,\n    builderA: buildPadTop,\n    builderB: buildPadBottom,\n    insertStyles,\n  });\n};\n\nexport default buildPadY;\n","import buildXY from '../helpers/buildXY';\nimport { IStyles } from '../helpers/createStyles';\nimport buildMarLeft from './buildMarLeft';\nimport buildMarRight from './buildMarRight';\n\nconst buildMarX = (valMarX: string, insertStyles = false): IStyles => {\n  return buildXY({\n    values: valMarX,\n    builderA: buildMarRight,\n    builderB: buildMarLeft,\n    insertStyles,\n  });\n};\n\nexport default buildMarX;\n","import buildXY from '../helpers/buildXY';\nimport { IStyles } from '../helpers/createStyles';\nimport buildMarBottom from './buildMarBottom';\nimport buildMarTop from './buildMarTop';\n\nconst buildMarY = (valMarY: string, insertStyles = false): IStyles => {\n  return buildXY({\n    values: valMarY,\n    builderA: buildMarTop,\n    builderB: buildMarBottom,\n    insertStyles,\n  });\n};\n\nexport default buildMarY;\n","import buildCols from '../methods/buildCols';\nimport buildFlex from '../methods/buildFlex';\nimport buildPad from '../methods/buildPad';\nimport buildPadTop from '../methods/buildPadTop';\nimport buildPadRight from '../methods/buildPadRight';\nimport buildPadBottom from '../methods/buildPadBottom';\nimport buildPadLeft from '../methods/buildPadLeft';\nimport buildMar from '../methods/buildMar';\nimport buildMarTop from '../methods/buildMarTop';\nimport buildMarRight from '../methods/buildMarRight';\nimport buildMarBottom from '../methods/buildMarBottom';\nimport buildMarLeft from '../methods/buildMarLeft';\nimport buildMaxWidth from '../methods/buildMaxWidth';\nimport buildMaxHeight from '../methods/buildMaxHeight';\nimport buildMinWidth from '../methods/buildMinWidth';\nimport buildMinHeight from '../methods/buildMinHeight';\nimport buildHeight from '../methods/buildHeight';\nimport buildWidth from '../methods/buildWidth';\nimport buildPosition from '../methods/buildPosition';\nimport buildTop from '../methods/buildTop';\nimport buildRight from '../methods/buildRight';\nimport buildBottom from '../methods/buildBottom';\nimport buildLeft from '../methods/buildLeft';\nimport buildDisplay from '../methods/buildDisplay';\nimport buildPadX from '../methods/buildPadX';\nimport buildPadY from '../methods/buildPadY';\nimport buildMarX from '../methods/buildMarX';\nimport buildMarY from '../methods/buildMarY';\n\nimport { IStyles } from '../helpers/createStyles';\n\ntype TDirectiveNameBase =\n  | 'cols'\n  | 'pad'\n  | 'padt'\n  | 'padr'\n  | 'padb'\n  | 'padl'\n  | 'padx'\n  | 'pady'\n  | 'mar'\n  | 'mart'\n  | 'marr'\n  | 'marb'\n  | 'marl'\n  | 'marx'\n  | 'mary'\n  | 'flex'\n  | 'mxw'\n  | 'mxh'\n  | 'miw'\n  | 'mih'\n  | 'wdh'\n  | 'hgt'\n  | 'pos'\n  | 't'\n  | 'r'\n  | 'b'\n  | 'l'\n  | 'd';\n\ntype TDirectiveNameExtended =\n  | 'c'\n  | 'fx'\n  | 'p'\n  | 'padding'\n  | 'pt'\n  | 'padding-top'\n  | 'pr'\n  | 'padding-right'\n  | 'pb'\n  | 'padding-bottom'\n  | 'pl'\n  | 'padding-left'\n  | 'py'\n  | 'padding-y'\n  | 'px'\n  | 'padding-x'\n  | 'my'\n  | 'margin-y'\n  | 'mx'\n  | 'margin-x'\n  | 'm'\n  | 'margin'\n  | 'mt'\n  | 'margin-top'\n  | 'mr'\n  | 'margin-right'\n  | 'mb'\n  | 'margin-bottom'\n  | 'ml'\n  | 'margin-left'\n  | 'w'\n  | 'width'\n  | 'h'\n  | 'height'\n  | 'max-width'\n  | 'max-height'\n  | 'min-width'\n  | 'min-height'\n  | 'position'\n  | 'top'\n  | 'right'\n  | 'bottom'\n  | 'left'\n  | 'display';\n\nexport type TDirectiveName = TDirectiveNameBase | TDirectiveNameExtended;\n\nexport interface IProcessor {\n  build: (values: string, insertStyles: boolean) => IStyles | Error;\n  ruleCss: string | string[];\n  classPrefix: string;\n}\n\nconst processorsBase: Record<TDirectiveNameBase, IProcessor> = {\n  cols: {\n    build: buildCols,\n    ruleCss: 'width',\n    classPrefix: 'c',\n  },\n\n  // Paddings\n  pad: {\n    build: buildPad,\n    ruleCss: 'padding',\n    classPrefix: 'p',\n  },\n  padt: {\n    build: buildPadTop,\n    ruleCss: 'padding-top',\n    classPrefix: 'pt',\n  },\n  padr: {\n    build: buildPadRight,\n    ruleCss: 'padding-right',\n    classPrefix: 'pr',\n  },\n  padb: {\n    build: buildPadBottom,\n    ruleCss: 'padding-bottom',\n    classPrefix: 'pb',\n  },\n  padl: {\n    build: buildPadLeft,\n    ruleCss: 'padding-left',\n    classPrefix: 'pl',\n  },\n  padx: {\n    build: buildPadX,\n    ruleCss: ['padding-left', 'padding-right'],\n    classPrefix: 'px',\n  },\n  pady: {\n    build: buildPadY,\n    ruleCss: ['padding-top', 'padding-bottom'],\n    classPrefix: 'py',\n  },\n\n  // Margin\n  mar: {\n    build: buildMar,\n    ruleCss: 'margin',\n    classPrefix: 'm',\n  },\n  mart: {\n    build: buildMarTop,\n    ruleCss: 'margin-top',\n    classPrefix: 'mt',\n  },\n  marr: {\n    build: buildMarRight,\n    ruleCss: 'margin-right',\n    classPrefix: 'mr',\n  },\n  marb: {\n    build: buildMarBottom,\n    ruleCss: 'margin-bottom',\n    classPrefix: 'mb',\n  },\n  marl: {\n    build: buildMarLeft,\n    ruleCss: 'margin-left',\n    classPrefix: 'ml',\n  },\n  marx: {\n    build: buildMarX,\n    ruleCss: ['margin-left', 'margin-right'],\n    classPrefix: 'px',\n  },\n  mary: {\n    build: buildMarY,\n    ruleCss: ['margin-top', 'margin-bottom'],\n    classPrefix: 'py',\n  },\n\n  // Flex Box\n  flex: {\n    build: buildFlex,\n    ruleCss: 'display: flex',\n    classPrefix: 'fx',\n  },\n\n  // Max & Min Width & Height\n  mxw: {\n    build: buildMaxWidth,\n    ruleCss: 'max-width',\n    classPrefix: 'mxw',\n  },\n\n  mxh: {\n    build: buildMaxHeight,\n    ruleCss: 'max-height',\n    classPrefix: 'mxh',\n  },\n\n  miw: {\n    build: buildMinWidth,\n    ruleCss: 'min-width',\n    classPrefix: 'miw',\n  },\n\n  mih: {\n    build: buildMinHeight,\n    ruleCss: 'min-height',\n    classPrefix: 'mih',\n  },\n\n  // Width & Height\n  wdh: {\n    build: buildWidth,\n    ruleCss: 'width',\n    classPrefix: 'w',\n  },\n\n  hgt: {\n    build: buildHeight,\n    ruleCss: 'height',\n    classPrefix: 'h',\n  },\n\n  // Position\n  pos: {\n    build: buildPosition,\n    ruleCss: 'position',\n    classPrefix: 'pos',\n  },\n  t: {\n    build: buildTop,\n    ruleCss: 'top',\n    classPrefix: 't',\n  },\n  r: {\n    build: buildRight,\n    ruleCss: 'right',\n    classPrefix: 'r',\n  },\n  b: {\n    build: buildBottom,\n    ruleCss: 'bottom',\n    classPrefix: 'b',\n  },\n  l: {\n    build: buildLeft,\n    ruleCss: 'left',\n    classPrefix: 'l',\n  },\n  d: {\n    build: buildDisplay,\n    ruleCss: 'display',\n    classPrefix: 'd',\n  },\n};\n\nexport const processors: Record<TDirectiveName, IProcessor> = {\n  ...processorsBase,\n  c: processorsBase.cols,\n  fx: processorsBase.flex,\n  p: processorsBase.pad,\n  padding: processorsBase.pad,\n  pt: processorsBase.padt,\n  'padding-top': processorsBase.padt,\n  pr: processorsBase.padr,\n  'padding-right': processorsBase.padr,\n  pb: processorsBase.padb,\n  'padding-bottom': processorsBase.padb,\n  pl: processorsBase.padl,\n  'padding-left': processorsBase.padl,\n  py: processorsBase.pady,\n  'padding-y': processorsBase.pady,\n  px: processorsBase.padx,\n  'padding-x': processorsBase.padx,\n  m: processorsBase.mar,\n  margin: processorsBase.mar,\n  mt: processorsBase.mart,\n  'margin-top': processorsBase.mart,\n  mr: processorsBase.marr,\n  'margin-right': processorsBase.marr,\n  mb: processorsBase.marb,\n  'margin-bottom': processorsBase.marb,\n  ml: processorsBase.marl,\n  'margin-left': processorsBase.marl,\n  my: processorsBase.mary,\n  'margin-y': processorsBase.mary,\n  mx: processorsBase.marx,\n  'margin-x': processorsBase.marx,\n  w: processorsBase.wdh,\n  width: processorsBase.wdh,\n  h: processorsBase.hgt,\n  height: processorsBase.hgt,\n  'max-width': processorsBase.mxw,\n  'max-height': processorsBase.mxh,\n  'min-width': processorsBase.miw,\n  'min-height': processorsBase.mih,\n  position: processorsBase.pos,\n  top: processorsBase.t,\n  right: processorsBase.r,\n  bottom: processorsBase.b,\n  left: processorsBase.l,\n  display: processorsBase.d,\n};\n","import { processors, TDirectiveName } from '../config/processors';\r\n\r\nconst getParameters = (\r\n  Node: HTMLElement | Element\r\n): Partial<Record<TDirectiveName, string>> => {\r\n  const params: Partial<Record<TDirectiveName, string>> = {};\r\n  const attrs = Node.attributes;\r\n  const paramNames = Object.keys(processors);\r\n  Array.prototype.forEach.call(attrs, (attr) => {\r\n    if (paramNames.includes(attr.name)) {\r\n      if (attr.value !== '')\r\n        params[attr.name as TDirectiveName] = attr.value\r\n          .trim()\r\n          .split(' ')\r\n          .filter((item: string) => item)\r\n          .join(' ');\r\n    }\r\n  });\r\n  return params;\r\n};\r\n\r\nexport default getParameters;\r\n","import { processors, TDirectiveName } from '../config/processors';\nimport { IStyles } from '../helpers/createStyles';\n\nexport interface IBuildResult {\n  [prop: string]: IStyles | boolean;\n}\n\nconst build = (\n  obj: Partial<Record<TDirectiveName, string>>,\n  insertStyles = false\n): Partial<IBuildResult> | Error => {\n  const rObj: Partial<IBuildResult> = {};\n  let err: Error | boolean = false;\n  for (const prop in obj) {\n    const propData = processors[prop as TDirectiveName];\n    const objStyles: IStyles | Error = propData.build(\n      obj[prop as TDirectiveName] as string,\n      insertStyles\n    );\n    if (objStyles instanceof Error) {\n      err = objStyles;\n      break;\n    } else {\n      rObj[prop] = objStyles;\n    }\n  }\n\n  if (err) return err;\n  return rObj;\n};\n\nexport default build;\n","import getConfig from '../config/main';\n\nconst addClasses = (\n  Node: HTMLElement | Element,\n  classesNames: string,\n  overwrite?: boolean\n): Promise<void> => {\n  return new Promise((resolve) => {\n    const config = getConfig();\n    const names = classesNames.split(' ');\n    let classesToAdd: string[] = names;\n    if (!overwrite) {\n      classesToAdd = names.filter((name) => !Node.classList.contains(name));\n      if (!classesToAdd.length) {\n        resolve();\n        return;\n      }\n    }\n\n    const obsNode = new config.context.MutationObserver((mutations) => {\n      const target = mutations[0].target;\n      const currentClasses = (target as Element).className.split(' ');\n      const containsAll = names.every((element) =>\n        currentClasses.includes(element)\n      );\n      if (containsAll) {\n        obsNode.disconnect();\n        resolve();\n      }\n    });\n    obsNode.observe(Node, {\n      childList: false,\n      subtree: false,\n      attributes: true,\n      attributeFilter: ['class'],\n      characterData: false,\n    });\n\n    if (overwrite) {\n      Node.className = classesNames;\n    } else {\n      const space = Node.hasAttribute('class') ? ' ' : '';\n      Node.className += space + classesToAdd.join(' ');\n    }\n  });\n};\n\nexport default addClasses;\n","import getConfig from '../config/main';\n\nexport const removeProp = (\n  Node: HTMLElement | Element,\n  propName: string,\n  context: Window & typeof globalThis\n): Promise<void> => {\n  return new Promise((resolve) => {\n    if (!Node.hasAttribute(propName)) {\n      resolve();\n      return;\n    }\n    const obsNode = new context.MutationObserver(() => {\n      obsNode.disconnect();\n      resolve();\n    });\n    obsNode.observe(Node, {\n      childList: false,\n      subtree: false,\n      attributes: true,\n      attributeFilter: [propName],\n      characterData: false,\n    });\n    Node.removeAttribute(propName);\n  });\n};\n\nexport const removeProps = (\n  Node: HTMLElement | Element,\n  propNames: string[],\n  context: Window & typeof globalThis\n): Promise<void> => {\n  return new Promise((resolve) => {\n    const promises = propNames.map((name) => removeProp(Node, name, context));\n    Promise.all(promises).then(() => resolve());\n  });\n};\n\nconst removeAttr = (\n  Node: HTMLElement | Element,\n  propNames: string | string[]\n): Promise<void> => {\n  return new Promise((resolve) => {\n    const config = getConfig();\n    if (Array.isArray(propNames)) {\n      removeProps(Node, propNames, config.context).then(resolve);\n    } else {\n      removeProp(Node, propNames, config.context).then(resolve);\n    }\n  });\n};\n\nexport default removeAttr;\n","import getConfig from '../config/main';\nimport addClasses from '../utils/addClasses';\nimport removeAttr from '../utils/removeAttr';\n\nexport interface IEventReady {\n  node: HTMLElement | Element;\n  directive: string | string[];\n  classes: string;\n  resolve: (value: void | Error | PromiseLike<void | Error>) => void;\n}\n\nconst eventReady = ({ node, directive, classes, resolve }: IEventReady) => {\n  const config = getConfig();\n  removeAttr(node, directive)\n    .then(() => addClasses(node, classes))\n    .then(() => {\n      resolve();\n      const event = new config.context.CustomEvent('layout:ready');\n      node.dispatchEvent(event);\n    });\n};\n\nexport default eventReady;\n","import { IStyles } from '../helpers/createStyles';\nimport regError from '../helpers/regError';\nimport build, { IBuildResult } from './build';\nimport getParameters from './getParameters';\nimport { TDirectiveName } from '../config/processors';\nimport eventReady from '../helpers/eventReady';\n\nconst set = (\n  Node: HTMLElement | Element,\n  parameters?: Partial<Record<TDirectiveName, string>>\n): Promise<void | Error> => {\n  return new Promise((resolve, reject) => {\n    const params = parameters || getParameters(Node);\n    const arrParams = Object.keys(params);\n    if (!arrParams.length) {\n      const err = regError(\n        'Parameter Missing',\n        \"don't exists any parameter to process\",\n        Node\n      );\n      reject(err);\n      return;\n    }\n\n    const toBuild: Partial<Record<TDirectiveName, string>> = {};\n    for (const prop in params) {\n      toBuild[prop as TDirectiveName] = params[prop as TDirectiveName];\n    }\n\n    // creating classes names and inserting that classes to the core\n    const classesObj = build(toBuild as Record<TDirectiveName, string>, true);\n    if (classesObj instanceof Error) {\n      reject(classesObj);\n      return;\n    }\n\n    // adding classes\n    const classes = classesObj as Partial<IBuildResult>;\n    const classesNames = Object.keys(classes)\n      .map((name: string) => Object.keys(classes[name] as IStyles))\n      .flat()\n      .join(' ');\n\n    // removing unnecessary props\n    eventReady({\n      node: Node,\n      directive: arrParams,\n      classes: classesNames,\n      resolve,\n    });\n  });\n};\n\nexport default set;\n","import regError from './regError';\n\nconst directiveValues = (\n  Node: HTMLElement | Element,\n  directives: string[]\n): string | Error => {\n  const directiveValues = directives\n    .map((item) => Node.getAttribute(item))\n    .filter((item) => item)\n    .join(' ');\n  return !directiveValues\n    ? regError(\n        'Empty',\n        'The value of the directives \"' + directives.join(', ') + '\" are empty',\n        Node\n      )\n    : directiveValues;\n};\n\nexport default directiveValues;\n","import buildFlex from './buildFlex';\nimport eventReady from '../helpers/eventReady';\nimport directiveValues from '../helpers/directiveValues';\n\nconst setFlex = (\n  Node: HTMLElement | Element,\n  flexValues?: string\n): Promise<void | Error> => {\n  return new Promise((resolve, reject) => {\n    const values = flexValues || directiveValues(Node, ['flex', 'fx']);\n    if (!values) return reject(values);\n\n    // Creating, inserting, and adding classNames of rules in Node.\n    const objStyles = buildFlex(values as string, true);\n    if (objStyles instanceof Error) {\n      reject(objStyles);\n      return;\n    }\n\n    // removing prop of Node and adding the corresponding classes\n    eventReady({\n      node: Node,\n      directive: 'flex',\n      classes: Object.keys(objStyles).join(' '),\n      resolve,\n    });\n  });\n};\n\nexport default setFlex;\n","import buildCols from './buildCols';\nimport eventReady from '../helpers/eventReady';\nimport directiveValues from '../helpers/directiveValues';\n\nconst setCols = (\n  Node: HTMLElement | Element,\n  columns?: string\n): Promise<void | Error> => {\n  return new Promise((resolve, reject) => {\n    const values = columns || directiveValues(Node, ['c', 'cols']);\n    if (!values) return reject(values);\n\n    // Creating, inserting, and adding classNames of rules in Node.\n    const objStyles = buildCols(values as string, true);\n    if (objStyles instanceof Error) {\n      reject(objStyles);\n      return;\n    }\n    const classesToAdd = Object.keys(objStyles).join(' ');\n\n    // removing prop of Node and adding the corresponding classes\n    eventReady({\n      node: Node,\n      directive: 'cols',\n      classes: classesToAdd,\n      resolve,\n    });\n  });\n};\n\nexport default setCols;\n","import buildAttr from '../helpers/buildAttr';\nimport { TDirectiveName } from '../config/processors';\nimport eventReady from '../helpers/eventReady';\nimport directiveValues from './directiveValues';\n\nconst setAttr = (\n  Node: HTMLElement | Element,\n  directives: TDirectiveName[],\n  vals?: string\n): Promise<void | Error> => {\n  return new Promise((resolve, reject) => {\n    const values = vals || directiveValues(Node, directives);\n    if (!values) return reject(values);\n\n    // Creating, inserting, and adding classNames of rules in Node.\n    const directive = directives[0];\n    const objStyles = buildAttr(values as string, directive, true);\n    const classesToAdd = Object.keys(objStyles).join(' ');\n\n    // removing prop of Node and adding the corresponding classes\n    eventReady({\n      node: Node,\n      directive,\n      classes: classesToAdd,\n      resolve,\n    });\n  });\n};\n\nexport default setAttr;\n","import setAttr from '../helpers/setAttr';\n\nconst setHeight = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['hgt', 'h'], values);\n};\n\nexport default setHeight;\n","import setAttr from '../helpers/setAttr';\n\nconst setMarBottom = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['marb', 'mb', 'margin-bottom'], values);\n};\n\nexport default setMarBottom;\n","import setAttr from '../helpers/setAttr';\n\nconst setMarLeft = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['marl', 'ml', 'margin-left'], values);\n};\n\nexport default setMarLeft;\n","import setAttr from '../helpers/setAttr';\n\nconst setMarRight = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['marr', 'mr', 'margin-right'], values);\n};\n\nexport default setMarRight;\n","import setAttr from '../helpers/setAttr';\n\nconst setMar = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['mar', 'm', 'margin'], values);\n};\n\nexport default setMar;\n","import setAttr from '../helpers/setAttr';\n\nconst setMarTop = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['mart', 'mt', 'margin-top'], values);\n};\n\nexport default setMarTop;\n","import setAttr from '../helpers/setAttr';\n\nconst setMaxWidth = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['mxw', 'max-width'], values);\n};\n\nexport default setMaxWidth;\n","import setAttr from '../helpers/setAttr';\n\nconst setMinHeight = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['mih', 'min-height'], values);\n};\n\nexport default setMinHeight;\n","import setAttr from '../helpers/setAttr';\n\nconst setMinWidth = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['miw', 'min-width'], values);\n};\n\nexport default setMinWidth;\n","import setAttr from '../helpers/setAttr';\n\nconst setPadBottom = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['padb', 'pb', 'padding-bottom'], values);\n};\n\nexport default setPadBottom;\n","import setAttr from '../helpers/setAttr';\n\nconst setPadLeft = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['padl', 'pl', 'padding-left'], values);\n};\n\nexport default setPadLeft;\n","import setAttr from '../helpers/setAttr';\n\nconst setPadRight = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['padr', 'pr', 'padding-right'], values);\n};\n\nexport default setPadRight;\n","import setAttr from '../helpers/setAttr';\n\nconst setPad = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['pad', 'p', 'padding'], values);\n};\n\nexport default setPad;\n","import setAttr from '../helpers/setAttr';\n\nconst setPadTop = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['padt', 'pt', 'padding-top'], values);\n};\n\nexport default setPadTop;\n","import setAttr from '../helpers/setAttr';\n\nconst setWidth = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['wdh', 'width'], values);\n};\n\nexport default setWidth;\n","import setAttr from '../helpers/setAttr';\n\nconst setMaxHeight = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['mxh', 'max-height'], values);\n};\n\nexport default setMaxHeight;\n","import setAttr from '../helpers/setAttr';\n\nconst setPosition = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['pos', 'position'], values);\n};\n\nexport default setPosition;\n","import setAttr from '../helpers/setAttr';\n\nconst setTop = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['t', 'top'], values);\n};\n\nexport default setTop;\n","import setAttr from '../helpers/setAttr';\n\nconst setRight = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['r', 'right'], values);\n};\n\nexport default setRight;\n","import setAttr from '../helpers/setAttr';\n\nconst setBottom = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['b', 'bottom'], values);\n};\n\nexport default setBottom;\n","import setAttr from '../helpers/setAttr';\n\nconst setLeft = (\n  Node: HTMLElement | Element,\n  values?: string\n): Promise<void | Error> => {\n  return setAttr(Node, ['l', 'left'], values);\n};\n\nexport default setLeft;\n","import { IStyles } from './createStyles';\nimport directiveValues from './directiveValues';\nimport eventReady from './eventReady';\n\nexport interface ISetterXY {\n  Node: HTMLElement | Element;\n  directives: string[];\n  builder: (valPadX: string, insertStyles: boolean) => IStyles;\n  vals?: string;\n}\n\nconst setterXY = (data: ISetterXY): Promise<void | Error> => {\n  return new Promise((resolve, reject) => {\n    const values = data.vals || directiveValues(data.Node, data.directives);\n    if (!values) return reject(values);\n\n    // Creating, inserting, and adding classNames of rules in Node.\n    const objStyles = data.builder(values as string, true);\n    const classesToAdd = Object.keys(objStyles).join(' ');\n\n    // removing prop of Node and adding the corresponding classes\n    eventReady({\n      node: data.Node,\n      directive: data.directives,\n      classes: classesToAdd,\n      resolve,\n    });\n  });\n};\n\nexport default setterXY;\n","import buildPadX from './buildPadX';\nimport setterXY from '../helpers/setterXY';\n\nconst setPadX = (\n  Node: HTMLElement | Element,\n  vals?: string\n): Promise<void | Error> => {\n  return setterXY({\n    Node,\n    directives: ['padx', 'px', 'padding-x'],\n    builder: buildPadX,\n    vals,\n  });\n};\n\nexport default setPadX;\n","import buildPadY from './buildPadY';\nimport setterXY from '../helpers/setterXY';\n\nconst setPadY = (\n  Node: HTMLElement | Element,\n  vals?: string\n): Promise<void | Error> => {\n  return setterXY({\n    Node,\n    directives: ['pady', 'py', 'padding-y'],\n    builder: buildPadY,\n    vals,\n  });\n};\n\nexport default setPadY;\n","import buildMarX from './buildMarX';\nimport setterXY from '../helpers/setterXY';\n\nconst setMarX = (\n  Node: HTMLElement | Element,\n  vals?: string\n): Promise<void | Error> => {\n  return setterXY({\n    Node,\n    directives: ['marx', 'px', 'margin-x'],\n    builder: buildMarX,\n    vals,\n  });\n};\n\nexport default setMarX;\n","import buildMarY from './buildMarY';\nimport setterXY from '../helpers/setterXY';\n\nconst setMarY = (\n  Node: HTMLElement | Element,\n  vals?: string\n): Promise<void | Error> => {\n  return setterXY({\n    Node,\n    directives: ['mary', 'py', 'margin-y'],\n    builder: buildMarY,\n    vals,\n  });\n};\n\nexport default setMarY;\n","import { TDirectiveName } from './../config/processors';\r\nimport { processors } from '../config/processors';\r\nimport addClasses from '../utils/addClasses';\r\nimport removeAttr from '../utils/removeAttr';\r\n\r\nconst reset = (Node: HTMLElement | Element): Promise<void> => {\r\n  return new Promise((resolve) => {\r\n    const classPrefixes = new Set(\r\n      Object.keys(processors).map(\r\n        (item) => processors[item as TDirectiveName].classPrefix\r\n      )\r\n    );\r\n    const layouterClasses = [...classPrefixes];\r\n    const restClass = Node.className.split(' ').filter((name) => {\r\n      if (!name.includes('-')) {\r\n        return true;\r\n      } else {\r\n        const findClass = layouterClasses.find((item) => {\r\n          const nLength = item.length;\r\n          const namePrefix = name.substring(0, nLength + 1);\r\n          return namePrefix === item + '-';\r\n        });\r\n        return !findClass;\r\n      }\r\n    });\r\n\r\n    if (restClass.length) {\r\n      const classesName = restClass.join(' ');\r\n      addClasses(Node, classesName, true).then(() => {\r\n        resolve();\r\n      });\r\n    } else {\r\n      removeAttr(Node, 'class').then(() => {\r\n        resolve();\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport default reset;\r\n","import { ILayouter } from './../layouter';\nimport { processors } from '../config/processors';\n\nconst nodesNotAccepted = [\n  'animate',\n  'animateMotion',\n  'animateTransform',\n  'circle',\n  'clipPath',\n  'defs',\n  'desc',\n  'discard',\n  'ellipse',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'filter',\n  'foreignObject',\n  'g',\n  'hatch',\n  'hatchpath',\n  'image',\n  'line',\n  'linearGradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'set',\n  'stop',\n  'style',\n  'svg',\n  'switch',\n  'symbol',\n  'text',\n  'textPath',\n  'title',\n  'tspan',\n  'use',\n  'view',\n];\n\nconst searchAndProcess = (\n  layouter: ILayouter,\n  context: Document | HTMLElement | Element\n) => {\n  return new Promise((resolve) => {\n    const props = Object.keys(processors);\n    const attrs = props.map((prop) => `[${prop}]`).join(', ');\n    const nodes = context.querySelectorAll(attrs);\n    if (!nodes.length) {\n      resolve(layouter);\n      return;\n    }\n\n    const setNodes = new Set();\n    Array.prototype.filter\n      .call(\n        nodes,\n        (itemNode) =>\n          !nodesNotAccepted.includes(itemNode.nodeName.toLowerCase())\n      )\n      .forEach((item) => setNodes.add(item));\n    const promises: Promise<void | Error>[] = [];\n    setNodes.forEach((node) => {\n      promises.push(layouter.set(node as Element | HTMLElement));\n    });\n    Promise.all(promises).then(resolve);\n  });\n};\n\nexport default searchAndProcess;\n","import { ILayouter } from './../layouter';\nimport { processors } from '../config/processors';\nimport getConfig from '../config/main';\nimport searchAndProcess from './searchAndProcess';\n\nconst mainObserver = (layouter: ILayouter) => {\n  const config = getConfig();\n  const props = Object.keys(processors);\n  const obsBody = new layouter.context.MutationObserver((mutations) => {\n    for (const mutation of mutations) {\n      if (mutation.type === 'childList') {\n        if (!mutation.addedNodes.length) {\n          continue;\n        }\n        mutation.addedNodes.forEach((node) => {\n          if (node instanceof HTMLElement) {\n            const props = layouter.getParameters(node);\n            if (Object.keys(props).length) {\n              layouter.set(node, props);\n            }\n            searchAndProcess(layouter, node);\n          }\n        });\n      } else if (mutation.type === 'attributes') {\n        const node = mutation.target;\n        if (node instanceof HTMLElement) {\n          const props = layouter.getParameters(node);\n          if (Object.keys(props).length) {\n            layouter.set(node, props);\n          }\n        }\n      }\n    }\n  });\n  const observerOptions = {\n    childList: true,\n    subtree: true,\n    attributes: true,\n    attributeFilter: props,\n    characterData: false,\n  };\n  obsBody.observe(config.context.document.body, observerOptions);\n};\n\nexport default mainObserver;\n","import { IConfig, IConfigUser, setConfig, updateConfig } from './config/main';\nimport getParameters from './methods/getParameters';\n\nimport build from './methods/build';\nimport buildCols from './methods/buildCols';\nimport buildFlex from './methods/buildFlex';\nimport buildPad from './methods/buildPad';\nimport buildPadTop from './methods/buildPadTop';\nimport buildPadRight from './methods/buildPadRight';\nimport buildPadBottom from './methods/buildPadBottom';\nimport buildPadLeft from './methods/buildPadLeft';\nimport buildMar from './methods/buildMar';\nimport buildMarTop from './methods/buildMarTop';\nimport buildMarRight from './methods/buildMarRight';\nimport buildMarBottom from './methods/buildMarBottom';\nimport buildMarLeft from './methods/buildMarLeft';\nimport buildMaxWidth from './methods/buildMaxWidth';\nimport buildMaxHeight from './methods/buildMaxHeight';\nimport buildMinWidth from './methods/buildMinWidth';\nimport buildMinHeight from './methods/buildMinHeight';\nimport buildHeight from './methods/buildHeight';\nimport buildWidth from './methods/buildWidth';\nimport buildPosition from './methods/buildPosition';\nimport buildTop from './methods/buildTop';\nimport buildRight from './methods/buildRight';\nimport buildBottom from './methods/buildBottom';\nimport buildLeft from './methods/buildLeft';\nimport buildPadX from './methods/buildPadX';\nimport buildPadY from './methods/buildPadY';\nimport buildMarX from './methods/buildMarX';\nimport buildMarY from './methods/buildMarY';\n\nimport set from './methods/set';\nimport setFlex from './methods/setFlex';\nimport setCols from './methods/SetCols';\nimport setHeight from './methods/setHeight';\nimport setMarBottom from './methods/setMarBottom';\nimport setMarLeft from './methods/setMarLeft';\nimport setMarRight from './methods/setMarRight';\nimport setMar from './methods/setMar';\nimport setMarTop from './methods/setMarTop';\nimport setMaxWidth from './methods/setMaxWidth';\nimport setMinHeight from './methods/setMinHeight';\nimport setMinWidth from './methods/setMinWidth';\nimport setPadBottom from './methods/setPadBottom';\nimport setPadLeft from './methods/setPadLeft';\nimport setPadRight from './methods/setPadRight';\nimport setPad from './methods/setPad';\nimport setPadTop from './methods/setPadTop';\nimport setWidth from './methods/setWidth';\nimport setMaxHeight from './methods/setMaxHeight';\nimport setPosition from './methods/setPosition';\nimport setTop from './methods/setTop';\nimport setRight from './methods/setRight';\nimport setBottom from './methods/setBottom';\nimport setLeft from './methods/setLeft';\nimport setPadX from './methods/setPadX';\nimport setPadY from './methods/setPadY';\nimport setMarX from './methods/setMarX';\nimport setMarY from './methods/setMarY';\n\nimport insertRules from './methods/insertRules';\nimport reset from './methods/reset';\n\nimport { IStyles } from './helpers/createStyles';\nimport { IBuildResult } from './methods/build';\nimport searchAndProcess from './helpers/searchAndProcess';\nimport mainObserver from './helpers/mainObserver';\nimport { TDirectiveName } from './config/processors';\n\nexport interface ILayouter extends IConfig {\n  getParameters: (\n    Node: HTMLElement | Element\n  ) => Partial<Record<TDirectiveName, string>>;\n  updateConfig: (userConfig: Partial<Omit<IConfigUser, 'bridge'>>) => IConfig;\n  build: (\n    obj: Partial<Record<TDirectiveName, string>>,\n    insertStyles?: boolean\n  ) => Partial<IBuildResult> | Error;\n  buildCols: (valCols: string, insertStyles?: boolean) => IStyles | Error;\n  buildFlex: (valFlex: string, insertStyles?: boolean) => IStyles | Error;\n  buildPad: (valPads: string, insertStyles?: boolean) => IStyles;\n  buildPadTop: (valPadTop: string, insertStyles?: boolean) => IStyles;\n  buildPadRight: (valPadRight: string, insertStyles?: boolean) => IStyles;\n  buildPadBottom: (valPadBottom: string, insertStyles?: boolean) => IStyles;\n  buildPadLeft: (valPadLeft: string, insertStyles?: boolean) => IStyles;\n  buildPadX: (valPadX: string, insertStyles?: boolean) => IStyles;\n  buildPadY: (valPadX: string, insertStyles?: boolean) => IStyles;\n  buildMar: (valMars: string, insertStyles?: boolean) => IStyles;\n  buildMarTop: (valMarTop: string, insertStyles?: boolean) => IStyles;\n  buildMarRight: (valMarRight: string, insertStyles?: boolean) => IStyles;\n  buildMarBottom: (valMarBottom: string, insertStyles?: boolean) => IStyles;\n  buildMarLeft: (valMarLeft: string, insertStyles?: boolean) => IStyles;\n  buildMarX: (valPadX: string, insertStyles?: boolean) => IStyles;\n  buildMarY: (valPadX: string, insertStyles?: boolean) => IStyles;\n  buildMaxWidth: (valMaxWidth: string, insertStyles?: boolean) => IStyles;\n  buildMaxHeight: (valMaxHeight: string, insertStyles?: boolean) => IStyles;\n  buildMinWidth: (valMinWidth: string, insertStyles?: boolean) => IStyles;\n  buildMinHeight: (valMinHeight: string, insertStyles?: boolean) => IStyles;\n  buildHeight: (valHeight: string, insertStyles?: boolean) => IStyles;\n  buildWidth: (valWidth: string, insertStyles?: boolean) => IStyles;\n  buildPosition: (\n    valPosition: string,\n    insertStyles?: boolean\n  ) => IStyles | Error;\n  buildTop: (valTop: string, insertStyles?: boolean) => IStyles | Error;\n  buildRight: (valRight: string, insertStyles?: boolean) => IStyles | Error;\n  buildBottom: (valBottom: string, insertStyles?: boolean) => IStyles | Error;\n  buildLeft: (valLeft: string, insertStyles?: boolean) => IStyles | Error;\n\n  set: (\n    Node: HTMLElement | Element,\n    parameters?: Partial<Record<TDirectiveName, string>>\n  ) => Promise<void | Error>;\n  setCols: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setFlex: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMar: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMarTop: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMarRight: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMarBottom: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMarLeft: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMarX: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMarY: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setPad: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setPadTop: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setPadRight: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setPadBottom: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setPadLeft: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setPadX: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setPadY: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n\n  setWidth: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMinWidth: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMaxWidth: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setHeight: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMinHeight: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setMaxHeight: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setPosition: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n\n  setTop: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setRight: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setBottom: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n  setLeft: (\n    Node: HTMLElement | Element,\n    values?: string\n  ) => Promise<void | Error>;\n\n  insertRules: (objStyles: IStyles) => void;\n  reset: (Node: HTMLElement | Element) => Promise<void>;\n  version: string;\n}\n\ndeclare global {\n  interface Window {\n    layouter: ILayouter;\n  }\n}\n\nconst layouter = (\n  context: Window & typeof globalThis,\n  userConfig: Partial<IConfigUser> = {}\n): ILayouter => {\n  const config = setConfig(context, userConfig);\n\n  const instance = {\n    ...config,\n    getParameters,\n    updateConfig,\n    insertRules,\n    build,\n    buildCols,\n    buildFlex,\n    buildPad,\n    buildPadTop,\n    buildPadRight,\n    buildPadBottom,\n    buildPadLeft,\n    buildPadX,\n    buildPadY,\n    buildMar,\n    buildMarTop,\n    buildMarRight,\n    buildMarBottom,\n    buildMarLeft,\n    buildMarX,\n    buildMarY,\n    buildMaxWidth,\n    buildMaxHeight,\n    buildMinWidth,\n    buildMinHeight,\n    buildHeight,\n    buildWidth,\n    set,\n    setCols,\n    setFlex,\n    setMar,\n    setMarTop,\n    setMarRight,\n    setMarBottom,\n    setMarLeft,\n    setMarX,\n    setMarY,\n    setPad,\n    setPadTop,\n    setPadRight,\n    setPadBottom,\n    setPadLeft,\n    setPadX,\n    setPadY,\n    setWidth,\n    setMinWidth,\n    setMaxWidth,\n    setHeight,\n    setMinHeight,\n    setMaxHeight,\n    reset,\n    buildPosition,\n    buildTop,\n    buildRight,\n    buildBottom,\n    buildLeft,\n    setPosition,\n    setTop,\n    setRight,\n    setBottom,\n    setLeft,\n  };\n\n  // Auto init process\n  searchAndProcess(instance, context.document).then(() => {\n    if (instance.ready) instance.ready(instance);\n    mainObserver(instance);\n  });\n\n  return instance;\n};\n\nif (typeof window !== 'undefined' && typeof exports === 'undefined') {\n  window.layouter = layouter(window);\n}\n\nexport type { TDirectiveName, IProcessor } from './config/processors';\nexport type { IConfigUser } from './config/main';\nexport default layouter;\n"],"names":["config"],"mappings":"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"}